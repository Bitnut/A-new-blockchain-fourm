{"version":3,"sources":["../../../../src/app/components/cards/CategorySelector.jsx"],"names":["validateCategory","CategorySelector","state","createCategory","shouldComponentUpdate","categoryCreateToggle","e","preventDefault","props","onChange","setState","setTimeout","refs","categoryRef","focus","categorySelectOnChange","value","target","onBlur","trending","tabIndex","disabled","categories","slice","filterNot","c","categoryOptions","map","idx","impProps","categoryInput","categorySelect","placeholder","React","Component","propTypes","id","PropTypes","string","autoComplete","func","isRequired","isEdit","bool","number","object","defaultProps","category","required","trim","cats","split","length","amount","find","indexOf","test","ownProps","global","getIn"],"mappings":"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","file":"CategorySelector.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport { cleanReduxInput } from 'app/utils/ReduxForms';\nimport tt from 'counterpart';\n\nclass CategorySelector extends React.Component {\n    static propTypes = {\n        // HTML props\n        id: PropTypes.string, // DOM id for active component (focusing, etc...)\n        autoComplete: PropTypes.string,\n        placeholder: PropTypes.string,\n        onChange: PropTypes.func.isRequired,\n        onBlur: PropTypes.func.isRequired,\n        isEdit: PropTypes.bool,\n        disabled: PropTypes.bool,\n        value: PropTypes.string,\n        tabIndex: PropTypes.number,\n\n        // redux connect (overwrite in HTML)\n        trending: PropTypes.object.isRequired, // Immutable.List\n    };\n    static defaultProps = {\n        autoComplete: 'on',\n        id: 'CategorySelectorId',\n        isEdit: false,\n    };\n    constructor() {\n        super();\n        this.state = { createCategory: true };\n        this.shouldComponentUpdate = shouldComponentUpdate(\n            this,\n            'CategorySelector'\n        );\n        this.categoryCreateToggle = e => {\n            e.preventDefault();\n            this.props.onChange();\n            this.setState({ createCategory: !this.state.createCategory });\n            setTimeout(() => this.refs.categoryRef.focus(), 300);\n        };\n        this.categorySelectOnChange = e => {\n            e.preventDefault();\n            const { value } = e.target;\n            const { onBlur } = this.props; // call onBlur to trigger validation immediately\n            if (value === 'new') {\n                this.setState({ createCategory: true });\n                setTimeout(() => {\n                    if (onBlur) onBlur();\n                    this.refs.categoryRef.focus();\n                }, 300);\n            } else this.props.onChange(e);\n        };\n    }\n    render() {\n        const { trending, tabIndex, disabled } = this.props;\n        const categories = trending\n            .slice(0, 11)\n            .filterNot(c => validateCategory(c));\n        const { createCategory } = this.state;\n\n        const categoryOptions = categories.map((c, idx) => (\n            <option value={c} key={idx}>\n                {c}\n            </option>\n        ));\n\n        const impProps = { ...this.props };\n        const categoryInput = (\n            <input\n                type=\"text\"\n                {...cleanReduxInput(impProps)}\n                ref=\"categoryRef\"\n                tabIndex={tabIndex}\n                disabled={disabled}\n                autoCapitalize=\"none\"\n            />\n        );\n\n        const categorySelect = (\n            <select\n                {...cleanReduxInput(this.props)}\n                onChange={this.categorySelectOnChange}\n                ref=\"categoryRef\"\n                tabIndex={tabIndex}\n                disabled={disabled}\n            >\n                <option value=\"\">\n                    {tt('category_selector_jsx.select_a_tag')}...\n                </option>\n                {categoryOptions}\n                <option value=\"new\">{this.props.placeholder}</option>\n            </select>\n        );\n        return <span>{createCategory ? categoryInput : categorySelect}</span>;\n    }\n}\nexport function validateCategory(category, required = true) {\n    if (!category || category.trim() === '')\n        return required ? tt('g.required') : null;\n    const cats = category.trim().split(' ');\n    return (\n        // !category || category.trim() === '' ? 'Required' :\n        cats.length > 5\n            ? tt('category_selector_jsx.use_limited_amount_of_categories', {\n                  amount: 5,\n              })\n            : cats.find(c => c.length > 24)\n              ? tt('category_selector_jsx.maximum_tag_length_is_24_characters')\n              : cats.find(c => c.split('-').length > 2)\n                ? tt('category_selector_jsx.use_one_dash')\n                : cats.find(c => c.indexOf(',') >= 0)\n                  ? tt('category_selector_jsx.use_spaces_to_separate_tags')\n                  : cats.find(c => /[A-Z]/.test(c))\n                    ? tt('category_selector_jsx.use_only_lowercase_letters')\n                    : cats.find(c => !/^[a-z0-9-#]+$/.test(c))\n                      ? tt('category_selector_jsx.use_only_allowed_characters')\n                      : cats.find(c => !/^[a-z-#]/.test(c))\n                        ? tt('category_selector_jsx.must_start_with_a_letter')\n                        : cats.find(c => !/[a-z0-9]$/.test(c))\n                          ? tt(\n                                'category_selector_jsx.must_end_with_a_letter_or_number'\n                            )\n                          : null\n    );\n}\nexport default connect((state, ownProps) => {\n    const trending = state.global.getIn(['tag_idx', 'trending']);\n    // apply translations\n    // they are used here because default prop can't acces intl property\n    const placeholder = tt('category_selector_jsx.tag_your_story');\n    return { trending, placeholder, ...ownProps };\n})(CategorySelector);\n"]}