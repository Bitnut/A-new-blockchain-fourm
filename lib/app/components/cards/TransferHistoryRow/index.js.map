{"version":3,"sources":["../../../../../src/app/components/cards/TransferHistoryRow/index.jsx"],"names":["TransferHistoryRow","props","op","context","curation_reward","author_reward","benefactor_reward","powerdown_vests","reward_vests","type","data","message","description_start","other_account","description_end","amount","split","from","to","otherAccountLink","test","fromWhere","request_id","vesting_shares","linkToComment","comment_author","comment_permlink","steem_payout","sbd_payout","author","permlink","rewards","parseFloat","reward_steem","push","reward_sbd","length","first_reward","second_reward","third_reward","reward","interest","amount_in","amount_out","open_owner","open_pays","current_pays","timestamp","maxWidth","wordWrap","memo","React","Component","GDPRUserList","includes","username","state","ownProps","undefined","vesting_payout"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;IAMMA,kB;;;;;;;;;;iCACO;AAAA,yBASD,KAAKC,KATJ;AAAA,gBAEDC,EAFC,UAEDA,EAFC;AAAA,gBAGDC,OAHC,UAGDA,OAHC;AAAA,gBAIDC,eAJC,UAIDA,eAJC;AAAA,gBAKDC,aALC,UAKDA,aALC;AAAA,gBAMDC,iBANC,UAMDA,iBANC;AAAA,gBAODC,eAPC,UAODA,eAPC;AAAA,gBAQDC,YARC,UAQDA,YARC;AAUL;;AAEA,gBAAMC,OAAOP,GAAG,CAAH,EAAMA,EAAN,CAAS,CAAT,CAAb;AACA,gBAAMQ,OAAOR,GAAG,CAAH,EAAMA,EAAN,CAAS,CAAT,CAAb;;AAEA;AACA,gBAAIS,UAAU,EAAd;;AAEA,gBAAIC,oBAAoB,EAAxB;AACA,gBAAIC,gBAAgB,IAApB;AACA,gBAAIC,kBAAkB,EAAtB;;AAEA,gBAAIL,SAAS,qBAAb,EAAoC;AAChC,oBAAMM,SAASL,KAAKK,MAAL,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAf;;AAEA,oBAAIN,KAAKO,IAAL,KAAcd,OAAlB,EAA2B;AACvB,wBAAIO,KAAKQ,EAAL,KAAY,EAAhB,EAAoB;AAChBP,kCAAU,2BACN,4DADM,EAEN,EAAEI,cAAF,EAFM,CAAV;AAIA;AACH,qBAND,MAMO;AACHJ,kCACI;AAAA;AAAA;AACK,uDACG,iEADH,EAEG,EAAEI,cAAF,EAFH,CADL;AAKKI,6CAAiBT,KAAKQ,EAAtB;AALL,yBADJ;AASA;AACH;AACJ,iBAnBD,MAmBO,IAAIR,KAAKQ,EAAL,KAAYf,OAAhB,EAAyB;AAC5BQ,8BACI;AAAA;AAAA;AACK,mDACG,oDADH,EAEG,EAAEI,cAAF,EAFH,CADL;AAKKI,yCAAiBT,KAAKO,IAAtB;AALL,qBADJ;AASA;AACH,iBAXM,MAWA;AACHN,8BACI;AAAA;AAAA;AACK,mDACG,8DADH,EAEG;AACII,0CADJ;AAEIE,kCAAMP,KAAKO;AAFf,yBAFH,CADL;AAQKE,yCAAiBT,KAAKQ,EAAtB;AARL,qBADJ;AAYA;AACH;AACJ,aAhDD,MAgDO,IACH,2DAA2DE,IAA3D,CACIX,IADJ,CADG,EAIL;AACE;AACA,oBAAMY,YACFZ,SAAS,qBAAT,GACM,YADN,GAEMA,SAAS,uBAAT,GACE,cADF,GAEE,aALZ;;AAOA,oBAAIC,KAAKO,IAAL,KAAcd,OAAlB,EAA2B;AACvB;AACA;AACA;AACAQ,8BACI;AAAA;AAAA;AACK,mDACG,CACI,wBADJ,EAEI,UAFJ,EAGI,WAHJ,EAIIU,SAJJ,CADH,EAOG,EAAEN,QAAQL,KAAKK,MAAf,EAPH,CADL;AAUKI,yCAAiBT,KAAKQ,EAAtB,CAVL;AAWKR,6BAAKY,UAAL,IACG,2BAAG,mCAAH,EAAwC;AACpCA,wCAAYZ,KAAKY;AADmB,yBAAxC;AAZR,qBADJ;AAkBA;AACH,iBAvBD,MAuBO,IAAIZ,KAAKQ,EAAL,KAAYf,OAAhB,EAAyB;AAC5BQ,8BACI;AAAA;AAAA;AACK,mDACG,CACI,wBADJ,EAEI,UAFJ,EAGI,SAHJ,EAIIU,SAJJ,CADH,EAOG,EAAEN,QAAQL,KAAKK,MAAf,EAPH,CADL;AAUKI,yCAAiBT,KAAKO,IAAtB,CAVL;AAWKP,6BAAKY,UAAL,IACG,2BAAG,mCAAH,EAAwC;AACpCA,wCAAYZ,KAAKY;AADmB,yBAAxC;AAZR,qBADJ;AAkBA;AACH,iBApBM,MAoBA;AACH;AACAX,8BACI;AAAA;AAAA;AACK,mDACG,CACI,wBADJ,EAEI,UAFJ,EAGI,yBAHJ,EAIIU,SAJJ,CADH,EAOG;AACIN,oCAAQL,KAAKK,MADjB;AAEIE,kCAAMP,KAAKO,IAFf;AAGIC,gCAAIR,KAAKQ;AAHb,yBAPH,CADL;AAcKR,6BAAKY,UAAL,IACG,MACI,2BAAG,mCAAH,EAAwC;AACpCA,wCAAYZ,KAAKY;AADmB,yBAAxC;AAhBZ,qBADJ;AAsBA;AACA;AACA;AACH;AACJ,aApFM,MAoFA,IAAIb,SAAS,8BAAb,EAA6C;AAChDE,0BAAU,2BACN,qDADM,EAEN;AACIW,gCAAYZ,KAAKY;AADrB,iBAFM,CAAV;AAMA;AACH,aARM,MAQA,IAAIb,SAAS,kBAAb,EAAiC;AACpC,oBAAIC,KAAKa,cAAL,KAAwB,gBAA5B,EACIZ,UAAU,2BAAG,wCAAH,CAAV,CADJ,KAGIA,UAAU,2BAAG,yCAAH,EAA8C;AACpDJ;AADoD,iBAA9C,CAAV;AAGJ;AACH,aARM,MAQA,IAAIE,SAAS,iBAAb,EAAgC;AACnC,oBAAMe,gBACFd,KAAKe,cAAL,GAAsB,GAAtB,GAA4Bf,KAAKgB,gBADrC;AAEAf,0BACI;AAAA;AAAA;AACK,+CAAG,wCAAH,EAA6C;AAC1CP;AAD0C,qBAA7C,CADL;AAIKe,qCAAiBK,aAAjB;AAJL,iBADJ;AAQA;AACH,aAZM,MAYA,IAAIf,SAAS,eAAb,EAA8B;AACjC,oBAAIkB,eAAe,EAAnB;AACA,oBAAIjB,KAAKiB,YAAL,KAAsB,aAA1B,EACIA,eAAe,OAAOjB,KAAKiB,YAA3B;AACJhB,0BACI;AAAA;AAAA;AACK,+CAAG,sCAAH,EAA2C;AACxCN,oDADwC;AAExCsB,kDAFwC;AAGxCC,oCAAYlB,KAAKkB;AAHuB,qBAA3C,CADL;AAMKT,qCAAiBT,KAAKmB,MAAL,GAAc,GAAd,GAAoBnB,KAAKoB,QAA1C;AANL,iBADJ;AAUA;AACH,aAfM,MAeA,IAAIrB,SAAS,sBAAb,EAAqC;AACxC,oBAAMsB,UAAU,EAAhB;AACA,oBAAIC,WAAWtB,KAAKuB,YAAL,CAAkBjB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAX,IAA8C,CAAlD,EACIe,QAAQG,IAAR,CAAaxB,KAAKuB,YAAlB;AACJ,oBAAID,WAAWtB,KAAKyB,UAAL,CAAgBnB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAX,IAA4C,CAAhD,EACIe,QAAQG,IAAR,CAAaxB,KAAKyB,UAAlB;AACJ,oBAAIH,WAAWtB,KAAKF,YAAL,CAAkBQ,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAX,IAA8C,CAAlD,EACIe,QAAQG,IAAR,CAAgB1B,YAAhB;;AAEJ,wBAAQuB,QAAQK,MAAhB;AACI,yBAAK,CAAL;AACIzB,kCAAU,2BACN,2DADM,EAEN;AACI0B,0CAAcN,QAAQ,CAAR,CADlB;AAEIO,2CAAeP,QAAQ,CAAR,CAFnB;AAGIQ,0CAAcR,QAAQ,CAAR;AAHlB,yBAFM,CAAV;AAQA;AACA;AACJ,yBAAK,CAAL;AACIpB,kCAAU,2BACN,yDADM,EAEN,EAAE0B,cAAcN,QAAQ,CAAR,CAAhB,EAA4BO,eAAeP,QAAQ,CAAR,CAA3C,EAFM,CAAV;AAIA;AACA;AACJ,yBAAK,CAAL;AACIpB,kCAAU,2BACN,wDADM,EAEN,EAAE6B,QAAQT,QAAQ,CAAR,CAAV,EAFM,CAAV;AAIA;AACA;AAzBR;AA2BH,aApCM,MAoCA,IAAItB,SAAS,UAAb,EAAyB;AAC5BE,0BAAU,2BAAG,iCAAH,EAAsC;AAC5C8B,8BAAU/B,KAAK+B;AAD6B,iBAAtC,CAAV;AAGA;AACH,aALM,MAKA,IAAIhC,SAAS,sBAAb,EAAqC;AACxCE,0BAAU,2BAAG,6CAAH,EAAkD;AACxD+B,+BAAWhC,KAAKgC,SADwC;AAExDC,gCAAYjC,KAAKiC;AAFuC,iBAAlD,CAAV;AAIA;AACH,aANM,MAMA,IAAIlC,SAAS,YAAb,EAA2B;AAC9B,oBAAIC,KAAKkC,UAAL,IAAmBzC,OAAvB,EAAgC;AAC5B;AACAQ,8BAAU,2BACN,2DADM,EAEN;AACIkC,mCAAWnC,KAAKmC,SADpB;AAEIC,sCAAcpC,KAAKoC;AAFvB,qBAFM,CAAV;AAOA;AACH,iBAVD,MAUO;AACH;AACAnC,8BAAU,2BACN,8DADM,EAEN;AACIkC,mCAAWnC,KAAKmC,SADpB;AAEIC,sCAAcpC,KAAKoC;AAFvB,qBAFM,CAAV;AAOA;AACH;AACJ,aAtBM,MAsBA,IAAIrC,SAAS,2BAAb,EAA0C;AAC7CE,0BAAU,2BAAG,kDAAH,EAAuD;AAC7DL,wDAD6D;AAE7DuB,4BAAQnB,KAAKmB,MAFgD;AAG7DC,8BAAUpB,KAAKoB;AAH8C,iBAAvD,CAAV;AAKA;AACH,aAPM,MAOA;AACHnB,0BAAU,kDAAiBF,UAAjB,IAA0BC,IAA1B,GAAkC,IAAlC,EAAwC,CAAxC,CAAV;AACH;AACD;AACA,mBACI;AAAA;AAAA,kBAAI,KAAKR,GAAG,CAAH,CAAT,EAAgB,WAAU,OAA1B;AACI;AAAA;AAAA;AACI,kDAAC,wBAAD,IAAgB,MAAMA,GAAG,CAAH,EAAM6C,SAA5B;AADJ,iBADJ;AAII;AAAA;AAAA;AACI,mCAAU,0BADd;AAEI,+BAAO,EAAEC,UAAU,OAAZ;AAFX;AAIKrC;AAJL,iBAJJ;AAUI;AAAA;AAAA;AACI,mCAAU,iBADd;AAEI,+BAAO,EAAEqC,UAAU,OAAZ,EAAqBC,UAAU,YAA/B;AAFX;AAII,kDAAC,cAAD,IAAM,MAAMvC,KAAKwC,IAAjB,EAAuB,UAAU/C,OAAjC;AAJJ;AAVJ,aADJ;AAmBH;;;EAzS4BgD,gBAAMC,S;;AA4SvC,IAAMjC,mBAAmB,SAAnBA,gBAAmB;AAAA,WACrBkC,uBAAaC,QAAb,CAAsBC,QAAtB,IACI;AAAA;AAAA;AAAOA;AAAP,KADJ,GAGI;AAAC,yBAAD;AAAA,UAAM,WAASA,QAAf;AAA4BA;AAA5B,KAJiB;AAAA,CAAzB;;kBAOe;AACX;AACA,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACjB,QAAMvD,KAAKuD,SAASvD,EAApB;AACA,QAAMO,OAAOP,GAAG,CAAH,EAAMA,EAAN,CAAS,CAAT,CAAb;AACA,QAAMQ,OAAOR,GAAG,CAAH,EAAMA,EAAN,CAAS,CAAT,CAAb;AACA,QAAMK,kBACFE,SAAS,kBAAT,GACM,sCAAiB,+BAAU+C,KAAV,EAAiB9C,KAAKa,cAAtB,CAAjB,CADN,GAEMmC,SAHV;AAIA,QAAMlD,eACFC,SAAS,sBAAT,GACM,sCAAiB,+BAAU+C,KAAV,EAAiB9C,KAAKF,YAAtB,CAAjB,CADN,GAEMkD,SAHV;AAIA,QAAMtD,kBACFK,SAAS,iBAAT,GACM,sCAAiB,+BAAU+C,KAAV,EAAiB9C,KAAK8B,MAAtB,CAAjB,CADN,GAEMkB,SAHV;AAIA,QAAMrD,gBACFI,SAAS,eAAT,GACM,sCAAiB,+BAAU+C,KAAV,EAAiB9C,KAAKiD,cAAtB,CAAjB,CADN,GAEMD,SAHV;AAIA,QAAMpD,oBACFG,SAAS,2BAAT,GACM,sCAAiB,+BAAU+C,KAAV,EAAiB9C,KAAK8B,MAAtB,CAAjB,CADN,GAEMkB,SAHV;AAIA,sCACOD,QADP;AAEIrD,wCAFJ;AAGIC,oCAHJ;AAIIC,4CAJJ;AAKIC,wCALJ;AAMIC;AANJ;AAQH,CAlCU,EAmCbR,kBAnCa,C","file":"index.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport TimeAgoWrapper from 'app/components/elements/TimeAgoWrapper';\n// import Icon from 'app/components/elements/Icon';\nimport Memo from 'app/components/elements/Memo';\nimport { numberWithCommas, vestsToSp } from 'app/utils/StateFunctions';\nimport tt from 'counterpart';\nimport GDPRUserList from 'app/utils/GDPRUserList';\n\nclass TransferHistoryRow extends React.Component {\n    render() {\n        const {\n            op,\n            context,\n            curation_reward,\n            author_reward,\n            benefactor_reward,\n            powerdown_vests,\n            reward_vests,\n        } = this.props;\n        // context -> account perspective\n\n        const type = op[1].op[0];\n        const data = op[1].op[1];\n\n        /*  all transfers involve up to 2 accounts, context and 1 other. */\n        let message = '';\n\n        let description_start = '';\n        let other_account = null;\n        let description_end = '';\n\n        if (type === 'transfer_to_vesting') {\n            const amount = data.amount.split(' ')[0];\n\n            if (data.from === context) {\n                if (data.to === '') {\n                    message = tt(\n                        'transferhistoryrow_jsx.transfer_to_vesting.from_self.no_to',\n                        { amount }\n                    );\n                    // tt('g.transfer') + amount + tt('g.to') + 'STEEM POWER';\n                } else {\n                    message = (\n                        <span>\n                            {tt(\n                                'transferhistoryrow_jsx.transfer_to_vesting.from_self.to_someone',\n                                { amount }\n                            )}\n                            {otherAccountLink(data.to)}\n                        </span>\n                    );\n                    // tt('g.transfer') + amount + ' STEEM POWER' + tt('g.to');\n                }\n            } else if (data.to === context) {\n                message = (\n                    <span>\n                        {tt(\n                            'transferhistoryrow_jsx.transfer_to_vesting.to_self',\n                            { amount }\n                        )}\n                        {otherAccountLink(data.from)}\n                    </span>\n                );\n                // tt('g.receive') + amount + ' STEEM POWER' + tt('g.from');\n            } else {\n                message = (\n                    <span>\n                        {tt(\n                            'transferhistoryrow_jsx.transfer_to_vesting.from_user_to_user',\n                            {\n                                amount,\n                                from: data.from,\n                            }\n                        )}\n                        {otherAccountLink(data.to)}\n                    </span>\n                );\n                // tt('g.transfer') + amount + ' STEEM POWER' + tt('g.from') +data.from + tt('g.to');\n            }\n        } else if (\n            /^transfer$|^transfer_to_savings$|^transfer_from_savings$/.test(\n                type\n            )\n        ) {\n            // transfer_to_savings\n            const fromWhere =\n                type === 'transfer_to_savings'\n                    ? 'to_savings'\n                    : type === 'transfer_from_savings'\n                      ? 'from_savings'\n                      : 'not_savings';\n\n            if (data.from === context) {\n                // Semi-bad behavior - passing `type` to translation engine -- @todo better somehow?\n                // type can be to_savings, from_savings, or not_savings\n                // Also we can't pass React elements (link to other account) so its order is fixed :()\n                message = (\n                    <span>\n                        {tt(\n                            [\n                                'transferhistoryrow_jsx',\n                                'transfer',\n                                'from_self',\n                                fromWhere,\n                            ],\n                            { amount: data.amount }\n                        )}\n                        {otherAccountLink(data.to)}\n                        {data.request_id &&\n                            tt('transferhistoryrow_jsx.request_id', {\n                                request_id: data.request_id,\n                            })}\n                    </span>\n                );\n                // tt('g.transfer') + `${fromWhere} ${data.amount}` + tt('g.to');\n            } else if (data.to === context) {\n                message = (\n                    <span>\n                        {tt(\n                            [\n                                'transferhistoryrow_jsx',\n                                'transfer',\n                                'to_self',\n                                fromWhere,\n                            ],\n                            { amount: data.amount }\n                        )}\n                        {otherAccountLink(data.from)}\n                        {data.request_id &&\n                            tt('transferhistoryrow_jsx.request_id', {\n                                request_id: data.request_id,\n                            })}\n                    </span>\n                );\n                // tt('g.receive') + `${fromWhere} ${data.amount}` + tt('g.from');\n            } else {\n                // Removing the `from` link from this one -- only one user is linked anyways.\n                message = (\n                    <span>\n                        {tt(\n                            [\n                                'transferhistoryrow_jsx',\n                                'transfer',\n                                'to_someone_from_someone',\n                                fromWhere,\n                            ],\n                            {\n                                amount: data.amount,\n                                from: data.from,\n                                to: data.to,\n                            }\n                        )}\n                        {data.request_id &&\n                            ' ' +\n                                tt('transferhistoryrow_jsx.request_id', {\n                                    request_id: data.request_id,\n                                })}\n                    </span>\n                );\n                // tt('g.transfer') + `${fromWhere} ${data.amount}` + tt('g.from');\n                //other_account = data.from;\n                //description_end += tt('g.to') + data.to;\n            }\n        } else if (type === 'cancel_transfer_from_savings') {\n            message = tt(\n                'transferhistoryrow_jsx.cancel_transfer_from_savings',\n                {\n                    request_id: data.request_id,\n                }\n            );\n            // `${tt('transferhistoryrow_jsx.cancel_transfer_from_savings')} (${tt('g.request')} ${data.request_id})`;\n        } else if (type === 'withdraw_vesting') {\n            if (data.vesting_shares === '0.000000 VESTS')\n                message = tt('transferhistoryrow_jsx.stop_power_down');\n            else\n                message = tt('transferhistoryrow_jsx.withdraw_vesting', {\n                    powerdown_vests,\n                });\n            // tt('transferhistoryrow_jsx.start_power_down_of') + ' ' + powerdown_vests + ' STEEM';\n        } else if (type === 'curation_reward') {\n            const linkToComment =\n                data.comment_author + '/' + data.comment_permlink;\n            message = (\n                <span>\n                    {tt('transferhistoryrow_jsx.curation_reward', {\n                        curation_reward,\n                    })}\n                    {otherAccountLink(linkToComment)}\n                </span>\n            );\n            // `${curation_reward} STEEM POWER` + tt('g.for');\n        } else if (type === 'author_reward') {\n            let steem_payout = '';\n            if (data.steem_payout !== '0.000 STEEM')\n                steem_payout = ', ' + data.steem_payout;\n            message = (\n                <span>\n                    {tt('transferhistoryrow_jsx.author_reward', {\n                        author_reward,\n                        steem_payout,\n                        sbd_payout: data.sbd_payout,\n                    })}\n                    {otherAccountLink(data.author + '/' + data.permlink)}\n                </span>\n            );\n            // `${data.sbd_payout}${steem_payout}, ${tt( 'g.and' )} ${author_reward} STEEM POWER ${tt('g.for')}`;\n        } else if (type === 'claim_reward_balance') {\n            const rewards = [];\n            if (parseFloat(data.reward_steem.split(' ')[0]) > 0)\n                rewards.push(data.reward_steem);\n            if (parseFloat(data.reward_sbd.split(' ')[0]) > 0)\n                rewards.push(data.reward_sbd);\n            if (parseFloat(data.reward_vests.split(' ')[0]) > 0)\n                rewards.push(`${reward_vests} STEEM POWER`);\n\n            switch (rewards.length) {\n                case 3:\n                    message = tt(\n                        'transferhistoryrow_jsx.claim_reward_balance.three_rewards',\n                        {\n                            first_reward: rewards[0],\n                            second_reward: rewards[1],\n                            third_reward: rewards[2],\n                        }\n                    );\n                    // `${rewards[0]}, ${rewards[1]} and ${ rewards[2] }`;\n                    break;\n                case 2:\n                    message = tt(\n                        'transferhistoryrow_jsx.claim_reward_balance.two_rewards',\n                        { first_reward: rewards[0], second_reward: rewards[1] }\n                    );\n                    // `${rewards[0]} and ${rewards[1]}`;\n                    break;\n                case 1:\n                    message = tt(\n                        'transferhistoryrow_jsx.claim_reward_balance.one_reward',\n                        { reward: rewards[0] }\n                    );\n                    // `${rewards[0]}`;\n                    break;\n            }\n        } else if (type === 'interest') {\n            message = tt('transferhistoryrow_jsx.interest', {\n                interest: data.interest,\n            });\n            // `${tt( 'transferhistoryrow_jsx.receive_interest_of' )} ${data.interest}`;\n        } else if (type === 'fill_convert_request') {\n            message = tt('transferhistoryrow_jsx.fill_convert_request', {\n                amount_in: data.amount_in,\n                amount_out: data.amount_out,\n            });\n            // `Fill convert request: ${data.amount_in} for ${ data.amount_out }`;\n        } else if (type === 'fill_order') {\n            if (data.open_owner == context) {\n                // my order was filled by data.current_owner\n                message = tt(\n                    'transferhistoryrow_jsx.fill_order.filled_by_current_owner',\n                    {\n                        open_pays: data.open_pays,\n                        current_pays: data.current_pays,\n                    }\n                );\n                // `Paid ${data.open_pays} for ${  data.current_pays }`\n            } else {\n                // data.open_owner filled my order\n                message = tt(\n                    'transferhistoryrow_jsx.fill_order.open_owner_filled_my_order',\n                    {\n                        open_pays: data.open_pays,\n                        current_pays: data.current_pays,\n                    }\n                );\n                // `Paid ${data.current_pays} for ${ data.open_pays }`;\n            }\n        } else if (type === 'comment_benefactor_reward') {\n            message = tt('transferhistoryrow_jsx.comment_benefactor_reward', {\n                benefactor_reward,\n                author: data.author,\n                permlink: data.permlink,\n            });\n            // `${benefactor_reward} STEEM POWER for ${ data.author }/${data.permlink}`;\n        } else {\n            message = JSON.stringify({ type, ...data }, null, 2);\n        }\n        // <Icon name=\"clock\" className=\"space-right\" />\n        return (\n            <tr key={op[0]} className=\"Trans\">\n                <td>\n                    <TimeAgoWrapper date={op[1].timestamp} />\n                </td>\n                <td\n                    className=\"TransferHistoryRow__text\"\n                    style={{ maxWidth: '40rem' }}\n                >\n                    {message}\n                </td>\n                <td\n                    className=\"show-for-medium\"\n                    style={{ maxWidth: '40rem', wordWrap: 'break-word' }}\n                >\n                    <Memo text={data.memo} username={context} />\n                </td>\n            </tr>\n        );\n    }\n}\n\nconst otherAccountLink = username =>\n    GDPRUserList.includes(username) ? (\n        <span>{username}</span>\n    ) : (\n        <Link to={`/@${username}`}>{username}</Link>\n    );\n\nexport default connect(\n    // mapStateToProps\n    (state, ownProps) => {\n        const op = ownProps.op;\n        const type = op[1].op[0];\n        const data = op[1].op[1];\n        const powerdown_vests =\n            type === 'withdraw_vesting'\n                ? numberWithCommas(vestsToSp(state, data.vesting_shares))\n                : undefined;\n        const reward_vests =\n            type === 'claim_reward_balance'\n                ? numberWithCommas(vestsToSp(state, data.reward_vests))\n                : undefined;\n        const curation_reward =\n            type === 'curation_reward'\n                ? numberWithCommas(vestsToSp(state, data.reward))\n                : undefined;\n        const author_reward =\n            type === 'author_reward'\n                ? numberWithCommas(vestsToSp(state, data.vesting_payout))\n                : undefined;\n        const benefactor_reward =\n            type === 'comment_benefactor_reward'\n                ? numberWithCommas(vestsToSp(state, data.reward))\n                : undefined;\n        return {\n            ...ownProps,\n            curation_reward,\n            author_reward,\n            benefactor_reward,\n            powerdown_vests,\n            reward_vests,\n        };\n    }\n)(TransferHistoryRow);\n"]}