{"version":3,"sources":["../../../../src/app/components/cards/Comment.jsx"],"names":["sortComments","userActions","transactionActions","hideSubtree","cont","c","getIn","hasPositivePayout","post","get","find","reply","comments","sort_order","netNegative","a","totalPayout","netRshares","Long","fromString","String","countUpvotes","filter","vote","size","authorReputation","sort_orders","votes","b","aactive","bactive","new","acontent","bcontent","Date","parse","trending","apayout","bpayout","compare","author_reputation","sort","CommentImpl","state","collapsed","hide_body","highlight","revealBody","bind","shouldComponentUpdate","onShowReply","showReply","setState","showEdit","saveOnShow","onShowEdit","process","env","BROWSER","props","content","formId","type","localStorage","setItem","removeItem","onDeletePost","deletePost","toggleCollapsed","initEditor","_checkHide","window","location","hash","anchor_link","hide","gray","onHide","PostReplyEditor","PostEditEditor","showEditor","getItem","JSON","dis","global","undefined","match","length","comment","toJS","stats","console","error","allowDelete","authorRepLog10","author","json_metadata","username","depth","showNegativeComments","ignore_list","noImage","permlink","Editor","rootComment","parent_author","parent_permlink","comment_link","category","ignore","has","jsonMetadata","hideImages","ImageUserBlockList","includes","_isPaidout","cashout_time","showEditOption","showDeleteOption","showReplyOption","body","controls","replies","children","comment_permlink","map","idx","commentClasses","push","root","innerCommentClass","renderedEditor","depth_indicator","i","join","created","count","React","Component","propTypes","PropTypes","object","isRequired","string","oneOf","bool","func","number","defaultProps","Comment","ownProps","user","unlock","dispatch","showLogin","broadcastOperation","operation","confirm"],"mappings":"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","file":"Comment.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Author from 'app/components/elements/Author';\nimport ReplyEditor from 'app/components/elements/ReplyEditor';\nimport MarkdownViewer from 'app/components/cards/MarkdownViewer';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport Voting from 'app/components/elements/Voting';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport * as userActions from 'app/redux/UserReducer';\nimport TimeAgoWrapper from 'app/components/elements/TimeAgoWrapper';\nimport Userpic from 'app/components/elements/Userpic';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport tt from 'counterpart';\nimport { parsePayoutAmount } from 'app/utils/ParsersAndFormatters';\nimport { Long } from 'bytebuffer';\nimport ImageUserBlockList from 'app/utils/ImageUserBlockList';\n\n// returns true if the comment has a 'hide' flag AND has no descendants w/ positive payout\nfunction hideSubtree(cont, c) {\n    return cont.getIn([c, 'stats', 'hide']) && !hasPositivePayout(cont, c);\n}\n\nfunction hasPositivePayout(cont, c) {\n    const post = cont.get(c);\n    if (post.getIn(['stats', 'hasPendingPayout'])) {\n        return true;\n    }\n    if (post.get('replies').find(reply => hasPositivePayout(cont, reply))) {\n        return true;\n    }\n    return false;\n}\n\nexport function sortComments(cont, comments, sort_order) {\n    function netNegative(a) {\n        return a.get('net_rshares') < 0;\n    }\n    function totalPayout(a) {\n        return (\n            parsePayoutAmount(a.get('pending_payout_value')) +\n            parsePayoutAmount(a.get('total_payout_value')) +\n            parsePayoutAmount(a.get('curator_payout_value'))\n        );\n    }\n    function netRshares(a) {\n        return Long.fromString(String(a.get('net_rshares')));\n    }\n    function countUpvotes(a) {\n        return a.get('active_votes').filter(vote => vote.get('percent') > 0)\n            .size;\n    }\n    function authorReputation(a) {\n        return a.get('author_reputation');\n    }\n\n    /** sorts replies by upvotes, age, or payout */\n    const sort_orders = {\n        votes: (a, b) => {\n            const aactive = countUpvotes(cont.get(a));\n            const bactive = countUpvotes(cont.get(b));\n            return bactive - aactive;\n        },\n        new: (a, b) => {\n            const acontent = cont.get(a);\n            const bcontent = cont.get(b);\n            if (netNegative(acontent)) {\n                return 1;\n            } else if (netNegative(bcontent)) {\n                return -1;\n            }\n            const aactive = Date.parse(acontent.get('created'));\n            const bactive = Date.parse(bcontent.get('created'));\n            return bactive - aactive;\n        },\n        trending: (a, b) => {\n            const acontent = cont.get(a);\n            const bcontent = cont.get(b);\n            if (netNegative(acontent)) {\n                return 1;\n            } else if (netNegative(bcontent)) {\n                return -1;\n            }\n            const apayout = totalPayout(acontent);\n            const bpayout = totalPayout(bcontent);\n            if (apayout !== bpayout) {\n                return bpayout - apayout;\n            }\n            // If SBD payouts were equal, fall back to rshares sorting\n            return netRshares(bcontent).compare(netRshares(acontent));\n        },\n        author_reputation: (a, b) => {\n            return (\n                authorReputation(cont.get(b)) - authorReputation(cont.get(a))\n            );\n        },\n    };\n    comments.sort(sort_orders[sort_order]);\n}\n\nclass CommentImpl extends React.Component {\n    static propTypes = {\n        // html props\n        cont: PropTypes.object.isRequired,\n        content: PropTypes.string.isRequired,\n        sort_order: PropTypes.oneOf([\n            'votes',\n            'new',\n            'trending',\n            'author_reputation',\n        ]).isRequired,\n        root: PropTypes.bool,\n        showNegativeComments: PropTypes.bool,\n        onHide: PropTypes.func,\n        noImage: PropTypes.bool,\n\n        // component props (for recursion)\n        depth: PropTypes.number,\n\n        // redux props\n        username: PropTypes.string,\n        rootComment: PropTypes.string,\n        anchor_link: PropTypes.string.isRequired,\n        deletePost: PropTypes.func.isRequired,\n    };\n    static defaultProps = {\n        depth: 1,\n    };\n\n    constructor() {\n        super();\n        this.state = { collapsed: false, hide_body: false, highlight: false };\n        this.revealBody = this.revealBody.bind(this);\n        this.shouldComponentUpdate = shouldComponentUpdate(this, 'Comment');\n        this.onShowReply = () => {\n            const { showReply } = this.state;\n            this.setState({ showReply: !showReply, showEdit: false });\n            this.saveOnShow(!showReply ? 'reply' : null);\n        };\n        this.onShowEdit = () => {\n            const { showEdit } = this.state;\n            this.setState({ showEdit: !showEdit, showReply: false });\n            this.saveOnShow(!showEdit ? 'edit' : null);\n        };\n        this.saveOnShow = type => {\n            if (process.env.BROWSER) {\n                const { cont } = this.props;\n                const content = cont.get(this.props.content);\n                const formId =\n                    content.get('author') + '/' + content.get('permlink');\n                if (type)\n                    localStorage.setItem(\n                        'showEditor-' + formId,\n                        JSON.stringify({ type }, null, 0)\n                    );\n                else {\n                    localStorage.removeItem('showEditor-' + formId);\n                    localStorage.removeItem(\n                        'replyEditorData-' + formId + '-reply'\n                    );\n                    localStorage.removeItem(\n                        'replyEditorData-' + formId + '-edit'\n                    );\n                }\n            }\n        };\n        this.saveOnShow = this.saveOnShow.bind(this);\n        this.onDeletePost = () => {\n            const { props: { deletePost } } = this;\n            const content = this.props.cont.get(this.props.content);\n            deletePost(content.get('author'), content.get('permlink'));\n        };\n        this.toggleCollapsed = this.toggleCollapsed.bind(this);\n    }\n\n    componentWillMount() {\n        this.initEditor(this.props);\n        this._checkHide(this.props);\n    }\n\n    componentDidMount() {\n        if (window.location.hash == this.props.anchor_link) {\n            this.setState({ highlight: true }); // eslint-disable-line react/no-did-mount-set-state\n        }\n    }\n\n    /**\n     * - `hide` is based on author reputation, and will hide the entire post on initial render.\n     * - `hide_body` is true when comment rshares OR author rep is negative.\n     *    it hides the comment body (but not the header) until the \"reveal comment\" link is clicked.\n     */\n    _checkHide(props) {\n        const content = props.cont.get(props.content);\n        if (content) {\n            const hide = hideSubtree(props.cont, props.content);\n            const gray = content.getIn(['stats', 'gray']);\n            if (hide) {\n                const { onHide } = this.props;\n                // console.log('Comment --> onHide')\n                if (onHide) onHide();\n            }\n            this.setState({ hide, hide_body: hide || gray });\n        }\n    }\n\n    toggleCollapsed() {\n        this.setState({ collapsed: !this.state.collapsed });\n    }\n    revealBody() {\n        this.setState({ hide_body: false });\n    }\n    initEditor(props) {\n        if (this.state.PostReplyEditor) return;\n        const { cont } = this.props;\n        const content = cont.get(props.content);\n        if (!content) return;\n        const post = content.get('author') + '/' + content.get('permlink');\n        const PostReplyEditor = ReplyEditor(post + '-reply');\n        const PostEditEditor = ReplyEditor(post + '-edit');\n        if (process.env.BROWSER) {\n            const formId = post;\n            let showEditor = localStorage.getItem('showEditor-' + formId);\n            if (showEditor) {\n                showEditor = JSON.parse(showEditor);\n                if (showEditor.type === 'reply') {\n                    this.setState({ showReply: true });\n                }\n                if (showEditor.type === 'edit') {\n                    this.setState({ showEdit: true });\n                }\n            }\n        }\n        this.setState({ PostReplyEditor, PostEditEditor });\n    }\n    render() {\n        const { cont } = this.props;\n        const dis = cont.get(this.props.content);\n\n        if (!dis) {\n            return <div>{tt('g.loading')}...</div>;\n        }\n\n        // Don't server-side render the comment if it has a certain number of newlines\n        if (\n            global['process'] !== undefined &&\n            (dis.get('body').match(/\\r?\\n/g) || '').length > 25\n        ) {\n            return <div>{tt('g.loading')}...</div>;\n        }\n\n        const comment = dis.toJS();\n        if (!comment.stats) {\n            console.error('Comment -- missing stats object');\n            comment.stats = {};\n        }\n        const { allowDelete, authorRepLog10, gray } = comment.stats;\n        const { author, json_metadata } = comment;\n        const {\n            username,\n            depth,\n            anchor_link,\n            showNegativeComments,\n            ignore_list,\n            noImage,\n        } = this.props;\n        const { onShowReply, onShowEdit, onDeletePost } = this;\n        const post = comment.author + '/' + comment.permlink;\n        const {\n            PostReplyEditor,\n            PostEditEditor,\n            showReply,\n            showEdit,\n            hide,\n            hide_body,\n        } = this.state;\n        const Editor = showReply ? PostReplyEditor : PostEditEditor;\n\n        let { rootComment } = this.props;\n        if (!rootComment && depth === 1) {\n            rootComment = comment.parent_author + '/' + comment.parent_permlink;\n        }\n        const comment_link = `/${comment.category}/@${rootComment}#@${\n            comment.author\n        }/${comment.permlink}`;\n        const ignore = ignore_list && ignore_list.has(comment.author);\n\n        if (!showNegativeComments && (hide || ignore)) {\n            return null;\n        }\n\n        let jsonMetadata = null;\n        try {\n            if (!showReply) jsonMetadata = JSON.parse(json_metadata);\n        } catch (error) {\n            // console.error('Invalid json metadata string', json_metadata, 'in post', this.props.content);\n        }\n        // const get_asset_value = ( asset_str ) => { return parseFloat( asset_str.split(' ')[0] ); }\n        // const steem_supply = this.props.global.getIn(['props','current_supply']);\n\n        // hide images if author is in blacklist\n        const hideImages = ImageUserBlockList.includes(author);\n\n        const _isPaidout = comment.cashout_time === '1969-12-31T23:59:59'; // TODO: audit after HF19. #1259\n        const showEditOption = username === author;\n        const showDeleteOption =\n            username === author && allowDelete && !_isPaidout;\n        const showReplyOption = comment.depth < 255;\n\n        let body = null;\n        let controls = null;\n\n        if (!this.state.collapsed && !hide_body) {\n            body = (\n                <MarkdownViewer\n                    formId={post + '-viewer'}\n                    text={comment.body}\n                    noImage={noImage || gray}\n                    hideImages={hideImages}\n                    jsonMetadata={jsonMetadata}\n                />\n            );\n            controls = (\n                <div>\n                    <Voting post={post} />\n                    <span className=\"Comment__footer__controls\">\n                        {showReplyOption && (\n                            <a onClick={onShowReply}>{tt('g.reply')}</a>\n                        )}{' '}\n                        {showEditOption && (\n                            <a onClick={onShowEdit}>{tt('g.edit')}</a>\n                        )}{' '}\n                        {showDeleteOption && (\n                            <a onClick={onDeletePost}>{tt('g.delete')}</a>\n                        )}\n                    </span>\n                </div>\n            );\n        }\n\n        let replies = null;\n        if (!this.state.collapsed && comment.children > 0) {\n            if (depth > 7) {\n                const comment_permlink = `/${comment.category}/@${\n                    comment.author\n                }/${comment.permlink}`;\n                replies = (\n                    <Link to={comment_permlink}>\n                        Show {comment.children} more{' '}\n                        {comment.children == 1 ? 'reply' : 'replies'}\n                    </Link>\n                );\n            } else {\n                replies = comment.replies;\n                sortComments(cont, replies, this.props.sort_order);\n                // When a comment has hidden replies and is collapsed, the reply count is off\n                //console.log(\"replies:\", replies.length, \"num_visible:\", replies.filter( reply => !cont.get(reply).getIn(['stats', 'hide'])).length)\n                replies = replies.map((reply, idx) => (\n                    <Comment\n                        key={idx}\n                        content={reply}\n                        cont={cont}\n                        sort_order={this.props.sort_order}\n                        depth={depth + 1}\n                        rootComment={rootComment}\n                        showNegativeComments={showNegativeComments}\n                        onHide={this.props.onHide}\n                    />\n                ));\n            }\n        }\n\n        const commentClasses = ['hentry'];\n        commentClasses.push('Comment');\n        commentClasses.push(this.props.root ? 'root' : 'reply');\n        if (hide_body || this.state.collapsed) commentClasses.push('collapsed');\n\n        let innerCommentClass = ignore || gray ? 'downvoted clearfix' : '';\n        if (this.state.highlight) innerCommentClass += ' highlighted';\n\n        //console.log(comment);\n        let renderedEditor = null;\n        if (showReply || showEdit) {\n            renderedEditor = (\n                <div key=\"editor\">\n                    <Editor\n                        {...comment}\n                        type={showReply ? 'submit_comment' : 'edit'}\n                        successCallback={() => {\n                            this.setState({\n                                showReply: false,\n                                showEdit: false,\n                            });\n                            this.saveOnShow(null);\n                        }}\n                        onCancel={() => {\n                            this.setState({\n                                showReply: false,\n                                showEdit: false,\n                            });\n                            this.saveOnShow(null);\n                        }}\n                        jsonMetadata={jsonMetadata}\n                    />\n                </div>\n            );\n        }\n\n        const depth_indicator = [];\n        if (depth > 1) {\n            for (let i = 1; i < depth; ++i) {\n                depth_indicator.push(\n                    <div key={i} className={`depth di-${i}`}>\n                        &middot;\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <div\n                className={commentClasses.join(' ')}\n                id={anchor_link}\n                itemScope\n                itemType=\"http://schema.org/comment\"\n            >\n                {depth_indicator}\n                <div className={innerCommentClass}>\n                    <div className=\"Comment__Userpic show-for-medium\">\n                        <Userpic account={comment.author} />\n                    </div>\n                    <div className=\"Comment__header\">\n                        <div className=\"Comment__header_collapse\">\n                            <Voting post={post} flag />\n                            <a\n                                title={tt('g.collapse_or_expand')}\n                                onClick={this.toggleCollapsed}\n                            >\n                                {this.state.collapsed ? '[+]' : '[-]'}\n                            </a>\n                        </div>\n                        <span className=\"Comment__header-user\">\n                            <div className=\"Comment__Userpic-small\">\n                                <Userpic account={comment.author} />\n                            </div>\n                            <Author\n                                author={comment.author}\n                                authorRepLog10={authorRepLog10}\n                            />\n                        </span>\n                        &nbsp; &middot; &nbsp;\n                        <Link to={comment_link} className=\"PlainLink\">\n                            <TimeAgoWrapper\n                                date={comment.created}\n                                className=\"updated\"\n                            />\n                        </Link>\n                        {(this.state.collapsed || hide_body) && (\n                            <Voting post={post} showList={false} />\n                        )}\n                        {this.state.collapsed &&\n                            comment.children > 0 && (\n                                <span className=\"marginLeft1rem\">\n                                    {tt('g.reply_count', {\n                                        count: comment.children,\n                                    })}\n                                </span>\n                            )}\n                        {!this.state.collapsed &&\n                            hide_body && (\n                                <a\n                                    className=\"marginLeft1rem\"\n                                    onClick={this.revealBody}\n                                >\n                                    {tt('g.reveal_comment')}\n                                </a>\n                            )}\n                    </div>\n                    <div className=\"Comment__body entry-content\">\n                        {showEdit ? renderedEditor : body}\n                    </div>\n                    <div className=\"Comment__footer\">{controls}</div>\n                </div>\n                <div className=\"Comment__replies hfeed\">\n                    {showReply && renderedEditor}\n                    {replies}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Comment = connect(\n    // mapStateToProps\n    (state, ownProps) => {\n        const { content } = ownProps;\n\n        const username = state.user.getIn(['current', 'username']);\n        const ignore_list = username\n            ? state.global.getIn([\n                  'follow',\n                  'getFollowingAsync',\n                  username,\n                  'ignore_result',\n              ])\n            : null;\n\n        return {\n            ...ownProps,\n            anchor_link: '#@' + content, // Using a hash here is not standard but intentional; see issue #124 for details\n            username,\n            ignore_list,\n        };\n    },\n\n    // mapDispatchToProps\n    dispatch => ({\n        unlock: () => {\n            dispatch(userActions.showLogin());\n        },\n        deletePost: (author, permlink) => {\n            dispatch(\n                transactionActions.broadcastOperation({\n                    type: 'delete_comment',\n                    operation: { author, permlink },\n                    confirm: tt('g.are_you_sure'),\n                })\n            );\n        },\n    })\n)(CommentImpl);\nexport default Comment;\n"]}