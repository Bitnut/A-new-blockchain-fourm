{"version":3,"sources":["../../../../src/app/components/elements/ShowKey.js"],"names":["userActions","globalActions","ShowKey","showQr","state","show","wif","props","showQRKey","type","authType","text","pubkey","isPrivate","shouldComponentUpdate","onShow","onKey","setState","showLogin","accountName","username","bind","setWif","setOnKey","nextProps","nextState","privateKey","toPublicKey","toString","toWif","undefined","cmpProps","children","keyIcon","fontSize","showTip","keyLink","marginBottom","display","paddingRight","cursor","require","Component","propTypes","PropTypes","string","isRequired","func","object","ownProps","dispatch","loginDefault","showDialog","name","params"],"mappings":"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","file":"ShowKey.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport { connect } from 'react-redux';\nimport * as userActions from 'app/redux/UserReducer';\nimport tt from 'counterpart';\nimport * as globalActions from 'app/redux/GlobalReducer';\n\n/** Display a public key.  Offer to show a private key, but only if it matches the provided public key */\nclass ShowKey extends Component {\n    static propTypes = {\n        // HTML props\n        pubkey: PropTypes.string.isRequired,\n        authType: PropTypes.string.isRequired,\n        accountName: PropTypes.string.isRequired,\n        showLogin: PropTypes.func.isRequired,\n        privateKey: PropTypes.object,\n        cmpProps: PropTypes.object,\n        children: PropTypes.object,\n        onKey: PropTypes.func,\n    };\n    constructor() {\n        super();\n        this.state = {};\n        this.shouldComponentUpdate = shouldComponentUpdate(this, 'ShowKey');\n        this.onShow = () => {\n            const { state: { show, wif } } = this;\n            const { onKey, pubkey } = this.props;\n            this.setState({ show: !show });\n            if (onKey) onKey(!show ? wif : null, pubkey);\n        };\n        this.showLogin = () => {\n            const { showLogin, accountName, authType } = this.props;\n            showLogin({ username: accountName, authType });\n        };\n        this.showLogin = this.showLogin.bind(this);\n    }\n    componentWillMount() {\n        this.setWif(this.props, this.state);\n        this.setOnKey(this.props, this.state);\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setWif(nextProps);\n    }\n    componentWillUpdate(nextProps, nextState) {\n        this.setOnKey(nextProps, nextState);\n    }\n    setWif(props) {\n        const { privateKey, pubkey } = props;\n        if (privateKey && pubkey === privateKey.toPublicKey().toString()) {\n            const wif = privateKey.toWif();\n            this.setState({ wif });\n        } else {\n            this.setState({ wif: undefined });\n        }\n    }\n    setOnKey(nextProps, nextState) {\n        const { show, wif } = nextState;\n        const { onKey, pubkey } = nextProps;\n        if (onKey) onKey(show ? wif : null, pubkey);\n    }\n    showQr = () => {\n        const { show, wif } = this.state;\n        this.props.showQRKey({\n            type: this.props.authType,\n            text: show ? wif : this.props.pubkey,\n            isPrivate: show,\n        });\n    };\n    render() {\n        const {\n            onShow,\n            showLogin,\n            props: { pubkey, cmpProps, children, authType },\n        } = this;\n        const { show, wif } = this.state;\n\n        const keyIcon = (\n            <span style={{ fontSize: '100%' }}>{tt('g.hide_private_key')}</span>\n        );\n        // Tooltip is trigggering a setState on unmounted component exception\n        const showTip = tt('g.show_private_key'); //<Tooltip t=\"Show private key (WIF)\">show</Tooltip>\n\n        const keyLink = wif ? (\n            <div\n                style={{ marginBottom: 0 }}\n                className=\"hollow tiny button slim\"\n            >\n                <a onClick={onShow}>{show ? keyIcon : showTip}</a>\n            </div>\n        ) : authType === 'memo' ? null : authType === 'owner' ? null : (\n            <div\n                style={{ marginBottom: 0 }}\n                className=\"hollow tiny button slim\"\n            >\n                <a onClick={showLogin}>{tt('g.login_to_show')}</a>\n            </div>\n        );\n\n        return (\n            <div className=\"row\">\n                <div className=\"column small-12 medium-10\">\n                    <div\n                        style={{\n                            display: 'inline-block',\n                            paddingRight: 10,\n                            cursor: 'pointer',\n                        }}\n                        onClick={this.showQr}\n                    >\n                        <img\n                            src={require('app/assets/images/qrcode.png')}\n                            height=\"40\"\n                            width=\"40\"\n                        />\n                    </div>\n                    {/* Keep this as wide as possible, check print preview makes sure WIF it not cut off */}\n                    <span {...cmpProps}>{show ? wif : pubkey}</span>\n                </div>\n                <div className=\"column small-12 medium-2 noPrint\">\n                    {keyLink}\n                </div>\n                {/*<div className=\"column small-1\">\n                {children}\n            </div>*/}\n            </div>\n        );\n    }\n}\nexport default connect(\n    (state, ownProps) => ownProps,\n    dispatch => ({\n        showLogin: ({ username, authType }) => {\n            dispatch(\n                userActions.showLogin({ loginDefault: { username, authType } })\n            );\n        },\n        showQRKey: ({ type, isPrivate, text }) => {\n            dispatch(\n                globalActions.showDialog({\n                    name: 'qr_key',\n                    params: { type, isPrivate, text },\n                })\n            );\n        },\n    })\n)(ShowKey);\n"]}