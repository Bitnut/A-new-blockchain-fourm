{"version":3,"sources":["../../../../src/app/components/elements/SavingsWithdrawHistory.jsx"],"names":["transactionActions","globalActions","userActions","SavingsWithdrawHistory","state","shouldComponentUpdate","loadHistory","nextProps","force","props","savings_withdraws","username","forEach","fro","withdraw","get","request_id","cancelWithdraw","setState","success","fail","count","initActions","idx","rows","map","toJS","complete","amount","to","from","memo","dest","loading","React","Component","ownProps","user","getIn","dispatch","loadSavingsWithdraw","errorCallback","confirm","successCallback","getState","url","broadcastOperation","type","operation"],"mappings":"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","file":"SavingsWithdrawHistory.js","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport tt from 'counterpart';\n\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport * as globalActions from 'app/redux/GlobalReducer';\nimport * as userActions from 'app/redux/UserReducer';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport LoadingIndicator from 'app/components/elements/LoadingIndicator';\nimport TimeAgoWrapper from 'app/components/elements/TimeAgoWrapper';\nimport Memo from 'app/components/elements/Memo';\n\nclass SavingsWithdrawHistory extends React.Component {\n    constructor() {\n        super();\n        this.state = {};\n        this.shouldComponentUpdate = shouldComponentUpdate(\n            this,\n            'SavingsWithdrawHistory'\n        );\n    }\n\n    componentWillMount() {\n        this.loadHistory();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.loadHistory(false, nextProps);\n    }\n\n    loadHistory(force = true, props = this.props) {\n        const { savings_withdraws } = props;\n        const { loadHistory, username } = props;\n        if ((force || !savings_withdraws) && username) loadHistory(username);\n    }\n\n    initActions(props = this.props) {\n        const { savings_withdraws } = props;\n        savings_withdraws.forEach(withdraw => {\n            const fro = withdraw.get('from');\n            const request_id = withdraw.get('request_id');\n            this['cancel_' + request_id] = () => {\n                const { cancelWithdraw } = props;\n                this.setState({ ['loading_' + request_id]: true });\n                const success = () => {\n                    this.loadHistory();\n                    this.setState({ ['loading_' + request_id]: false });\n                };\n                const fail = () => {\n                    this.setState({ ['loading_' + request_id]: false });\n                };\n                cancelWithdraw(fro, request_id, success, fail);\n            };\n        });\n    }\n\n    render() {\n        const { savings_withdraws } = this.props;\n        if (!savings_withdraws || !savings_withdraws.count()) return null;\n        this.initActions();\n        let idx = 0;\n        const rows = savings_withdraws.map(withdraw => {\n            const {\n                complete,\n                amount,\n                to,\n                from,\n                memo,\n                request_id,\n            } = withdraw.toJS();\n            const dest =\n                to === from\n                    ? tt('savingswithdrawhistory_jsx.to', { to })\n                    : tt('savingswithdrawhistory_jsx.from_to', { from, to });\n            const loading = this.state['loading_' + request_id];\n            return (\n                <tr key={idx++}>\n                    <td>\n                        <TimeAgoWrapper date={complete} />\n                    </td>\n                    <td>\n                        {tt('savingswithdrawhistory_jsx.withdraw', { amount })}{' '}\n                        {dest}\n                        &nbsp;\n                        {/* A cancel link puts the action very close to the info stating what is being canceled */}\n                        {!loading && (\n                            <span>\n                                (<a onClick={this['cancel_' + request_id]}>\n                                    {tt('g.cancel')}\n                                </a>)\n                            </span>\n                        )}\n                        {loading && (\n                            <span>\n                                <LoadingIndicator type=\"circle\" />\n                            </span>\n                        )}\n                    </td>\n                    <td>\n                        <Memo text={memo} />\n                    </td>\n                </tr>\n            );\n        });\n        return (\n            <div className=\"SavingsWithdrawHistory\">\n                <div className=\"row\">\n                    <div className=\"column small-12\">\n                        <h4>\n                            {tt(\n                                'savingswithdrawhistory_jsx.pending_savings_withdrawals'\n                            )}\n                        </h4>\n                        <table>\n                            <tbody>{rows}</tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nimport { connect } from 'react-redux';\n\nexport default connect(\n    (state, ownProps) => {\n        const username = state.user.getIn(['current', 'username']);\n        const savings_withdraws = state.user.get('savings_withdraws');\n        return {\n            ...ownProps,\n            username,\n            savings_withdraws,\n        };\n    },\n    dispatch => ({\n        loadHistory: () => dispatch(userActions.loadSavingsWithdraw({})),\n        cancelWithdraw: (fro, request_id, success, errorCallback) => {\n            const confirm = tt(\n                'savingswithdrawhistory_jsx.cancel_this_withdraw_request'\n            );\n            const successCallback = () => {\n                // refresh transfer history\n                dispatch(globalActions.getState({ url: `@${fro}/transfers` }));\n                success();\n            };\n            dispatch(\n                transactionActions.broadcastOperation({\n                    type: 'cancel_transfer_from_savings',\n                    operation: { from: fro, request_id },\n                    confirm,\n                    successCallback,\n                    errorCallback,\n                })\n            );\n        },\n    })\n)(SavingsWithdrawHistory);\n"]}