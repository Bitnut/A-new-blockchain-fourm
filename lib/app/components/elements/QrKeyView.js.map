{"version":3,"sources":["../../../../src/app/components/elements/QrKeyView.jsx"],"names":["type","text","isPrivate","onClose","key"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe,gBAAwC;AAAA,QAArCA,IAAqC,QAArCA,IAAqC;AAAA,QAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,QAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,QAAdC,OAAc,QAAdA,OAAc;;AACnD,WACI;AAAA;AAAA,UAAK,WAAU,+BAAf;AACI;AAAA;AAAA;AACKD,wBACK,2BAAG,oCAAH,EAAyC,EAAEE,KAAKJ,IAAP,EAAzC,CADL,GAEK,2BAAG,mCAAH,EAAwC,EAAEI,KAAKJ,IAAP,EAAxC,CAHV;AAAA;AAAA,SADJ;AAMI,iDANJ;AAOI,sCAAC,iBAAD,IAAQ,MAAMC,IAAd,GAPJ;AASI;AAAA;AAAA;AACI,qDADJ;AAEI;AAAA;AAAA;AACI,0BAAK,QADT;AAEI,+BAAU,eAFd;AAGI,6BAASE;AAHb;AAKK,2CAAG,SAAH;AALL;AAFJ;AATJ,KADJ;AAsBH,C","file":"QrKeyView.js","sourcesContent":["import React from 'react';\nimport QRCode from 'react-qr';\nimport tt from 'counterpart';\n\nexport default ({ type, text, isPrivate, onClose }) => {\n    return (\n        <div className=\"text-center Dialog__qr_viewer\">\n            <h3>\n                {isPrivate\n                    ? tt('userkeys_jsx.private_something_key', { key: type })\n                    : tt('userkeys_jsx.public_something_key', { key: type })}:\n            </h3>\n            <br />\n            <QRCode text={text} />\n\n            <div>\n                <br />\n                <button\n                    type=\"button\"\n                    className=\"button hollow\"\n                    onClick={onClose}\n                >\n                    {tt('g.close')}\n                </button>\n            </div>\n        </div>\n    );\n};\n"]}