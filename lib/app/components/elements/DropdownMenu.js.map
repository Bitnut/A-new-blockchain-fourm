{"version":3,"sources":["../../../../src/app/components/elements/DropdownMenu.jsx"],"names":["DropdownMenu","props","toggle","shown","state","hide","e","show","preventDefault","setState","document","addEventListener","inside_dropdown","target","removeEventListener","navigate","a","nodeName","toLowerCase","parentNode","host","window","location","browserHistory","push","pathname","search","getSelectedLabel","items","selected","selectedEntry","find","i","value","selectedLabel","label","el","children","className","title","href","position","hasDropdown","length","entry","menu","cls","React","createElement","Component","propTypes","PropTypes","arrayOf","object","isRequired","string"],"mappings":"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","file":"DropdownMenu.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { browserHistory } from 'react-router';\nimport Icon from 'app/components/elements/Icon';\nimport VerticalMenu from './VerticalMenu';\nimport { findParent } from 'app/utils/DomUtils';\n\nexport default class DropdownMenu extends React.Component {\n    static propTypes = {\n        items: PropTypes.arrayOf(PropTypes.object).isRequired,\n        selected: PropTypes.string,\n        children: PropTypes.object,\n        className: PropTypes.string,\n        title: PropTypes.string,\n        href: PropTypes.string,\n        el: PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            shown: false,\n            selected: props.selected,\n        };\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.hide);\n    }\n\n    toggle = e => {\n        const { shown } = this.state;\n        if (shown) this.hide(e);\n        else this.show(e);\n    };\n\n    show = e => {\n        e.preventDefault();\n        this.setState({ shown: true });\n        document.addEventListener('click', this.hide);\n    };\n\n    hide = e => {\n        // Do not hide the dropdown if there was a click within it.\n        const inside_dropdown = !!findParent(e.target, 'VerticalMenu');\n        if (inside_dropdown) return;\n\n        e.preventDefault();\n        this.setState({ shown: false });\n        document.removeEventListener('click', this.hide);\n    };\n\n    navigate = e => {\n        const a =\n            e.target.nodeName.toLowerCase() === 'a'\n                ? e.target\n                : e.target.parentNode;\n        this.setState({ show: false });\n        if (a.host !== window.location.host) return;\n        e.preventDefault();\n        browserHistory.push(a.pathname + a.search);\n    };\n\n    getSelectedLabel = (items, selected) => {\n        const selectedEntry = items.find(i => i.value === selected);\n        const selectedLabel =\n            selectedEntry && selectedEntry.label\n                ? selectedEntry.label\n                : selected;\n        return selectedLabel;\n    };\n\n    render() {\n        const {\n            el,\n            items,\n            selected,\n            children,\n            className,\n            title,\n            href,\n            position,\n        } = this.props;\n        const hasDropdown = items.length > 0;\n\n        let entry = children || (\n            <span>\n                {this.getSelectedLabel(items, selected)}\n                {hasDropdown && <Icon name=\"dropdown-arrow\" />}\n            </span>\n        );\n\n        if (hasDropdown)\n            entry = (\n                <a key=\"entry\" href={href || '#'} onClick={this.toggle}>\n                    {entry}\n                </a>\n            );\n\n        const menu = (\n            <VerticalMenu\n                key=\"menu\"\n                title={title}\n                items={items}\n                hideValue={selected}\n                className=\"VerticalMenu\"\n            />\n        );\n        const cls =\n            'DropdownMenu' +\n            (this.state.shown ? ' show' : '') +\n            (className ? ` ${className}` : '') +\n            (position ? ` ${position}` : '');\n        return React.createElement(el, { className: cls }, [entry, menu]);\n    }\n}\n"]}