{"version":3,"sources":["../../../../src/app/components/elements/YoutubePreview.jsx"],"names":["string","PropTypes","number","YoutubePreview","shouldComponentUpdate","onPlay","setState","play","state","props","youTubeId","width","height","dataParams","thumbnail","previewLink","backgroundImage","autoPlaySrc","React","Component","propTypes","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;mBAAA;;;AACA;;;;AACA;;;;AACA;;;;;;IAEQA,M,GAAmBC,mB,CAAnBD,M;IAAQE,M,GAAWD,mB,CAAXC,M;;AAEhB;;IACqBC,c;;;AAcjB,8BAAc;AAAA;;AAAA;;AAAA,cAKdC,qBALc,GAKU,4CAA4B,gBAA5B,CALV;;AAAA,cAOdC,MAPc,GAOL,YAAM;AACX,kBAAKC,QAAL,CAAc,EAAEC,MAAM,IAAR,EAAd;AACH,SATa;;AAEV,cAAKC,KAAL,GAAa,EAAb;AAFU;AAGb;;;;iCAQQ;AAAA,yBAC4C,KAAKC,KADjD;AAAA,gBACGC,SADH,UACGA,SADH;AAAA,gBACcC,KADd,UACcA,KADd;AAAA,gBACqBC,MADrB,UACqBA,MADrB;AAAA,gBAC6BC,UAD7B,UAC6BA,UAD7B;AAAA,gBAEGN,IAFH,GAEY,KAAKC,KAFjB,CAEGD,IAFH;;AAGL,gBAAI,CAACA,IAAL,EAAW;AACP;AACA;AACA;AACA,oBAAMO,YACFH,SAAS,GAAT,GACM,eADN,GAEMA,SAAS,GAAT,GAAe,eAAf,GAAiC,OAH3C;AAIA,oBAAMI,8CAA4CL,SAA5C,SACFI,SADJ;AAGA,uBACI;AAAA;AAAA;AACI,mCAAU,sBADd;AAEI,iCAAS,KAAKT,MAFlB;AAGI,+BAAO,EAAEW,iBAAiB,SAASD,WAAT,GAAuB,GAA1C;AAHX;AAKI,2DAAK,WAAU,MAAf;AALJ,iBADJ;AASH;AACD,gBAAME,iDACFP,SADE,+BAEoBG,UAF1B;AAGA,mBACI;AAAA;AAAA,kBAAK,WAAU,cAAf;AACI;AACI,2BAAOF,KADX;AAEI,4BAAQC,MAFZ;AAGI,yBAAKK,WAHT;AAII,iCAAY,GAJhB;AAKI,qCAAgB;AALpB;AADJ,aADJ;AAWH;;;EA/DuCC,gBAAMC,S,UACvCC,S,GAAY;AACfV,eAAWV,OAAOqB,UADH;AAEfV,WAAOT,MAFQ;AAGfU,YAAQV,MAHO;AAIfW,gBAAYb;AAJG,C,SAOZsB,Y,GAAe;AAClBX,WAAO,GADW;AAElBC,YAAQ,GAFU;AAGlBC,gBAAY;AAHM,C;kBARLV,c","file":"YoutubePreview.js","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\n\nconst { string, number } = PropTypes;\n\n/** Lots of iframes in a post can be very slow.  This component only inserts the iframe when it is actually needed. */\nexport default class YoutubePreview extends React.Component {\n    static propTypes = {\n        youTubeId: string.isRequired,\n        width: number,\n        height: number,\n        dataParams: string,\n    };\n\n    static defaultProps = {\n        width: 640,\n        height: 360,\n        dataParams: 'enablejsapi=0&rel=0&origin=https://steemit.com',\n    };\n\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldComponentUpdate(this, 'YoutubePreview');\n\n    onPlay = () => {\n        this.setState({ play: true });\n    };\n\n    render() {\n        const { youTubeId, width, height, dataParams } = this.props;\n        const { play } = this.state;\n        if (!play) {\n            // mqdefault.jpg (medium quality version, 320px × 180px)\n            // hqdefault.jpg (high quality version, 480px × 360px\n            // sddefault.jpg (standard definition version, 640px × 480px)\n            const thumbnail =\n                width <= 320\n                    ? 'mqdefault.jpg'\n                    : width <= 480 ? 'hqdefault.jpg' : '0.jpg';\n            const previewLink = `https://img.youtube.com/vi/${youTubeId}/${\n                thumbnail\n            }`;\n            return (\n                <div\n                    className=\"videoWrapper youtube\"\n                    onClick={this.onPlay}\n                    style={{ backgroundImage: 'url(' + previewLink + ')' }}\n                >\n                    <div className=\"play\" />\n                </div>\n            );\n        }\n        const autoPlaySrc = `https://www.youtube.com/embed/${\n            youTubeId\n        }?autoplay=1&autohide=1&${dataParams}`;\n        return (\n            <div className=\"videoWrapper\">\n                <iframe\n                    width={width}\n                    height={height}\n                    src={autoPlaySrc}\n                    frameBorder=\"0\"\n                    allowFullScreen=\"true\"\n                />\n            </div>\n        );\n    }\n}\n"]}