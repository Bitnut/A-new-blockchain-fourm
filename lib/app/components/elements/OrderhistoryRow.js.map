{"version":3,"sources":["../../../../src/app/components/elements/OrderhistoryRow.jsx"],"names":["React","require","OrderhistoryRow","props","state","animate","index","rowIndex","timeout","setTimeout","setState","nextProps","order","equals","_clearAnimate","clearTimeout","nextState","total","buy","className","date","color","getStringPrice","getSteemAmount","toFixed","getSBDAmount","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AADA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;;IAGqBC,e;;;AACjB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAGf,cAAKC,KAAL,GAAa;AACTC,qBAASF,MAAME,OAAN,IAAiBF,MAAMG,KAAN,KAAgB,CADjC;AAETC,sBAAUJ,MAAMG;AAFP,SAAb;;AAKA,cAAKE,OAAL,GAAe,IAAf;AARe;AASlB;;;;wCAEe;AAAA;;AACZC,uBAAW,YAAM;AACb,uBAAKC,QAAL,CAAc;AACVL,6BAAS;AADC,iBAAd;AAGH,aAJD,EAIG,IAJH;AAKH;;;kDAEyBM,S,EAAW;AACjC,gBAAI,KAAKP,KAAL,CAAWG,QAAX,KAAwBI,UAAUL,KAAtC,EAA6C;AACzC,uBAAO,KAAKI,QAAL,CAAc;AACjBH,8BAAUI,UAAUL;AADH,iBAAd,CAAP;AAGH;;AAED,gBAAI,CAAC,KAAKH,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBF,UAAUC,KAAlC,CAAL,EAA+C;AAC3C,uBAAO,KAAKF,QAAL,CAAc,EAAEL,SAAS,IAAX,EAAd,EAAiC,KAAKS,aAAtC,CAAP;AACH;;AAED;AACA;AACA;AACA;AACA;AACH;;;4CAEmB;AAChB,gBAAI,KAAKV,KAAL,CAAWC,OAAf,EAAwB;AACpB,qBAAKS,aAAL;AACH;AACJ;;;+CAEsB;AACnBC,yBAAa,KAAKP,OAAlB;AACH;;;8CAEqBG,S,EAAWK,S,EAAW;AACxC,mBACI,CAAC,KAAKb,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBF,UAAUC,KAAlC,CAAD,IACA,KAAKT,KAAL,CAAWc,KAAX,KAAqBN,UAAUM,KAD/B,IAEA,KAAKb,KAAL,CAAWC,OAAX,KAAuBW,UAAUX,OAHrC;AAKH;;;iCAEQ;AAAA,yBACuB,KAAKF,KAD5B;AAAA,gBACCS,KADD,UACCA,KADD;AAAA,gBACQM,GADR,UACQA,GADR;AAAA,gBACaD,KADb,UACaA,KADb;;;AAGL,gBAAIE,YAAY,KAAKf,KAAL,CAAWC,OAAX,GAAqB,UAArB,GAAkC,EAAlD;;AAEA,mBACI;AAAA;AAAA,kBAAI,WAAWc,SAAf;AACI;AAAA;AAAA;AACI,wCAAC,wBAAD,IAAgB,MAAMP,MAAMQ,IAA5B;AADJ,iBADJ;AAII;AAAA;AAAA,sBAAI,WAAWR,MAAMS,KAArB;AAA6BT,0BAAMU,cAAN;AAA7B,iBAJJ;AAKI;AAAA;AAAA;AAAKV,0BAAMW,cAAN,GAAuBC,OAAvB,CAA+B,CAA/B;AAAL,iBALJ;AAMI;AAAA;AAAA;AAAKZ,0BAAMa,YAAN,GAAqBD,OAArB,CAA6B,CAA7B;AAAL;AANJ,aADJ;AAUH;;;EAvEwCxB,MAAM0B,S;;kBAA9BxB,e","file":"OrderhistoryRow.js","sourcesContent":["var React = require('react');\nimport TimeAgoWrapper from 'app/components/elements/TimeAgoWrapper';\n\nexport default class OrderhistoryRow extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            animate: props.animate && props.index !== 9,\n            rowIndex: props.index,\n        };\n\n        this.timeout = null;\n    }\n\n    _clearAnimate() {\n        setTimeout(() => {\n            this.setState({\n                animate: false,\n            });\n        }, 1000);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.rowIndex !== nextProps.index) {\n            return this.setState({\n                rowIndex: nextProps.index,\n            });\n        }\n\n        if (!this.props.order.equals(nextProps.order)) {\n            return this.setState({ animate: true }, this._clearAnimate);\n        }\n\n        // if (this.props.index === 0) {\n        //     console.log(\"*******\\n\", nextProps.order.getSBDAmount(), this.props.order.getSBDAmount());\n        //     console.log(nextProps.order.getSteemAmount(), this.props.order.getSteemAmount());\n        //     console.log(nextProps.order.getPrice(), this.props.order.getPrice());\n        // }\n    }\n\n    componentDidMount() {\n        if (this.state.animate) {\n            this._clearAnimate();\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timeout);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            !this.props.order.equals(nextProps.order) ||\n            this.props.total !== nextProps.total ||\n            this.state.animate !== nextState.animate\n        );\n    }\n\n    render() {\n        let { order, buy, total } = this.props;\n\n        let className = this.state.animate ? 'animate ' : '';\n\n        return (\n            <tr className={className}>\n                <td>\n                    <TimeAgoWrapper date={order.date} />\n                </td>\n                <td className={order.color}>{order.getStringPrice()}</td>\n                <td>{order.getSteemAmount().toFixed(3)}</td>\n                <td>{order.getSBDAmount().toFixed(3)}</td>\n            </tr>\n        );\n    }\n}\n"]}