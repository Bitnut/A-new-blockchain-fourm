{"version":3,"sources":["../../../../src/app/components/elements/LoadingIndicator.jsx"],"names":["LoadingIndicator","props","state","progress","type","inline","style","React","Component","propTypes","PropTypes","oneOf","bool","object","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEMA,gB;;;AAYF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA,8JACTA,KADS;;AAEf,cAAKC,KAAL,GAAa,EAAEC,UAAU,CAAZ,EAAb;AAFe;AAGlB;;;;iCAEQ;AAAA,yBAC2B,KAAKF,KADhC;AAAA,gBACGG,IADH,UACGA,IADH;AAAA,gBACSC,MADT,UACSA,MADT;AAAA,gBACiBC,KADjB,UACiBA,KADjB;;AAEL,oBAAQF,IAAR;AACI,qBAAK,MAAL;AACI,2BACI;AAAA;AAAA;AACI,mCAAOE,KADX;AAEI,uCAAU;AAFd;AAII,+DAAK,WAAU,SAAf,GAJJ;AAKI,+DAAK,WAAU,SAAf,GALJ;AAMI,+DAAK,WAAU,SAAf;AANJ,qBADJ;AAUJ,qBAAK,QAAL;AACI,2BACI;AAAA;AAAA;AACI,mCAAOA,KADX;AAEI,uCACI,6BACCD,SAAS,SAAT,GAAqB,EADtB;AAHR;AAOI;AAPJ,qBADJ;AAWJ;AACA,qBAAK,eAAL;AACI,2BACI;AAAA;AAAA;AACI,mCAAOC,KADX;AAEI,uCAAW;AAFf;AAII;AAJJ,qBADJ;AAQJ;AACI,2BACI;AAAA;AAAA;AACI,uCACI,sCACC,KAAKH,QAAL,GAAgB,CAAhB,GAAoB,gBAApB,GAAuC,EADxC,CAFR;AAKI,mCAAOG;AALX;AAOI;AAAA;AAAA,8BAAK,WAAU,eAAf;AACI;AAAA;AAAA,kCAAK,WAAU,SAAf;AACI,uEAAK,WAAU,SAAf,GADJ;AAEI,uEAAK,WAAU,SAAf,GAFJ;AAGI,uEAAK,WAAU,SAAf;AAHJ,6BADJ;AAMI;AAAA;AAAA,kCAAK,WAAU,oBAAf;AACI;AAAA;AAAA;AAAO,yCAAKJ,KAAL,CAAWC;AAAlB;AADJ;AANJ;AAPJ,qBADJ;AAnCR;AAwDH;;;EA3E0BI,gBAAMC,S,UAC1BC,S,GAAY;AACf;AACAL,UAAMM,oBAAUC,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,eAAnB,CAAhB,CAFS;AAGfN,YAAQK,oBAAUE,IAHH;AAIfN,WAAOI,oBAAUG;AAJF,C,SAOZC,Y,GAAe;AAClBR,WAAO;AADW,C;kBAsEXN,gB","file":"LoadingIndicator.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LoadingIndicator extends React.Component {\n    static propTypes = {\n        // html component attributes\n        type: PropTypes.oneOf(['dots', 'circle', 'circle-strong']),\n        inline: PropTypes.bool,\n        style: PropTypes.object,\n    };\n\n    static defaultProps = {\n        style: {},\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { progress: 0 };\n    }\n\n    render() {\n        const { type, inline, style } = this.props;\n        switch (type) {\n            case 'dots':\n                return (\n                    <div\n                        style={style}\n                        className=\"LoadingIndicator three-bounce\"\n                    >\n                        <div className=\"bounce1\" />\n                        <div className=\"bounce2\" />\n                        <div className=\"bounce3\" />\n                    </div>\n                );\n            case 'circle':\n                return (\n                    <div\n                        style={style}\n                        className={\n                            'LoadingIndicator circle' +\n                            (inline ? ' inline' : '')\n                        }\n                    >\n                        <div />\n                    </div>\n                );\n            //'strong' may be an evolving load indicator.\n            case 'circle-strong':\n                return (\n                    <div\n                        style={style}\n                        className={'LoadingIndicator circle circle-strong'}\n                    >\n                        <div />\n                    </div>\n                );\n            default:\n                return (\n                    <div\n                        className={\n                            'LoadingIndicator loading-overlay' +\n                            (this.progress > 0 ? ' with-progress' : '')\n                        }\n                        style={style}\n                    >\n                        <div className=\"loading-panel\">\n                            <div className=\"spinner\">\n                                <div className=\"bounce1\" />\n                                <div className=\"bounce2\" />\n                                <div className=\"bounce3\" />\n                            </div>\n                            <div className=\"progress-indicator\">\n                                <span>{this.state.progress}</span>\n                            </div>\n                        </div>\n                    </div>\n                );\n        }\n    }\n}\n\nexport default LoadingIndicator;\n"]}