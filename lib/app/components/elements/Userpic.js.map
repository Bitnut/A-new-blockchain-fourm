{"version":3,"sources":["../../../../src/app/components/elements/Userpic.jsx"],"names":["SIZE_SMALL","SIZE_MED","SIZE_LARGE","sizeList","avatarSize","small","medium","large","Userpic","shouldComponentUpdate","props","account","json_metadata","size","hideIfDefault","avSize","indexOf","md","JSON","parse","test","profile","profile_image","e","style","backgroundImage","Component","propTypes","PropTypes","string","isRequired","state","ownProps","global","getIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEO,IAAMA,kCAAa,OAAnB;AACA,IAAMC,8BAAW,QAAjB;AACA,IAAMC,kCAAa,OAAnB;;AAEP,IAAMC,WAAW,CAACH,UAAD,EAAaC,QAAb,EAAuBC,UAAvB,CAAjB;;AAEO,IAAME,kCAAa;AACtBC,WAAOL,UADe;AAEtBM,YAAQL,QAFc;AAGtBM,WAAOL;AAHe,CAAnB;;IAMDM,O;;;;;;;;;;;;;;kNACFC,qB,GAAwB,4CAA4B,SAA5B,C;;;;;iCAEf;AAAA,yBACoC,KAAKC,KADzC;AAAA,gBACGC,OADH,UACGA,OADH;AAAA,gBACYC,aADZ,UACYA,aADZ;AAAA,gBAC2BC,IAD3B,UAC2BA,IAD3B;;AAEL,gBAAMC,gBAAgB,KAAKJ,KAAL,CAAWI,aAAX,IAA4B,KAAlD;AACA,gBAAMC,SAASF,QAAQV,SAASa,OAAT,CAAiBH,IAAjB,IAAyB,CAAC,CAAlC,GAAsC,MAAMA,IAA5C,GAAmD,EAAlE;;AAEA;AACA,gBAAIC,aAAJ,EAAmB;AACf,oBAAI;AACA,wBAAMG,KAAKC,KAAKC,KAAL,CAAWP,aAAX,CAAX;AACA,wBAAI,CAAC,iBAAiBQ,IAAjB,CAAsBH,GAAGI,OAAH,CAAWC,aAAjC,CAAL,EAAsD;AAClD,+BAAO,IAAP;AACH;AACJ,iBALD,CAKE,OAAOC,CAAP,EAAU;AACR,2BAAO,IAAP;AACH;AACJ;;AAED,gBAAMC,QAAQ;AACVC,iCACI,SAAS,6BAAT,WAA6Bd,OAA7B,eAA8CI,MAA9C;AAFM,aAAd;;AAKA,mBAAO,uCAAK,WAAU,SAAf,EAAyB,OAAOS,KAAhC,GAAP;AACH;;;EA1BiBE,gB;;AA6BtBlB,QAAQmB,SAAR,GAAoB;AAChBhB,aAASiB,oBAAUC,MAAV,CAAiBC;AADV,CAApB;;kBAIe,yBAAQ,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,QAChCrB,OADgC,GACLqB,QADK,CAChCrB,OADgC;AAAA,QACvBG,aADuB,GACLkB,QADK,CACvBlB,aADuB;;AAExC,WAAO;AACHH,wBADG;AAEHC,uBAAemB,MAAME,MAAN,CAAaC,KAAb,CAAmB,CAC9B,UAD8B,EAE9BvB,OAF8B,EAG9B,eAH8B,CAAnB,CAFZ;AAOHG;AAPG,KAAP;AASH,CAXc,EAWZN,OAXY,C","file":"Userpic.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport { imageProxy } from 'app/utils/ProxifyUrl';\n\nexport const SIZE_SMALL = 'small';\nexport const SIZE_MED = 'medium';\nexport const SIZE_LARGE = 'large';\n\nconst sizeList = [SIZE_SMALL, SIZE_MED, SIZE_LARGE];\n\nexport const avatarSize = {\n    small: SIZE_SMALL,\n    medium: SIZE_MED,\n    large: SIZE_LARGE,\n};\n\nclass Userpic extends Component {\n    shouldComponentUpdate = shouldComponentUpdate(this, 'Userpic');\n\n    render() {\n        const { account, json_metadata, size } = this.props;\n        const hideIfDefault = this.props.hideIfDefault || false;\n        const avSize = size && sizeList.indexOf(size) > -1 ? '/' + size : '';\n\n        // try to extract image url from users metaData\n        if (hideIfDefault) {\n            try {\n                const md = JSON.parse(json_metadata);\n                if (!/^(https?:)\\/\\//.test(md.profile.profile_image)) {\n                    return null;\n                }\n            } catch (e) {\n                return null;\n            }\n        }\n\n        const style = {\n            backgroundImage:\n                'url(' + imageProxy() + `u/${account}/avatar${avSize})`,\n        };\n\n        return <div className=\"Userpic\" style={style} />;\n    }\n}\n\nUserpic.propTypes = {\n    account: PropTypes.string.isRequired,\n};\n\nexport default connect((state, ownProps) => {\n    const { account, hideIfDefault } = ownProps;\n    return {\n        account,\n        json_metadata: state.global.getIn([\n            'accounts',\n            account,\n            'json_metadata',\n        ]),\n        hideIfDefault,\n    };\n})(Userpic);\n"]}