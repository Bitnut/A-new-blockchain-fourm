{"version":3,"sources":["../../../../src/app/components/elements/OrderbookRow.jsx"],"names":["OrderRow","props","state","animate","index","rowIndex","timeout","_clearAnimate","nextProps","setState","order","equals","nextState","total","clearTimeout","setTimeout","side","bid","totalTD","toFixed","sbd","getStringSBD","steem","getStringSteem","price","getStringPrice","onClick","bind","React","Component","propTypes","PropTypes","object","string","number","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,Q;;;AASjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAGf,cAAKC,KAAL,GAAa;AACTC,qBAASF,MAAME,OAAN,IAAiBF,MAAMG,KAAN,KAAgB,CADjC;AAETC,sBAAUJ,MAAMG;AAFP,SAAb;;AAKA,cAAKE,OAAL,GAAe,IAAf;AARe;AASlB;;;;4CAEmB;AAChB,gBAAI,KAAKJ,KAAL,CAAWC,OAAf,EAAwB;AACpB,qBAAKI,aAAL;AACH;AACJ;;;kDAEyBC,S,EAAW;AACjC,gBAAI,KAAKN,KAAL,CAAWG,QAAX,KAAwBG,UAAUJ,KAAtC,EAA6C;AACzC,uBAAO,KAAKK,QAAL,CAAc;AACjBJ,8BAAUG,UAAUJ;AADH,iBAAd,CAAP;AAGH;;AAED,gBAAI,CAAC,KAAKH,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBH,UAAUE,KAAlC,CAAL,EAA+C;AAC3C,uBAAO,KAAKD,QAAL,CAAc,EAAEN,SAAS,IAAX,EAAd,EAAiC,KAAKI,aAAtC,CAAP;AACH;AACJ;;;8CAEqBC,S,EAAWI,S,EAAW;AACxC,mBACI,CAAC,KAAKX,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBH,UAAUE,KAAlC,CAAD,IACA,KAAKT,KAAL,CAAWY,KAAX,KAAqBL,UAAUK,KAD/B,IAEA,KAAKX,KAAL,CAAWC,OAAX,KAAuBS,UAAUT,OAHrC;AAKH;;;+CAEsB;AACnBW,yBAAa,KAAKR,OAAlB;AACH;;;wCAEe;AAAA;;AACZS,uBAAW,YAAM;AACb,uBAAKN,QAAL,CAAc;AACVN,6BAAS;AADC,iBAAd;AAGH,aAJD,EAIG,IAJH;AAKH;;;iCAEQ;AAAA,yBAC0B,KAAKF,KAD/B;AAAA,gBACGS,KADH,UACGA,KADH;AAAA,gBACUM,IADV,UACUA,IADV;AAAA,gBACgBH,KADhB,UACgBA,KADhB;;AAEL,gBAAMI,MAAMD,SAAS,MAArB;;AAEA,gBAAME,UAAU;AAAA;AAAA;AAAKL,sBAAMM,OAAN,CAAc,CAAd;AAAL,aAAhB;AACA,gBAAMC,MAAM;AAAA;AAAA;AAAKV,sBAAMW,YAAN;AAAL,aAAZ;AACA,gBAAMC,QAAQ;AAAA;AAAA;AAAKZ,sBAAMa,cAAN;AAAL,aAAd;AACA,gBAAMC,QACF;AAAA;AAAA;AACI;AAAA;AAAA;AAASd,0BAAMe,cAAN;AAAT;AADJ,aADJ;;AAMA,mBACI;AAAA;AAAA;AACI,6BAAS,KAAKxB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8BjB,MAAMc,KAApC,CADb;AAEI,+BAAW,KAAKtB,KAAL,CAAWC,OAAX,GAAqB,SAArB,GAAiC;AAFhD;AAIKc,sBAAMC,OAAN,GAAgBM,KAJrB;AAKKP,sBAAMG,GAAN,GAAYE,KALjB;AAMKL,sBAAMK,KAAN,GAAcF,GANnB;AAOKH,sBAAMO,KAAN,GAAcN;AAPnB,aADJ;AAWH;;;EAlFiCU,gBAAMC,S,UACjCC,S,GAAY;AACfpB,WAAOqB,oBAAUC,MADF;AAEfhB,UAAMe,oBAAUE,MAFD;AAGf7B,WAAO2B,oBAAUG,MAHF;AAIfrB,WAAOkB,oBAAUG,MAJF;AAKf/B,aAAS4B,oBAAUI;AALJ,C;kBADFnC,Q","file":"OrderbookRow.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class OrderRow extends React.Component {\n    static propTypes = {\n        order: PropTypes.object,\n        side: PropTypes.string,\n        index: PropTypes.number,\n        total: PropTypes.number,\n        animate: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super();\n\n        this.state = {\n            animate: props.animate && props.index !== 9,\n            rowIndex: props.index,\n        };\n\n        this.timeout = null;\n    }\n\n    componentDidMount() {\n        if (this.state.animate) {\n            this._clearAnimate();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.rowIndex !== nextProps.index) {\n            return this.setState({\n                rowIndex: nextProps.index,\n            });\n        }\n\n        if (!this.props.order.equals(nextProps.order)) {\n            return this.setState({ animate: true }, this._clearAnimate);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            !this.props.order.equals(nextProps.order) ||\n            this.props.total !== nextProps.total ||\n            this.state.animate !== nextState.animate\n        );\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timeout);\n    }\n\n    _clearAnimate() {\n        setTimeout(() => {\n            this.setState({\n                animate: false,\n            });\n        }, 1000);\n    }\n\n    render() {\n        const { order, side, total } = this.props;\n        const bid = side === 'bids';\n\n        const totalTD = <td>{total.toFixed(3)}</td>;\n        const sbd = <td>{order.getStringSBD()}</td>;\n        const steem = <td>{order.getStringSteem()}</td>;\n        const price = (\n            <td>\n                <strong>{order.getStringPrice()}</strong>\n            </td>\n        );\n\n        return (\n            <tr\n                onClick={this.props.onClick.bind(this, order.price)}\n                className={this.state.animate ? 'animate' : ''}\n            >\n                {bid ? totalTD : price}\n                {bid ? sbd : steem}\n                {bid ? steem : sbd}\n                {bid ? price : totalTD}\n            </tr>\n        );\n    }\n}\n"]}