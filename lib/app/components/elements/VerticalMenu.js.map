{"version":3,"sources":["../../../../src/app/components/elements/VerticalMenu.jsx"],"names":["VerticalMenu","closeMenu","e","button","ctrlKey","metaKey","document","body","click","props","items","title","className","hideValue","map","i","value","link","onClick","icon","label","addon","React","Component","propTypes","PropTypes","arrayOf","object","isRequired","string","oneOfType","element"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;IAEqBA,Y;;;;;;;;;;;;;;4NAQjBC,S,GAAY,aAAK;AACb;AACA,gBAAIC,EAAEC,MAAF,KAAa,CAAb,IAAkBD,EAAEE,OAApB,IAA+BF,EAAEG,OAArC,EAA8C;;AAE9C;AACAC,qBAASC,IAAT,CAAcC,KAAd;AACH,S;;;;;iCAEQ;AAAA;;AAAA,yBAC0C,KAAKC,KAD/C;AAAA,gBACGC,KADH,UACGA,KADH;AAAA,gBACUC,KADV,UACUA,KADV;AAAA,gBACiBC,SADjB,UACiBA,SADjB;AAAA,gBAC4BC,SAD5B,UAC4BA,SAD5B;;AAEL,mBACI;AAAA;AAAA;AACI,+BACI,gCACCD,YAAY,MAAMA,SAAlB,GAA8B,EAD/B;AAFR;AAMKD,yBAAS;AAAA;AAAA,sBAAI,WAAU,OAAd;AAAuBA;AAAvB,iBANd;AAOKD,sBAAMI,GAAN,CAAU,aAAK;AACZ,wBAAIC,EAAEC,KAAF,KAAYH,SAAhB,EAA2B,OAAO,IAAP;AAC3B,2BACI;AAAA;AAAA,0BAAI,KAAKE,EAAEC,KAAX,EAAkB,SAAS,OAAKf,SAAhC;AACKc,0BAAEE,IAAF,GACG;AAAC,6CAAD;AAAA,8BAAM,IAAIF,EAAEE,IAAZ,EAAkB,SAASF,EAAEG,OAA7B;AACKH,8BAAEI,IAAF,IAAU,8BAAC,cAAD,IAAM,MAAMJ,EAAEI,IAAd,GADf;AAEKJ,8BAAEK,KAAF,GAAUL,EAAEK,KAAZ,GAAoBL,EAAEC,KAF3B;AAGKD,8BAAEM;AAHP,yBADH,GAOG;AAAA;AAAA;AACKN,8BAAEI,IAAF,IAAU,8BAAC,cAAD,IAAM,MAAMJ,EAAEI,IAAd,GADf;AAEKJ,8BAAEK,KAAF,GAAUL,EAAEK,KAAZ,GAAoBL,EAAEC;AAF3B;AARR,qBADJ;AAgBH,iBAlBA;AAPL,aADJ;AA6BH;;;EA/CqCM,gBAAMC,S,UACrCC,S,GAAY;AACfd,WAAOe,oBAAUC,OAAV,CAAkBD,oBAAUE,MAA5B,EAAoCC,UAD5B;AAEfjB,WAAOc,oBAAUI,MAFF;AAGfjB,eAAWa,oBAAUI,MAHN;AAIfhB,eAAWY,oBAAUK,SAAV,CAAoB,CAACL,oBAAUI,MAAX,EAAmBJ,oBAAUM,OAA7B,CAApB;AAJI,C;kBADF/B,Y","file":"VerticalMenu.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport Icon from 'app/components/elements/Icon';\n\nexport default class VerticalMenu extends React.Component {\n    static propTypes = {\n        items: PropTypes.arrayOf(PropTypes.object).isRequired,\n        title: PropTypes.string,\n        className: PropTypes.string,\n        hideValue: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    };\n\n    closeMenu = e => {\n        // If this was not a left click, or if CTRL or CMD were held, do not close the menu.\n        if (e.button !== 0 || e.ctrlKey || e.metaKey) return;\n\n        // Simulate clicking of document body which will close any open menus\n        document.body.click();\n    };\n\n    render() {\n        const { items, title, className, hideValue } = this.props;\n        return (\n            <ul\n                className={\n                    'VerticalMenu menu vertical' +\n                    (className ? ' ' + className : '')\n                }\n            >\n                {title && <li className=\"title\">{title}</li>}\n                {items.map(i => {\n                    if (i.value === hideValue) return null;\n                    return (\n                        <li key={i.value} onClick={this.closeMenu}>\n                            {i.link ? (\n                                <Link to={i.link} onClick={i.onClick}>\n                                    {i.icon && <Icon name={i.icon} />}\n                                    {i.label ? i.label : i.value}\n                                    {i.addon}\n                                </Link>\n                            ) : (\n                                <span>\n                                    {i.icon && <Icon name={i.icon} />}\n                                    {i.label ? i.label : i.value}\n                                </span>\n                            )}\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n"]}