{"version":3,"sources":["../../../../src/app/components/elements/QrReader.jsx"],"names":["Qr","props","handleError","console","error","onClose","handleScan","data","process","env","BROWSER","React","Component","propTypes","PropTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,E;;;AAKjB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEf,cAAKC,WAAL,GAAmB,iBAAS;AACxBC,oBAAQC,KAAR,CAAcA,KAAd;AACH,SAFD;AAFe,YAKPC,OALO,GAKiBJ,KALjB,CAKPI,OALO;AAAA,YAKEC,UALF,GAKiBL,KALjB,CAKEK,UALF;;AAMf,cAAKA,UAAL,GAAkB,gBAAQ;AACtBA,uBAAWC,IAAX;AACA,gBAAIF,OAAJ,EAAaA;AAChB,SAHD;AANe;AAUlB;;;;iCACQ;AAAA,gBACGH,WADH,GAC+B,IAD/B,CACGA,WADH;AAAA,gBACgBI,UADhB,GAC+B,IAD/B,CACgBA,UADhB;AAEL;AACA;;AACA,gBAAI,CAACE,QAAQC,GAAR,CAAYC,OAAjB,EAA0B,OAAO,2CAAP;AAC1B,mBAAO,2CAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;EAhC2BC,gBAAMC,S,UAC3BC,S,GAAY;AACfP,gBAAYQ,oBAAUC,IAAV,CAAeC,UADZ;AAEfX,aAASS,oBAAUC;AAFJ,C;kBADFf,E","file":"QrReader.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Qr extends React.Component {\n    static propTypes = {\n        handleScan: PropTypes.func.isRequired,\n        onClose: PropTypes.func,\n    };\n    constructor(props) {\n        super();\n        this.handleError = error => {\n            console.error(error);\n        };\n        const { onClose, handleScan } = props;\n        this.handleScan = data => {\n            handleScan(data);\n            if (onClose) onClose();\n        };\n    }\n    render() {\n        const { handleError, handleScan } = this;\n        // Watch out, QrReader can mess up the nodejs server, tries to ref `navigator`\n        // The server does not need a QrReader anyways\n        if (!process.env.BROWSER) return <span />;\n        return <span />;\n        // a) Leaves the camera on when closing dialog - react-qr-reader v0.2.4\n        // b) Only saw this work in Chrome - 0.2.4\n        // try {\n        //     const QrReader = require(\"react-qr-reader\").default\n        //     return <QrReader width={320} height={240} handleError={handleError}\n        //         {...this.props} handleScan={handleScan} />\n        // } catch(error) {\n        //     console.log(error)\n        //     return <span></span>\n        // }\n    }\n}\n"]}