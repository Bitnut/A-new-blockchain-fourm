{"version":3,"sources":["../../../../src/app/components/elements/ReplyEditor.jsx"],"names":["transactionActions","userActions","globalActions","remarkable","Remarkable","html","linkify","breaks","RTE_DEFAULT","ReplyEditor","props","shouldComponentUpdate","onTitleChange","value","e","target","hasMarkdown","test","setState","titleWarn","title","state","onChange","onCancel","preventDefault","formId","defaultPayoutType","replyForm","body","confirm","resetForm","rte_value","stateFromHtml","richTextEditor","progress","setPayoutType","stateToHtml","toggleRte","rte","isHtmlTest","stateFromMarkdown","localStorage","setItem","showAdvancedSettings","payoutType","onDrop","acceptedFiles","rejectedFiles","length","error","console","log","file","upload","name","onOpenClick","dropzone","open","onPasteCapture","clipboardData","items","item","kind","type","blob","getAsFile","noClipboardData","uploadImage","message","url","image_md","refs","postRef","selectionStart","selectionEnd","substring","setTimeout","initForm","setMetaData","jsonMetadata","process","env","BROWSER","isStory","JSON","parse","getItem","raw","draft","category","titleRef","focus","_focus","nextProps","nextState","ts","ns","tp","np","data","undefined","clearTimeout","saveEditorTimeout","showDraftSaved","clearMetaData","fields","isEdit","maxKb","instance","initialValues","validation","values","trim","className","offsetWidth","originalPost","reply","username","noImage","author","permlink","parent_author","parent_permlink","successCallback","submitting","valid","handleSubmit","postError","disabled","loading","errorCallback","estr","successCallbackWrapper","args","isHtml","replyParams","postLabel","hasTitleError","touched","titleError","vframe_class","vframe_section_class","vframe_section_shrink_class","RichTextEditor","startLoadingIndicator","marginRight","onBlur","node","marginTop","React","Component","propTypes","PropTypes","string","isRequired","oneOf","func","object","defaultProps","stripHtmlWrapper","text","m","match","toString","createValueFromString","createEmptyValue","markdown","render","require","default","ownProps","user","getIn","push","tags","join","app","ret","dispatch","clearMeta","id","meta","steem","showPostAdvancedSettings","set","key","isNew","linkProps","Error","rtags","mutate","allowedTags","forEach","htmltags","delete","tag","size","Array","map","formCategories","replace","split","rootCategory","first","allCategories","toJS","add","postHashtags","hashtags","shift","usertags","users","images","image","links","format","sanitizeErrors","includingCategory","tagsLength","originalBody","__config","comment_options","max_accepted_payout","percent_steem_dollars","operation","json_metadata","broadcastOperation"],"mappings":"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","file":"ReplyEditor.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport reactForm from 'app/utils/ReactForm';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport * as userActions from 'app/redux/UserReducer';\nimport MarkdownViewer from 'app/components/cards/MarkdownViewer';\nimport CategorySelector from 'app/components/cards/CategorySelector';\nimport { validateCategory } from 'app/components/cards/CategorySelector';\nimport LoadingIndicator from 'app/components/elements/LoadingIndicator';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport Tooltip from 'app/components/elements/Tooltip';\nimport sanitizeConfig, { allowedTags } from 'app/utils/SanitizeConfig';\nimport sanitize from 'sanitize-html';\nimport HtmlReady from 'shared/HtmlReady';\nimport * as globalActions from 'app/redux/GlobalReducer';\nimport { Set } from 'immutable';\nimport Remarkable from 'remarkable';\nimport Dropzone from 'react-dropzone';\nimport tt from 'counterpart';\n\nconst remarkable = new Remarkable({ html: true, linkify: false, breaks: true });\n\nconst RTE_DEFAULT = false;\n\nclass ReplyEditor extends React.Component {\n    static propTypes = {\n        // html component attributes\n        formId: PropTypes.string.isRequired, // unique form id for each editor\n        type: PropTypes.oneOf(['submit_story', 'submit_comment', 'edit']),\n        successCallback: PropTypes.func, // indicator that the editor is done and can be hidden\n        onCancel: PropTypes.func, // hide editor when cancel button clicked\n\n        author: PropTypes.string, // empty or string for top-level post\n        permlink: PropTypes.string, // new or existing category (default calculated from title)\n        parent_author: PropTypes.string, // empty or string for top-level post\n        parent_permlink: PropTypes.string, // new or existing category\n        jsonMetadata: PropTypes.object, // An existing comment has its own meta data\n        category: PropTypes.string, // initial value\n        title: PropTypes.string, // initial value\n        body: PropTypes.string, // initial value\n        richTextEditor: PropTypes.func,\n        defaultPayoutType: PropTypes.string,\n        payoutType: PropTypes.string,\n    };\n\n    static defaultProps = {\n        isStory: false,\n        author: '',\n        parent_author: '',\n        parent_permlink: '',\n        type: 'submit_comment',\n    };\n\n    constructor(props) {\n        super();\n        this.state = { progress: {} };\n        this.initForm(props);\n    }\n\n    componentWillMount() {\n        const { setMetaData, formId, jsonMetadata } = this.props;\n        setMetaData(formId, jsonMetadata);\n\n        if (process.env.BROWSER) {\n            // Check for rte editor preference\n            let rte =\n                this.props.isStory &&\n                JSON.parse(\n                    localStorage.getItem('replyEditorData-rte') || RTE_DEFAULT\n                );\n            let raw = null;\n\n            // Process initial body value (if this is an edit)\n            const { body } = this.state;\n            if (body.value) {\n                raw = body.value;\n            }\n\n            // Check for draft data\n            let draft = localStorage.getItem('replyEditorData-' + formId);\n            if (draft) {\n                draft = JSON.parse(draft);\n                const { category, title } = this.state;\n                if (category) category.props.onChange(draft.category);\n                if (title) title.props.onChange(draft.title);\n                if (draft.payoutType)\n                    this.props.setPayoutType(formId, draft.payoutType);\n                raw = draft.body;\n            }\n\n            // If we have an initial body, check if it's html or markdown\n            if (raw) {\n                rte = isHtmlTest(raw);\n            }\n\n            // console.log(\"initial reply body:\", raw || '(empty)')\n            body.props.onChange(raw);\n            this.setState({\n                rte,\n                rte_value: rte\n                    ? stateFromHtml(this.props.richTextEditor, raw)\n                    : null,\n            });\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.props.isStory) this.refs.titleRef.focus();\n            else if (this.refs.postRef) this.refs.postRef.focus();\n            else if (this.refs.rte) this.refs.rte._focus();\n        }, 300);\n    }\n\n    shouldComponentUpdate = shouldComponentUpdate(this, 'ReplyEditor');\n\n    componentWillUpdate(nextProps, nextState) {\n        if (process.env.BROWSER) {\n            const ts = this.state;\n            const ns = nextState;\n            const tp = this.props;\n            const np = nextProps;\n\n            // Save curent draft to localStorage\n            if (\n                ts.body.value !== ns.body.value ||\n                (ns.category && ts.category.value !== ns.category.value) ||\n                (ns.title && ts.title.value !== ns.title.value) ||\n                np.payoutType !== tp.payoutType\n            ) {\n                // also prevents saving after parent deletes this information\n                const { formId, payoutType } = np;\n                const { category, title, body } = ns;\n                const data = {\n                    formId,\n                    title: title ? title.value : undefined,\n                    category: category ? category.value : undefined,\n                    body: body.value,\n                    payoutType,\n                };\n\n                clearTimeout(saveEditorTimeout);\n                saveEditorTimeout = setTimeout(() => {\n                    // console.log('save formId', formId, body.value)\n                    localStorage.setItem(\n                        'replyEditorData-' + formId,\n                        JSON.stringify(data, null, 0)\n                    );\n                    this.showDraftSaved();\n                }, 500);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        const { clearMetaData, formId } = this.props;\n        clearMetaData(formId);\n    }\n\n    initForm(props) {\n        const { isStory, type, fields } = props;\n        const isEdit = type === 'edit';\n        const maxKb = isStory ? 65 : 16;\n        reactForm({\n            fields,\n            instance: this,\n            name: 'replyForm',\n            initialValues: props.initialValues,\n            validation: values => ({\n                title:\n                    isStory &&\n                    (!values.title || values.title.trim() === ''\n                        ? tt('g.required')\n                        : values.title.length > 255\n                          ? tt('reply_editor.shorten_title')\n                          : null),\n                category: isStory && validateCategory(values.category, !isEdit),\n                body: !values.body\n                    ? tt('g.required')\n                    : values.body.length > maxKb * 1024\n                      ? tt('reply_editor.exceeds_maximum_length', { maxKb })\n                      : null,\n            }),\n        });\n    }\n\n    onTitleChange = e => {\n        const value = e.target.value;\n        // TODO block links in title (they do not make good permlinks)\n        const hasMarkdown = /(?:\\*[\\w\\s]*\\*|\\#[\\w\\s]*\\#|_[\\w\\s]*_|~[\\w\\s]*~|\\]\\s*\\(|\\]\\s*\\[)/.test(\n            value\n        );\n        this.setState({\n            titleWarn: hasMarkdown\n                ? tt('reply_editor.markdown_not_supported')\n                : '',\n        });\n        const { title } = this.state;\n        title.props.onChange(e);\n    };\n\n    onCancel = e => {\n        if (e) e.preventDefault();\n        const { formId, onCancel, defaultPayoutType } = this.props;\n        const { replyForm, body } = this.state;\n        if (\n            !body.value ||\n            confirm(tt('reply_editor.are_you_sure_you_want_to_clear_this_form'))\n        ) {\n            replyForm.resetForm();\n            this.setState({\n                rte_value: stateFromHtml(this.props.richTextEditor),\n            });\n            this.setState({ progress: {} });\n            this.props.setPayoutType(formId, defaultPayoutType);\n            if (onCancel) onCancel(e);\n        }\n    };\n\n    // As rte_editor is updated, keep the (invisible) 'body' field in sync.\n    onChange = rte_value => {\n        this.setState({ rte_value });\n        const html = stateToHtml(rte_value);\n        const { body } = this.state;\n        if (body.value !== html) body.props.onChange(html);\n    };\n\n    toggleRte = e => {\n        e.preventDefault();\n        const state = { rte: !this.state.rte };\n        if (state.rte) {\n            const { body } = this.state;\n            state.rte_value = isHtmlTest(body.value)\n                ? stateFromHtml(this.props.richTextEditor, body.value)\n                : stateFromMarkdown(this.props.richTextEditor, body.value);\n        }\n        this.setState(state);\n        localStorage.setItem('replyEditorData-rte', !this.state.rte);\n    };\n    showDraftSaved() {\n        const { draft } = this.refs;\n        draft.className = 'ReplyEditor__draft';\n        void draft.offsetWidth; // reset animation\n        draft.className = 'ReplyEditor__draft ReplyEditor__draft-saved';\n    }\n\n    showAdvancedSettings = e => {\n        e.preventDefault();\n        this.props.setPayoutType(this.props.formId, this.props.payoutType);\n        this.props.showAdvancedSettings(this.props.formId);\n    };\n\n    onDrop = (acceptedFiles, rejectedFiles) => {\n        if (!acceptedFiles.length) {\n            if (rejectedFiles.length) {\n                this.setState({\n                    progress: { error: 'Please insert only image files.' },\n                });\n                console.log('onDrop Rejected files: ', rejectedFiles);\n            }\n            return;\n        }\n        const file = acceptedFiles[0];\n        this.upload(file, file.name);\n    };\n\n    onOpenClick = () => {\n        this.dropzone.open();\n    };\n\n    onPasteCapture = e => {\n        try {\n            if (e.clipboardData) {\n                for (const item of e.clipboardData.items) {\n                    if (item.kind === 'file' && /^image\\//.test(item.type)) {\n                        const blob = item.getAsFile();\n                        this.upload(blob);\n                    }\n                }\n            } else {\n                // http://joelb.me/blog/2011/code-snippet-accessing-clipboard-images-with-javascript/\n                // contenteditable element that catches all pasted data\n                this.setState({ noClipboardData: true });\n            }\n        } catch (error) {\n            console.error('Error analyzing clipboard event', error);\n        }\n    };\n\n    upload = (file, name = '') => {\n        const { uploadImage } = this.props;\n        this.setState({\n            progress: { message: tt('reply_editor.uploading') },\n        });\n        uploadImage(file, progress => {\n            if (progress.url) {\n                this.setState({ progress: {} });\n                const { url } = progress;\n                const image_md = `![${name}](${url})`;\n                const { body } = this.state;\n                const { selectionStart, selectionEnd } = this.refs.postRef;\n                body.props.onChange(\n                    body.value.substring(0, selectionStart) +\n                        image_md +\n                        body.value.substring(selectionEnd, body.value.length)\n                );\n            } else {\n                this.setState({ progress });\n            }\n            setTimeout(() => {\n                this.setState({ progress: {} });\n            }, 4000); // clear message\n        });\n    };\n\n    render() {\n        const originalPost = {\n            category: this.props.category,\n            body: this.props.body,\n        };\n        const { onCancel, onTitleChange } = this;\n        const { title, category, body } = this.state;\n        const {\n            reply,\n            username,\n            isStory,\n            formId,\n            noImage,\n            author,\n            permlink,\n            parent_author,\n            parent_permlink,\n            type,\n            jsonMetadata,\n            state,\n            successCallback,\n            defaultPayoutType,\n            payoutType,\n        } = this.props;\n        const { submitting, valid, handleSubmit } = this.state.replyForm;\n        const { postError, titleWarn, rte } = this.state;\n        const { progress, noClipboardData } = this.state;\n        const disabled = submitting || !valid;\n        const loading = submitting || this.state.loading;\n\n        const errorCallback = estr => {\n            this.setState({ postError: estr, loading: false });\n        };\n        const successCallbackWrapper = (...args) => {\n            this.setState({ loading: false });\n            this.props.setPayoutType(formId, defaultPayoutType);\n            if (successCallback) successCallback(args);\n        };\n        const isEdit = type === 'edit';\n        const isHtml = rte || isHtmlTest(body.value);\n        const replyParams = {\n            author,\n            permlink,\n            parent_author,\n            parent_permlink,\n            type,\n            state,\n            originalPost,\n            isHtml,\n            isStory,\n            jsonMetadata,\n            payoutType,\n            successCallback: successCallbackWrapper,\n            errorCallback,\n        };\n        const postLabel = username ? (\n            <Tooltip t={tt('g.post_as_user', { username })}>\n                {tt('g.post')}\n            </Tooltip>\n        ) : (\n            tt('g.post')\n        );\n        const hasTitleError = title && title.touched && title.error;\n        let titleError = null;\n        // The Required title error (triggered onBlur) can shift the form making it hard to click on things..\n        if (\n            (hasTitleError &&\n                (title.error !== tt('g.required') || body.value !== '')) ||\n            titleWarn\n        ) {\n            titleError = (\n                <div className={hasTitleError ? 'error' : 'warning'}>\n                    {hasTitleError ? title.error : titleWarn}&nbsp;\n                </div>\n            );\n        }\n\n        // TODO: remove all references to these vframe classes. Removed from css and no longer needed.\n        const vframe_class = isStory ? 'vframe' : '';\n        const vframe_section_class = isStory ? 'vframe__section' : '';\n        const vframe_section_shrink_class = isStory\n            ? 'vframe__section--shrink'\n            : '';\n        const RichTextEditor = this.props.richTextEditor;\n\n        return (\n            <div className=\"ReplyEditor row\">\n                <div className=\"column small-12\">\n                    <div\n                        ref=\"draft\"\n                        className=\"ReplyEditor__draft ReplyEditor__draft-hide\"\n                    >\n                        {tt('reply_editor.draft_saved')}\n                    </div>\n                    <form\n                        className={vframe_class}\n                        onSubmit={handleSubmit(({ data }) => {\n                            const startLoadingIndicator = () =>\n                                this.setState({\n                                    loading: true,\n                                    postError: undefined,\n                                });\n                            reply({\n                                ...data,\n                                ...replyParams,\n                                startLoadingIndicator,\n                            });\n                        })}\n                        onChange={() => {\n                            this.setState({ postError: null });\n                        }}\n                    >\n                        <div className={vframe_section_shrink_class}>\n                            {isStory && (\n                                <span>\n                                    <input\n                                        type=\"text\"\n                                        className=\"ReplyEditor__title\"\n                                        onChange={onTitleChange}\n                                        disabled={loading}\n                                        placeholder={tt('reply_editor.title')}\n                                        autoComplete=\"off\"\n                                        ref=\"titleRef\"\n                                        tabIndex={1}\n                                        {...title.props}\n                                    />\n                                    <div\n                                        className=\"float-right secondary\"\n                                        style={{ marginRight: '1rem' }}\n                                    >\n                                        {rte && (\n                                            <a\n                                                href=\"#\"\n                                                onClick={this.toggleRte}\n                                            >\n                                                {body.value\n                                                    ? 'Raw HTML'\n                                                    : 'Markdown'}\n                                            </a>\n                                        )}\n                                        {!rte &&\n                                            (isHtml || !body.value) && (\n                                                <a\n                                                    href=\"#\"\n                                                    onClick={this.toggleRte}\n                                                >\n                                                    {tt('reply_editor.editor')}\n                                                </a>\n                                            )}\n                                    </div>\n                                    {titleError}\n                                </span>\n                            )}\n                        </div>\n\n                        <div\n                            className={\n                                'ReplyEditor__body ' +\n                                (rte\n                                    ? `rte ${vframe_section_class}`\n                                    : vframe_section_shrink_class)\n                            }\n                        >\n                            {process.env.BROWSER && rte ? (\n                                <RichTextEditor\n                                    ref=\"rte\"\n                                    readOnly={loading}\n                                    value={this.state.rte_value}\n                                    onChange={this.onChange}\n                                    onBlur={body.onBlur}\n                                    tabIndex={2}\n                                />\n                            ) : (\n                                <span>\n                                    <Dropzone\n                                        onDrop={this.onDrop}\n                                        className={\n                                            type === 'submit_story'\n                                                ? 'dropzone'\n                                                : 'none'\n                                        }\n                                        disableClick\n                                        multiple={false}\n                                        accept=\"image/*\"\n                                        ref={node => {\n                                            this.dropzone = node;\n                                        }}\n                                    >\n                                        <textarea\n                                            {...body.props}\n                                            ref=\"postRef\"\n                                            onPasteCapture={this.onPasteCapture}\n                                            className={\n                                                type === 'submit_story'\n                                                    ? 'upload-enabled'\n                                                    : ''\n                                            }\n                                            disabled={loading}\n                                            rows={isStory ? 10 : 3}\n                                            placeholder={\n                                                isStory\n                                                    ? tt('g.write_your_story')\n                                                    : tt('g.reply')\n                                            }\n                                            autoComplete=\"off\"\n                                            tabIndex={2}\n                                        />\n                                    </Dropzone>\n                                    <p className=\"drag-and-drop\">\n                                        {tt(\n                                            'reply_editor.insert_images_by_dragging_dropping'\n                                        )}\n                                        {noClipboardData\n                                            ? ''\n                                            : tt(\n                                                  'reply_editor.pasting_from_the_clipboard'\n                                              )}\n                                        {tt('reply_editor.or_by')}{' '}\n                                        <a onClick={this.onOpenClick}>\n                                            {tt('reply_editor.selecting_them')}\n                                        </a>.\n                                    </p>\n                                    {progress.message && (\n                                        <div className=\"info\">\n                                            {progress.message}\n                                        </div>\n                                    )}\n                                    {progress.error && (\n                                        <div className=\"error\">\n                                            {tt('reply_editor.image_upload')} :{' '}\n                                            {progress.error}\n                                        </div>\n                                    )}\n                                </span>\n                            )}\n                        </div>\n                        <div className={vframe_section_shrink_class}>\n                            <div className=\"error\">\n                                {body.touched &&\n                                    body.error &&\n                                    body.error !== 'Required' &&\n                                    body.error}\n                            </div>\n                        </div>\n\n                        <div\n                            className={vframe_section_shrink_class}\n                            style={{ marginTop: '0.5rem' }}\n                        >\n                            {isStory && (\n                                <span>\n                                    <CategorySelector\n                                        {...category.props}\n                                        disabled={loading}\n                                        isEdit={isEdit}\n                                        tabIndex={3}\n                                    />\n                                    <div className=\"error\">\n                                        {(category.touched || category.value) &&\n                                            category.error}&nbsp;\n                                    </div>\n                                </span>\n                            )}\n                        </div>\n                        <div className={vframe_section_shrink_class}>\n                            {isStory &&\n                                !isEdit && (\n                                    <div className=\"ReplyEditor__options\">\n                                        <div>\n                                            <div>\n                                                {tt('g.rewards')}\n                                                {': '}\n                                                {this.props.payoutType ==\n                                                    '0%' &&\n                                                    tt(\n                                                        'reply_editor.decline_payout'\n                                                    )}\n                                                {this.props.payoutType ==\n                                                    '50%' &&\n                                                    tt(\n                                                        'reply_editor.default_50_50'\n                                                    )}\n                                                {this.props.payoutType ==\n                                                    '100%' &&\n                                                    tt(\n                                                        'reply_editor.power_up_100'\n                                                    )}\n                                            </div>\n                                            <a\n                                                href=\"#\"\n                                                onClick={\n                                                    this.showAdvancedSettings\n                                                }\n                                            >\n                                                {tt(\n                                                    'reply_editor.advanced_settings'\n                                                )}\n                                            </a>{' '}\n                                            <br />\n                                            &nbsp;\n                                        </div>\n                                    </div>\n                                )}\n                        </div>\n                        <div className={vframe_section_shrink_class}>\n                            {postError && (\n                                <div className=\"error\">{postError}</div>\n                            )}\n                        </div>\n                        <div className={vframe_section_shrink_class}>\n                            {!loading && (\n                                <button\n                                    type=\"submit\"\n                                    className=\"button\"\n                                    disabled={disabled}\n                                    tabIndex={4}\n                                >\n                                    {isEdit\n                                        ? tt('reply_editor.update_post')\n                                        : postLabel}\n                                </button>\n                            )}\n                            {loading && (\n                                <span>\n                                    <br />\n                                    <LoadingIndicator type=\"circle\" />\n                                </span>\n                            )}\n                            &nbsp;{' '}\n                            {!loading &&\n                                this.props.onCancel && (\n                                    <button\n                                        type=\"button\"\n                                        className=\"secondary hollow button no-border\"\n                                        tabIndex={5}\n                                        onClick={onCancel}\n                                    >\n                                        {tt('g.cancel')}\n                                    </button>\n                                )}\n                            {!loading &&\n                                !this.props.onCancel && (\n                                    <button\n                                        className=\"button hollow no-border\"\n                                        tabIndex={5}\n                                        disabled={submitting}\n                                        onClick={onCancel}\n                                    >\n                                        {tt('g.clear')}\n                                    </button>\n                                )}\n                            {!isStory &&\n                                !isEdit &&\n                                this.props.payoutType != '50%' && (\n                                    <div className=\"ReplyEditor__options float-right text-right\">\n                                        {tt('g.rewards')}\n                                        {': '}\n                                        {this.props.payoutType == '0%' &&\n                                            tt('reply_editor.decline_payout')}\n                                        {this.props.payoutType == '100%' &&\n                                            tt('reply_editor.power_up_100')}\n                                        {'. '}\n                                        <a href={'/@' + username + '/settings'}>\n                                            Update settings\n                                        </a>\n                                    </div>\n                                )}\n                        </div>\n                        {!loading &&\n                            !rte &&\n                            body.value && (\n                                <div\n                                    className={\n                                        'Preview ' + vframe_section_shrink_class\n                                    }\n                                >\n                                    {!isHtml && (\n                                        <div className=\"float-right\">\n                                            <a\n                                                target=\"_blank\"\n                                                href=\"https://guides.github.com/features/mastering-markdown/\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                {tt(\n                                                    'reply_editor.markdown_styling_guide'\n                                                )}\n                                            </a>\n                                        </div>\n                                    )}\n                                    <h6>{tt('g.preview')}</h6>\n                                    <MarkdownViewer\n                                        text={body.value}\n                                        jsonMetadata={jsonMetadata}\n                                        large={isStory}\n                                        noImage={noImage}\n                                    />\n                                </div>\n                            )}\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet saveEditorTimeout;\n\n// removes <html></html> wrapper if exists\nfunction stripHtmlWrapper(text) {\n    const m = text.match(/<html>\\n*([\\S\\s]+?)?\\n*<\\/html>/m);\n    return m && m.length === 2 ? m[1] : text;\n}\n\n// See also MarkdownViewer render\nconst isHtmlTest = text => /^<html>/.test(text);\n\nfunction stateToHtml(state) {\n    let html = state.toString('html');\n    if (html === '<p></p>') html = '';\n    if (html === '<p><br></p>') html = '';\n    if (html == '') return '';\n    return `<html>\\n${html}\\n</html>`;\n}\n\nfunction stateFromHtml(RichTextEditor, html = null) {\n    if (!RichTextEditor) return null;\n    if (html) html = stripHtmlWrapper(html);\n    if (html && html.trim() == '') html = null;\n    return html\n        ? RichTextEditor.createValueFromString(html, 'html')\n        : RichTextEditor.createEmptyValue();\n}\n\nfunction stateFromMarkdown(RichTextEditor, markdown) {\n    let html;\n    if (markdown && markdown.trim() !== '') {\n        html = remarkable.render(markdown);\n        html = HtmlReady(html).html; // TODO: option to disable youtube conversion, @-links, img proxy\n        //html = htmlclean(html) // normalize whitespace\n        console.log('markdown converted to:', html);\n    }\n    return stateFromHtml(RichTextEditor, html);\n}\n\nimport { connect } from 'react-redux';\nconst richTextEditor = process.env.BROWSER\n    ? require('react-rte-image').default\n    : null;\n\nexport default formId =>\n    connect(\n        // mapStateToProps\n        (state, ownProps) => {\n            const username = state.user.getIn(['current', 'username']);\n            const fields = ['body'];\n            const { type, parent_author, jsonMetadata } = ownProps;\n            const isEdit = type === 'edit';\n            const isStory =\n                /submit_story/.test(type) || (isEdit && parent_author === '');\n            if (isStory) fields.push('title');\n            if (isStory) fields.push('category');\n\n            let { category, title, body } = ownProps;\n            if (/submit_/.test(type)) title = body = '';\n            if (isStory && jsonMetadata && jsonMetadata.tags) {\n                category = Set([category, ...jsonMetadata.tags]).join(' ');\n            }\n\n            const defaultPayoutType = state.app.getIn(\n                [\n                    'user_preferences',\n                    isStory ? 'defaultBlogPayout' : 'defaultCommentPayout',\n                ],\n                '50%'\n            );\n            let payoutType = state.user.getIn([\n                'current',\n                'post',\n                formId,\n                'payoutType',\n            ]);\n            if (!payoutType) {\n                payoutType = defaultPayoutType;\n            }\n\n            const ret = {\n                ...ownProps,\n                fields,\n                isStory,\n                username,\n                defaultPayoutType,\n                payoutType,\n                initialValues: { title, body, category },\n                state,\n                formId,\n                richTextEditor,\n            };\n            return ret;\n        },\n\n        // mapDispatchToProps\n        dispatch => ({\n            clearMetaData: id => {\n                dispatch(globalActions.clearMeta({ id }));\n            },\n            setMetaData: (id, jsonMetadata) => {\n                dispatch(\n                    globalActions.setMetaData({\n                        id,\n                        meta: jsonMetadata ? jsonMetadata.steem : null,\n                    })\n                );\n            },\n            uploadImage: (file, progress) =>\n                dispatch(userActions.uploadImage({ file, progress })),\n            showAdvancedSettings: formId =>\n                dispatch(userActions.showPostAdvancedSettings({ formId })),\n            setPayoutType: (formId, payoutType) =>\n                dispatch(\n                    userActions.set({\n                        key: ['current', 'post', formId, 'payoutType'],\n                        value: payoutType,\n                    })\n                ),\n            reply: ({\n                category,\n                title,\n                body,\n                author,\n                permlink,\n                parent_author,\n                parent_permlink,\n                isHtml,\n                isStory,\n                type,\n                originalPost,\n                payoutType = '50%',\n                state,\n                jsonMetadata,\n                successCallback,\n                errorCallback,\n                startLoadingIndicator,\n            }) => {\n                // const post = state.global.getIn(['content', author + '/' + permlink])\n                const username = state.user.getIn(['current', 'username']);\n\n                const isEdit = type === 'edit';\n                const isNew = /^submit_/.test(type);\n\n                // Wire up the current and parent props for either an Edit or a Submit (new post)\n                //'submit_story', 'submit_comment', 'edit'\n                const linkProps = isNew\n                    ? {\n                          // submit new\n                          parent_author: author,\n                          parent_permlink: permlink,\n                          author: username,\n                          // permlink,  assigned in TransactionSaga\n                      }\n                    : // edit existing\n                      isEdit\n                      ? { author, permlink, parent_author, parent_permlink }\n                      : null;\n\n                if (!linkProps) throw new Error('Unknown type: ' + type);\n\n                // If this is an HTML post, it MUST begin and end with the tag\n                if (isHtml && !body.match(/^<html>[\\s\\S]*<\\/html>$/)) {\n                    errorCallback(\n                        'HTML posts must begin with <html> and end with </html>'\n                    );\n                    return;\n                }\n\n                let rtags;\n                {\n                    const html = isHtml ? body : remarkable.render(body);\n                    rtags = HtmlReady(html, { mutate: false });\n                }\n\n                allowedTags.forEach(tag => {\n                    rtags.htmltags.delete(tag);\n                });\n                if (isHtml) rtags.htmltags.delete('html'); // html tag allowed only in HTML mode\n                if (rtags.htmltags.size) {\n                    errorCallback(\n                        'Please remove the following HTML elements from your post: ' +\n                            Array(...rtags.htmltags)\n                                .map(tag => `<${tag}>`)\n                                .join(', ')\n                    );\n                    return;\n                }\n\n                const formCategories = Set(\n                    category\n                        ? category\n                              .trim()\n                              .replace(/#/g, '')\n                              .split(/ +/)\n                        : []\n                );\n                const rootCategory =\n                    originalPost && originalPost.category\n                        ? originalPost.category\n                        : formCategories.first();\n                let allCategories = Set([...formCategories.toJS()]);\n                if (/^[-a-z\\d]+$/.test(rootCategory))\n                    allCategories = allCategories.add(rootCategory);\n\n                let postHashtags = [...rtags.hashtags];\n                while (allCategories.size < 5 && postHashtags.length > 0) {\n                    allCategories = allCategories.add(postHashtags.shift());\n                }\n\n                // merge\n                const meta = isEdit ? jsonMetadata : {};\n                if (allCategories.size) meta.tags = allCategories.toJS();\n                else delete meta.tags;\n                if (rtags.usertags.size) meta.users = rtags.usertags;\n                else delete meta.users;\n                if (rtags.images.size) meta.image = rtags.images;\n                else delete meta.image;\n                if (rtags.links.size) meta.links = rtags.links;\n                else delete meta.links;\n\n                meta.app = 'steemit/0.1';\n                if (isStory) {\n                    meta.format = isHtml ? 'html' : 'markdown';\n                }\n\n                // if(Object.keys(json_metadata.steem).length === 0) json_metadata = {}// keep json_metadata minimal\n                const sanitizeErrors = [];\n                sanitize(body, sanitizeConfig({ sanitizeErrors }));\n                if (sanitizeErrors.length) {\n                    errorCallback(sanitizeErrors.join('.  '));\n                    return;\n                }\n\n                if (meta.tags.length > 5) {\n                    const includingCategory = isEdit\n                        ? tt('reply_editor.including_the_category', {\n                              rootCategory,\n                          })\n                        : '';\n                    errorCallback(\n                        tt('reply_editor.use_limited_amount_of_tags', {\n                            tagsLength: meta.tags.length,\n                            includingCategory,\n                        })\n                    );\n                    return;\n                }\n\n                startLoadingIndicator();\n\n                const originalBody = isEdit ? originalPost.body : null;\n                const __config = { originalBody };\n                // Avoid changing payout option during edits #735\n                if (!isEdit) {\n                    switch (payoutType) {\n                        case '0%': // decline payout\n                            __config.comment_options = {\n                                max_accepted_payout: '0.000 SBD',\n                            };\n                            break;\n                        case '100%': // 100% steem power payout\n                            __config.comment_options = {\n                                percent_steem_dollars: 0, // 10000 === 100% (of 50%)\n                            };\n                            break;\n                        default: // 50% steem power, 50% sd+steem\n                    }\n                }\n\n                const operation = {\n                    ...linkProps,\n                    category: rootCategory,\n                    title,\n                    body,\n                    json_metadata: meta,\n                    __config,\n                };\n                dispatch(\n                    transactionActions.broadcastOperation({\n                        type: 'comment',\n                        operation,\n                        errorCallback,\n                        successCallback,\n                    })\n                );\n            },\n        })\n    )(ReplyEditor);\n"]}