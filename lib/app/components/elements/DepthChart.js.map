{"version":3,"sources":["../../../../src/app/components/elements/DepthChart.jsx"],"names":["ReactHighcharts","require","power","precision","orderEqual","a","b","price","steem","sbd","ordersEqual","length","key","DepthChart","nextProps","bids","props","asks","refs","depthChart","chart","getChart","series","generateBidAsk","getMinMax","min","max","setData","xAxis","setExtremes","depth_chart_config","generateDepthChart","React","Component","propTypes","PropTypes","array","bidsArray","asksArray","aggregateOrders","orders","ttl","map","o","sort","unshift","push","highestBid","lowestAsk","middle","Math","process","env","BROWSER","step","name","color","fillColor","tooltip","valueSuffix","LIQUID_TICKER","data","title","text","subtitle","type","zoomType","labels","formatter","value","ordinal","lineColor","yAxis","lineWidth","align","toFixed","gridLineWidth","legend","enabled","credits","rangeSelector","navigator","scrollbar","dataGrouping","shared","backgroundColor","x","CURRENCY_SIGN","LIQUID_TOKEN_UPPERCASE","y","DEBT_TOKEN_SHORT","style","plotOptions","animation"],"mappings":"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","file":"DepthChart.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n//import Highcharts from 'highcharts';\nconst ReactHighcharts = require('react-highcharts/dist/ReactHighstock');\nimport tt from 'counterpart';\nimport {\n    LIQUID_TOKEN_UPPERCASE,\n    DEBT_TOKEN_SHORT,\n    LIQUID_TICKER,\n    CURRENCY_SIGN,\n} from 'app/client_config';\n\n//Highstock does not play well with decimal x values, so we need to\n// multiply the x values by a constant factor and divide by this factor for\n// display purposes (tooltip, x-axis)\nconst power = 100;\nconst precision = 1000;\n\nfunction orderEqual(a, b) {\n    return a.price === b.price && a.steem === b.steem && a.sbd === b.sbd;\n}\n\nfunction ordersEqual(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n\n    for (let key in a) {\n        if (!(key in b) || !orderEqual(a[key], b[key])) {\n            return false;\n        }\n    }\n\n    for (let key in b) {\n        if (!(key in a) || !orderEqual(a[key], b[key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nclass DepthChart extends React.Component {\n    static propTypes = {\n        bids: PropTypes.array,\n        asks: PropTypes.array,\n    };\n\n    shouldComponentUpdate(nextProps) {\n        // Don't update if the orders are the same as last time\n        if (\n            ordersEqual(nextProps.bids, this.props.bids) &&\n            ordersEqual(nextProps.asks, this.props.asks)\n        ) {\n            return false;\n        }\n\n        // Use HighCharts api once the chart has been initialized\n        if (this.refs.depthChart) {\n            // Only use the HighCharts api when both bids and asks already exist\n            const chart = this.refs.depthChart.getChart();\n            if (chart && 'series' in chart && chart.series.length === 2) {\n                const { bids, asks } = generateBidAsk(\n                    nextProps.bids,\n                    nextProps.asks\n                );\n                const { min, max } = getMinMax(bids, asks);\n\n                chart.series[0].setData(bids);\n                chart.series[1].setData(asks);\n                chart.xAxis[0].setExtremes(min, max);\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render() {\n        const { bids, asks } = this.props;\n        if (!bids.length && !asks.length) {\n            return null;\n        }\n        const depth_chart_config = generateDepthChart(bids, asks);\n        return (\n            <div className=\"DepthChart\">\n                <ReactHighcharts ref=\"depthChart\" config={depth_chart_config} />\n            </div>\n        );\n    }\n}\n\nexport default DepthChart;\n\nfunction generateBidAsk(bidsArray, asksArray) {\n    // Input raw orders (from TOP of order book DOWN), output grouped depth\n    function aggregateOrders(orders) {\n        if (typeof orders == 'undefined') {\n            return [];\n        }\n\n        let ttl = 0;\n        return orders\n            .map(o => {\n                ttl += o.sbd;\n                return [o.price * power, ttl];\n            })\n            .sort((a, b) => {\n                // Sort here to make sure arrays are in the right direction for HighCharts\n                return a[0] - b[0];\n            });\n    }\n\n    let bids = aggregateOrders(bidsArray);\n    // Insert a 0 entry to make sure the chart is centered properly\n    bids.unshift([0, bids[0][1]]);\n\n    let asks = aggregateOrders(asksArray);\n    // Insert a final entry to make sure the chart is centered properly\n    asks.push([asks[asks.length - 1][0] * 4, asks[asks.length - 1][1]]);\n\n    return { bids, asks };\n}\n\nfunction getMinMax(bids, asks) {\n    const highestBid = bids.length ? bids[bids.length - 1][0] : 0;\n    const lowestAsk = asks.length ? asks[0][0] : 1;\n\n    const middle = (highestBid + lowestAsk) / 2;\n\n    return {\n        min: Math.max(middle * 0.65, bids[0][0]),\n        max: Math.min(middle * 1.35, asks[asks.length - 1][0]),\n    };\n}\n\nfunction generateDepthChart(bidsArray, asksArray) {\n    const { bids, asks } = generateBidAsk(bidsArray, asksArray);\n    let series = [];\n\n    const { min, max } = getMinMax(bids, asks);\n\n    if (process.env.BROWSER) {\n        if (bids[0]) {\n            series.push({\n                step: 'right',\n                name: tt('g.bid'),\n                color: 'rgba(0,150,0,1.0)',\n                fillColor: 'rgba(0,150,0,0.2)',\n                tooltip: { valueSuffix: ' ' + LIQUID_TICKER },\n                data: bids,\n            });\n        }\n        if (asks[0]) {\n            series.push({\n                step: 'left',\n                name: tt('g.ask'),\n                color: 'rgba(150,0,0,1.0)',\n                fillColor: 'rgba(150,0,0,0.2)',\n                tooltip: { valueSuffix: ' ' + LIQUID_TICKER },\n                data: asks,\n            });\n        }\n    }\n\n    let depth_chart_config = {\n        title: { text: null },\n        subtitle: { text: null },\n        chart: { type: 'area', zoomType: 'x' },\n        xAxis: {\n            min: min,\n            max: max,\n            labels: {\n                formatter: function() {\n                    return this.value / power;\n                },\n            },\n            ordinal: false,\n            lineColor: '#000000',\n            title: {\n                text: null,\n            },\n        },\n        yAxis: {\n            title: { text: null },\n            lineWidth: 2,\n            labels: {\n                align: 'left',\n                formatter: function() {\n                    const value = this.value / precision;\n                    return (\n                        '$' +\n                        (value > 1e6\n                            ? (value / 1e6).toFixed(3) + 'M'\n                            : value > 10000\n                              ? (value / 1e3).toFixed(0) + 'k'\n                              : value)\n                    );\n                },\n            },\n            gridLineWidth: 1,\n        },\n        legend: { enabled: false },\n        credits: {\n            enabled: false,\n        },\n        rangeSelector: {\n            enabled: false,\n        },\n        navigator: {\n            enabled: false,\n        },\n        scrollbar: {\n            enabled: false,\n        },\n        dataGrouping: {\n            enabled: false,\n        },\n        tooltip: {\n            shared: false,\n            backgroundColor: 'rgba(0, 0, 0, 0.3)',\n            formatter() {\n                return (\n                    `<span>${tt('g.price')}: ${(this.x / power).toFixed(6)} ${\n                        CURRENCY_SIGN\n                    }/${LIQUID_TOKEN_UPPERCASE}</span><br/><span>\\u25CF</span>${\n                        this.series.name\n                    }: <b>${(this.y / 1000).toFixed(3)} ${DEBT_TOKEN_SHORT} ` +\n                    '(' +\n                    CURRENCY_SIGN +\n                    ')</b>'\n                );\n            },\n            style: {\n                color: '#FFFFFF',\n            },\n        },\n        plotOptions: { series: { animation: false } },\n        series,\n    };\n    //------------------------------\n    return depth_chart_config;\n}\n"]}