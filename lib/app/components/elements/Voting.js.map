{"version":3,"sources":["../../../../src/app/components/elements/Voting.jsx"],"names":["transactionActions","ABOUT_FLAG","MAX_VOTES_DISPLAY","VOTE_WEIGHT_DROPDOWN_THRESHOLD","SBD_PRINT_RATE_MAX","MAX_WEIGHT","Voting","props","state","showWeight","myVote","sliderWeight","up","down","voteUp","e","preventDefault","voteUpOrDown","voteDown","voting","setState","votingUp","votingDown","author","permlink","username","is_comment","weight","enable_slider","isFlag","flag","vote","handleWeightChange","w","storeSliderWeight","localStorage","setItem","readSliderWeight","sliderWeightUp","Number","getItem","sliderWeightDown","toggleWeightUp","toggleWeightUpOrDown","toggleWeightDown","shouldComponentUpdate","active_votes","_checkMyVote","nextProps","find","el","get","parseInt","showList","post_obj","price_per_steem","sbd_print_rate","votingUpActive","votingDownActive","slider","b","s","classDown","flagWeight","getIn","invokeFlag","revokeFlag","dropdown","repeat","total_votes","cashout_time","max_payout","pending_payout","percent_steem_dollars","pending_payout_sbd","pending_payout_sp","pending_payout_printed_sbd","pending_payout_printed_steem","promoted","total_author_payout","total_curator_payout","payout","payout_limit_hit","classUp","cashout_active","indexOf","payoutItems","push","value","join","DEBT_TOKEN_SHORT","LIQUID_TOKEN_UPPERCASE","INVEST_TOKEN_SHORT","payoutEl","opacity","length","voters_list","avotes","toJS","sort","a","Math","abs","rshares","voters","v","percent","voter","sign","link","count","voteUpClick","voteChevron","React","Component","propTypes","post","PropTypes","string","isRequired","bool","func","object","loggedin","number","defaultProps","ownProps","global","current_account","user","vesting_shares","delegated_vesting_shares","received_vesting_shares","net_vesting_shares","confirm","dispatch","broadcastOperation","type","operation","__config","title","errorCallback","console","log","errorKey"],"mappings":"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","file":"Voting.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Slider from 'react-rangeslider';\nimport tt from 'counterpart';\nimport CloseButton from 'app/components/elements/CloseButton';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport Icon from 'app/components/elements/Icon';\nimport {\n    DEBT_TOKEN_SHORT,\n    LIQUID_TOKEN_UPPERCASE,\n    INVEST_TOKEN_SHORT,\n} from 'app/client_config';\nimport FormattedAsset from 'app/components/elements/FormattedAsset';\nimport { pricePerSteem } from 'app/utils/StateFunctions';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport {\n    formatDecimal,\n    parsePayoutAmount,\n} from 'app/utils/ParsersAndFormatters';\nimport DropdownMenu from 'app/components/elements/DropdownMenu';\nimport TimeAgoWrapper from 'app/components/elements/TimeAgoWrapper';\nimport Dropdown from 'app/components/elements/Dropdown';\n\nconst ABOUT_FLAG = (\n    <div>\n        <p>\n            {tt(\n                'voting_jsx.flagging_post_can_remove_rewards_the_flag_should_be_used_for_the_following'\n            )}\n        </p>\n        <ul>\n            <li>{tt('voting_jsx.disagreement_on_rewards')}</li>\n            <li>{tt('voting_jsx.fraud_or_plagiarism')}</li>\n            <li>{tt('voting_jsx.hate_speech_or_internet_trolling')}</li>\n            <li>\n                {tt('voting_jsx.intentional_miss_categorized_content_or_spam')}\n            </li>\n        </ul>\n    </div>\n);\n\nconst MAX_VOTES_DISPLAY = 20;\nconst VOTE_WEIGHT_DROPDOWN_THRESHOLD = 1.0 * 1000.0 * 1000.0;\nconst SBD_PRINT_RATE_MAX = 10000;\nconst MAX_WEIGHT = 10000;\n\nclass Voting extends React.Component {\n    static propTypes = {\n        // HTML properties\n        post: PropTypes.string.isRequired,\n        flag: PropTypes.bool,\n        showList: PropTypes.bool,\n\n        // Redux connect properties\n        vote: PropTypes.func.isRequired,\n        author: PropTypes.string, // post was deleted\n        permlink: PropTypes.string,\n        username: PropTypes.string,\n        is_comment: PropTypes.bool,\n        active_votes: PropTypes.object,\n        loggedin: PropTypes.bool,\n        post_obj: PropTypes.object,\n        enable_slider: PropTypes.bool,\n        voting: PropTypes.bool,\n        price_per_steem: PropTypes.number,\n        sbd_print_rate: PropTypes.number,\n    };\n\n    static defaultProps = {\n        showList: true,\n        flag: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showWeight: false,\n            myVote: null,\n            sliderWeight: {\n                up: MAX_WEIGHT,\n                down: MAX_WEIGHT,\n            },\n        };\n\n        this.voteUp = e => {\n            e && e.preventDefault();\n            this.voteUpOrDown(true);\n        };\n        this.voteDown = e => {\n            e && e.preventDefault();\n            this.voteUpOrDown(false);\n        };\n        this.voteUpOrDown = up => {\n            if (this.props.voting) return;\n            this.setState({ votingUp: up, votingDown: !up });\n            if (this.state.showWeight) this.setState({ showWeight: false });\n            const { myVote } = this.state;\n            const { author, permlink, username, is_comment } = this.props;\n\n            let weight;\n            if (myVote > 0 || myVote < 0) {\n                // if there is a current vote, we're clearing it\n                weight = 0;\n            } else if (this.props.enable_slider) {\n                // if slider is enabled, read its value\n                weight = up\n                    ? this.state.sliderWeight.up\n                    : -this.state.sliderWeight.down;\n            } else {\n                // otherwise, use max power\n                weight = up ? MAX_WEIGHT : -MAX_WEIGHT;\n            }\n\n            const isFlag = this.props.flag ? true : null;\n            this.props.vote(weight, {\n                author,\n                permlink,\n                username,\n                myVote,\n                isFlag,\n            });\n        };\n\n        this.handleWeightChange = up => weight => {\n            let w;\n            if (up) {\n                w = {\n                    up: weight,\n                    down: this.state.sliderWeight.down,\n                };\n            } else {\n                w = {\n                    up: this.state.sliderWeight.up,\n                    down: weight,\n                };\n            }\n            this.setState({ sliderWeight: w });\n        };\n\n        this.storeSliderWeight = up => () => {\n            const { username, is_comment } = this.props;\n            const weight = up\n                ? this.state.sliderWeight.up\n                : this.state.sliderWeight.down;\n            localStorage.setItem(\n                'voteWeight' +\n                    (up ? '' : 'Down') +\n                    '-' +\n                    username +\n                    (is_comment ? '-comment' : ''),\n                weight\n            );\n        };\n        this.readSliderWeight = () => {\n            const { username, enable_slider, is_comment } = this.props;\n            if (enable_slider) {\n                const sliderWeightUp = Number(\n                    localStorage.getItem(\n                        'voteWeight' +\n                            '-' +\n                            username +\n                            (is_comment ? '-comment' : '')\n                    )\n                );\n                const sliderWeightDown = Number(\n                    localStorage.getItem(\n                        'voteWeight' +\n                            'Down' +\n                            '-' +\n                            username +\n                            (is_comment ? '-comment' : '')\n                    )\n                );\n                this.setState({\n                    sliderWeight: {\n                        up: sliderWeightUp ? sliderWeightUp : MAX_WEIGHT,\n                        down: sliderWeightDown ? sliderWeightDown : MAX_WEIGHT,\n                    },\n                });\n            }\n        };\n\n        this.toggleWeightUp = e => {\n            e.preventDefault();\n            this.toggleWeightUpOrDown(true);\n        };\n\n        this.toggleWeightDown = e => {\n            e && e.preventDefault();\n            this.toggleWeightUpOrDown(false);\n        };\n\n        this.toggleWeightUpOrDown = up => {\n            this.setState({ showWeight: !this.state.showWeight });\n        };\n        this.shouldComponentUpdate = shouldComponentUpdate(this, 'Voting');\n    }\n\n    componentWillMount() {\n        const { username, active_votes } = this.props;\n        this._checkMyVote(username, active_votes);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { username, active_votes } = nextProps;\n        this._checkMyVote(username, active_votes);\n    }\n\n    _checkMyVote(username, active_votes) {\n        if (username && active_votes) {\n            const vote = active_votes.find(el => el.get('voter') === username);\n            // weight warning, the API may send a string or a number (when zero)\n            if (vote)\n                this.setState({\n                    myVote: parseInt(vote.get('percent') || 0, 10),\n                });\n        }\n    }\n\n    render() {\n        const {\n            active_votes,\n            showList,\n            voting,\n            flag,\n            enable_slider,\n            is_comment,\n            post_obj,\n            price_per_steem,\n            sbd_print_rate,\n            username,\n        } = this.props;\n\n        const { votingUp, votingDown, showWeight, myVote } = this.state;\n        if (flag && !username) return null;\n\n        const votingUpActive = voting && votingUp;\n        const votingDownActive = voting && votingDown;\n\n        const slider = up => {\n            const b = up\n                ? this.state.sliderWeight.up\n                : this.state.sliderWeight.down;\n            const s = up ? '' : '-';\n            return (\n                <span>\n                    <div className=\"weight-display\">{s + b / 100}%</div>\n                    <Slider\n                        min={100}\n                        max={MAX_WEIGHT}\n                        step={100}\n                        value={b}\n                        onChange={this.handleWeightChange(up)}\n                        onChangeComplete={this.storeSliderWeight(up)}\n                        tooltip={false}\n                    />\n                </span>\n            );\n        };\n\n        if (flag) {\n            const down = (\n                <Icon\n                    name={\n                        votingDownActive\n                            ? 'empty'\n                            : myVote < 0 ? 'flag2' : 'flag1'\n                    }\n                    className=\"flag\"\n                />\n            );\n            const classDown =\n                'Voting__button Voting__button-down' +\n                (myVote < 0 ? ' Voting__button--downvoted' : '') +\n                (votingDownActive ? ' votingDown' : '');\n            const flagWeight = post_obj.getIn(['stats', 'flagWeight']);\n            // myVote === current vote\n\n            const invokeFlag = (\n                <span\n                    href=\"#\"\n                    onClick={this.toggleWeightDown}\n                    title=\"Flag\"\n                    id=\"downvote_button\"\n                    className=\"flag\"\n                >\n                    {down}\n                </span>\n            );\n\n            const revokeFlag = (\n                <a\n                    href=\"#\"\n                    onClick={this.voteDown}\n                    title=\"Flag\"\n                    className=\"flag\"\n                    id=\"revoke_downvote_button\"\n                >\n                    {down}\n                </a>\n            );\n\n            const dropdown = (\n                <Dropdown\n                    show={showWeight}\n                    onHide={() => this.setState({ showWeight: false })}\n                    onShow={() => {\n                        this.setState({ showWeight: true });\n                        this.readSliderWeight();\n                    }}\n                    title={invokeFlag}\n                    position={'left'}\n                >\n                    <div className=\"Voting__adjust_weight_down\">\n                        {(myVote == null || myVote === 0) &&\n                            enable_slider && (\n                                <div className=\"weight-container\">\n                                    {slider(false)}\n                                </div>\n                            )}\n                        <CloseButton\n                            onClick={() => this.setState({ showWeight: false })}\n                        />\n                        <div className=\"clear Voting__about-flag\">\n                            {ABOUT_FLAG}\n                            <span\n                                href=\"#\"\n                                onClick={this.voteDown}\n                                className=\"button outline\"\n                                title=\"Flag\"\n                            >\n                                Flag\n                            </span>\n                        </div>\n                    </div>\n                </Dropdown>\n            );\n\n            const flag =\n                myVote === null || myVote === 0 ? dropdown : revokeFlag;\n            return (\n                <span className=\"Voting\">\n                    <span className={classDown}>\n                        {flagWeight > 0 && (\n                            <span className=\"Voting__button-downvotes\">\n                                {'•'.repeat(flagWeight)}\n                            </span>\n                        )}\n                        {flag}\n                    </span>\n                </span>\n            );\n        }\n\n        const total_votes = post_obj.getIn(['stats', 'total_votes']);\n\n        const cashout_time = post_obj.get('cashout_time');\n        const max_payout = parsePayoutAmount(\n            post_obj.get('max_accepted_payout')\n        );\n        const pending_payout = parsePayoutAmount(\n            post_obj.get('pending_payout_value')\n        );\n        const percent_steem_dollars =\n            post_obj.get('percent_steem_dollars') / 20000;\n        const pending_payout_sbd = pending_payout * percent_steem_dollars;\n        const pending_payout_sp =\n            (pending_payout - pending_payout_sbd) / price_per_steem;\n        const pending_payout_printed_sbd =\n            pending_payout_sbd * (sbd_print_rate / SBD_PRINT_RATE_MAX);\n        const pending_payout_printed_steem =\n            (pending_payout_sbd - pending_payout_printed_sbd) / price_per_steem;\n\n        const promoted = parsePayoutAmount(post_obj.get('promoted'));\n        const total_author_payout = parsePayoutAmount(\n            post_obj.get('total_payout_value')\n        );\n        const total_curator_payout = parsePayoutAmount(\n            post_obj.get('curator_payout_value')\n        );\n\n        let payout =\n            pending_payout + total_author_payout + total_curator_payout;\n        if (payout < 0.0) payout = 0.0;\n        if (payout > max_payout) payout = max_payout;\n        const payout_limit_hit = payout >= max_payout;\n        // Show pending payout amount for declined payment posts\n        if (max_payout === 0) payout = pending_payout;\n        const up = (\n            <Icon\n                name={votingUpActive ? 'empty' : 'chevron-up-circle'}\n                className=\"upvote\"\n            />\n        );\n        const classUp =\n            'Voting__button Voting__button-up' +\n            (myVote > 0 ? ' Voting__button--upvoted' : '') +\n            (votingUpActive ? ' votingUp' : '');\n\n        // There is an \"active cashout\" if: (a) there is a pending payout, OR (b) there is a valid cashout_time AND it's NOT a comment with 0 votes.\n        const cashout_active =\n            pending_payout > 0 ||\n            (cashout_time.indexOf('1969') !== 0 &&\n                !(is_comment && total_votes == 0));\n        const payoutItems = [];\n\n        if (cashout_active) {\n            payoutItems.push({\n                value: tt('voting_jsx.pending_payout', {\n                    value: formatDecimal(pending_payout).join(''),\n                }),\n            });\n            if (max_payout > 0) {\n                payoutItems.push({\n                    value:\n                        '(' +\n                        formatDecimal(pending_payout_printed_sbd).join('') +\n                        ' ' +\n                        DEBT_TOKEN_SHORT +\n                        ', ' +\n                        (sbd_print_rate != SBD_PRINT_RATE_MAX\n                            ? formatDecimal(pending_payout_printed_steem).join(\n                                  ''\n                              ) +\n                              ' ' +\n                              LIQUID_TOKEN_UPPERCASE +\n                              ', '\n                            : '') +\n                        formatDecimal(pending_payout_sp).join('') +\n                        ' ' +\n                        INVEST_TOKEN_SHORT +\n                        ')',\n                });\n            }\n            payoutItems.push({ value: <TimeAgoWrapper date={cashout_time} /> });\n        }\n\n        if (max_payout == 0) {\n            payoutItems.push({ value: tt('voting_jsx.payout_declined') });\n        } else if (max_payout < 1000000) {\n            payoutItems.push({\n                value: tt('voting_jsx.max_accepted_payout', {\n                    value: formatDecimal(max_payout).join(''),\n                }),\n            });\n        }\n        if (promoted > 0) {\n            payoutItems.push({\n                value: tt('voting_jsx.promotion_cost', {\n                    value: formatDecimal(promoted).join(''),\n                }),\n            });\n        }\n        if (total_author_payout > 0) {\n            payoutItems.push({\n                value: tt('voting_jsx.past_payouts', {\n                    value: formatDecimal(\n                        total_author_payout + total_curator_payout\n                    ).join(''),\n                }),\n            });\n            payoutItems.push({\n                value: tt('voting_jsx.past_payouts_author', {\n                    value: formatDecimal(total_author_payout).join(''),\n                }),\n            });\n            payoutItems.push({\n                value: tt('voting_jsx.past_payouts_curators', {\n                    value: formatDecimal(total_curator_payout).join(''),\n                }),\n            });\n        }\n        const payoutEl = (\n            <DropdownMenu el=\"div\" items={payoutItems}>\n                <span style={payout_limit_hit ? { opacity: '0.5' } : {}}>\n                    <FormattedAsset\n                        amount={payout}\n                        asset=\"$\"\n                        classname={max_payout === 0 ? 'strikethrough' : ''}\n                    />\n                    {payoutItems.length > 0 && <Icon name=\"dropdown-arrow\" />}\n                </span>\n            </DropdownMenu>\n        );\n\n        let voters_list = null;\n        if (showList && total_votes > 0 && active_votes) {\n            const avotes = active_votes.toJS();\n            avotes.sort(\n                (a, b) =>\n                    Math.abs(parseInt(a.rshares)) >\n                    Math.abs(parseInt(b.rshares))\n                        ? -1\n                        : 1\n            );\n            let voters = [];\n            for (\n                let v = 0;\n                v < avotes.length && voters.length < MAX_VOTES_DISPLAY;\n                ++v\n            ) {\n                const { percent, voter } = avotes[v];\n                const sign = Math.sign(percent);\n                if (sign === 0) continue;\n                voters.push({\n                    value: (sign > 0 ? '+ ' : '- ') + voter,\n                    link: '/@' + voter,\n                });\n            }\n            if (total_votes > voters.length) {\n                voters.push({\n                    value: (\n                        <span>\n                            &hellip;{' '}\n                            {tt('voting_jsx.and_more', {\n                                count: total_votes - voters.length,\n                            })}\n                        </span>\n                    ),\n                });\n            }\n            voters_list = (\n                <DropdownMenu\n                    selected={tt('voting_jsx.votes_plural', {\n                        count: total_votes,\n                    })}\n                    className=\"Voting__voters_list\"\n                    items={voters}\n                    el=\"div\"\n                />\n            );\n        }\n\n        let voteUpClick = this.voteUp;\n        let dropdown = null;\n        let voteChevron = votingUpActive ? (\n            up\n        ) : (\n            <a\n                href=\"#\"\n                onClick={voteUpClick}\n                title={myVote > 0 ? tt('g.remove_vote') : tt('g.upvote')}\n                id=\"upvote_button\"\n            >\n                {up}\n            </a>\n        );\n        if (myVote <= 0 && enable_slider) {\n            voteUpClick = this.toggleWeightUp;\n            voteChevron = null;\n            // Vote weight adjust\n            dropdown = (\n                <Dropdown\n                    show={showWeight}\n                    onHide={() => this.setState({ showWeight: false })}\n                    onShow={() => {\n                        this.setState({ showWeight: true });\n                        this.readSliderWeight();\n                    }}\n                    title={up}\n                >\n                    <div className=\"Voting__adjust_weight\">\n                        {votingUpActive ? (\n                            <a\n                                href=\"#\"\n                                onClick={() => null}\n                                className=\"confirm_weight\"\n                                title={tt('g.upvote')}\n                            >\n                                <Icon size=\"2x\" name={'empty'} />\n                            </a>\n                        ) : (\n                            <a\n                                href=\"#\"\n                                onClick={this.voteUp}\n                                className=\"confirm_weight\"\n                                title={tt('g.upvote')}\n                            >\n                                <Icon size=\"2x\" name=\"chevron-up-circle\" />\n                            </a>\n                        )}\n                        {slider(true)}\n                        <CloseButton\n                            className=\"Voting__adjust_weight_close\"\n                            onClick={() => this.setState({ showWeight: false })}\n                        />\n                    </div>\n                </Dropdown>\n            );\n        }\n        return (\n            <span className=\"Voting\">\n                <span className=\"Voting__inner\">\n                    <span className={classUp}>\n                        {voteChevron}\n                        {dropdown}\n                    </span>\n                    {payoutEl}\n                </span>\n                {voters_list}\n            </span>\n        );\n    }\n}\n\nexport default connect(\n    // mapStateToProps\n    (state, ownProps) => {\n        const post = state.global.getIn(['content', ownProps.post]);\n        if (!post) return ownProps;\n        const author = post.get('author');\n        const permlink = post.get('permlink');\n        const active_votes = post.get('active_votes');\n        const is_comment = post.get('parent_author') !== '';\n\n        const current_account = state.user.get('current');\n        const username = current_account\n            ? current_account.get('username')\n            : null;\n        const vesting_shares = current_account\n            ? current_account.get('vesting_shares')\n            : 0.0;\n        const delegated_vesting_shares = current_account\n            ? current_account.get('delegated_vesting_shares')\n            : 0.0;\n        const received_vesting_shares = current_account\n            ? current_account.get('received_vesting_shares')\n            : 0.0;\n        const net_vesting_shares =\n            vesting_shares - delegated_vesting_shares + received_vesting_shares;\n        const voting = state.global.get(\n            `transaction_vote_active_${author}_${permlink}`\n        );\n        const price_per_steem = pricePerSteem(state);\n        const sbd_print_rate = state.global.getIn(['props', 'sbd_print_rate']);\n        const enable_slider =\n            net_vesting_shares > VOTE_WEIGHT_DROPDOWN_THRESHOLD;\n\n        return {\n            post: ownProps.post,\n            flag: ownProps.flag,\n            showList: ownProps.showList,\n            author,\n            permlink,\n            username,\n            active_votes,\n            enable_slider,\n            is_comment,\n            post_obj: post,\n            loggedin: username != null,\n            voting,\n            price_per_steem,\n            sbd_print_rate,\n        };\n    },\n\n    // mapDispatchToProps\n    dispatch => ({\n        vote: (weight, { author, permlink, username, myVote, isFlag }) => {\n            const confirm = () => {\n                if (myVote == null) return null;\n                if (weight === 0)\n                    return isFlag\n                        ? tt('voting_jsx.removing_your_vote')\n                        : tt(\n                              'voting_jsx.removing_your_vote_will_reset_curation_rewards_for_this_post'\n                          );\n                if (weight > 0)\n                    return isFlag\n                        ? tt('voting_jsx.changing_to_an_upvote')\n                        : tt(\n                              'voting_jsx.changing_to_an_upvote_will_reset_curation_rewards_for_this_post'\n                          );\n                if (weight < 0)\n                    return isFlag\n                        ? tt('voting_jsx.changing_to_a_downvote')\n                        : tt(\n                              'voting_jsx.changing_to_a_downvote_will_reset_curation_rewards_for_this_post'\n                          );\n                return null;\n            };\n            dispatch(\n                transactionActions.broadcastOperation({\n                    type: 'vote',\n                    operation: {\n                        voter: username,\n                        author,\n                        permlink,\n                        weight,\n                        __config: {\n                            title:\n                                weight < 0\n                                    ? tt('voting_jsx.confirm_flag')\n                                    : null,\n                        },\n                    },\n                    confirm,\n                    errorCallback: errorKey => {\n                        console.log('Transaction Error:' + errorKey);\n                    },\n                })\n            );\n        },\n    })\n)(Voting);\n"]}