{"version":3,"sources":["../../../../../src/app/components/elements/Author/index.jsx"],"names":["string","PropTypes","bool","number","closers","fnCloseAll","close","shift","Author","args","toggle","e","metaKey","ctrlKey","preventDefault","stopPropagation","show","state","setState","push","shouldComponentUpdate","bind","authorProfileLink","node","ReactDOM","findDOMNode","addEventListener","attachEvent","removeEventListener","detachEvent","props","author","follow","mute","authorRepLog10","username","account","toJS","name","about","link","target","React","Component","propTypes","isRequired","defaultProps","ownProps","user","getIn","global"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport Icon from 'app/components/elements/Icon';\nimport { Link } from 'react-router';\nimport { authorNameAndRep } from 'app/utils/ComponentFormatters';\nimport AuthorDropdown from '../AuthorDropdown';\nimport Reputation from 'app/components/elements/Reputation';\nimport normalizeProfile from 'app/utils/NormalizeProfile';\nimport Overlay from 'react-overlays/lib/Overlay';\nimport { findDOMNode } from 'react-dom';\n\nconst { string, bool, number } = PropTypes;\n\nconst closers = [];\n\nconst fnCloseAll = () => {\n    var close;\n    while ((close = closers.shift())) {\n        close();\n    }\n};\n\nclass Author extends React.Component {\n    static propTypes = {\n        author: string.isRequired,\n        follow: bool,\n        mute: bool,\n        authorRepLog10: number,\n    };\n    static defaultProps = {\n        follow: true,\n        mute: true,\n    };\n\n    constructor(...args) {\n        super(...args);\n        this.state = { show: false };\n        this.toggle = this.toggle.bind(this);\n        this.close = this.close.bind(this);\n    }\n\n    componentDidMount() {\n        if (!this.authorProfileLink) {\n            return;\n        }\n        const node = ReactDOM.findDOMNode(this.authorProfileLink);\n        if (node.addEventListener) {\n            node.addEventListener('click', this.toggle, false);\n        } else {\n            node.attachEvent('click', this.toggle, false);\n        }\n    }\n\n    componentWillUnmount() {\n        if (!this.authorProfileLink) {\n            return;\n        }\n        const node = ReactDOM.findDOMNode(this.authorProfileLink);\n        if (node.removeEventListener) {\n            node.removeEventListener('click', this.toggle);\n        } else {\n            node.detachEvent('click', this.toggle);\n        }\n    }\n\n    toggle = e => {\n        if (!(e.metaKey || e.ctrlKey)) {\n            e.preventDefault();\n            e.stopPropagation();\n            const show = !this.state.show;\n            fnCloseAll();\n            if (show) {\n                this.setState({ show });\n                closers.push(this.close);\n            }\n        }\n    };\n\n    close = () => {\n        this.setState({\n            show: false,\n        });\n    };\n\n    shouldComponentUpdate = shouldComponentUpdate(this, 'Author');\n    render() {\n        const { author, follow, mute, authorRepLog10 } = this.props; // html\n        const { username } = this.props; // redux\n        const { name, about } = this.props.account\n            ? normalizeProfile(this.props.account.toJS())\n            : {};\n\n        if (!(follow || mute) || username === author) {\n            return (\n                <span\n                    className=\"author\"\n                    itemProp=\"author\"\n                    itemScope\n                    itemType=\"http://schema.org/Person\"\n                >\n                    <strong>\n                        <Link to={'/@' + author}>{author}</Link>\n                    </strong>{' '}\n                    <Reputation value={authorRepLog10} />\n                </span>\n            );\n        }\n\n        return (\n            <span className=\"Author\">\n                <span\n                    itemProp=\"author\"\n                    itemScope\n                    itemType=\"http://schema.org/Person\"\n                >\n                    <strong>\n                        <Link\n                            className=\"ptc\"\n                            ref={link => {\n                                this.authorProfileLink = link;\n                            }}\n                            to={'/@' + author}\n                        >\n                            {author} <Reputation value={authorRepLog10} />\n                            <Icon name=\"dropdown-arrow\" />\n                        </Link>\n                    </strong>\n                </span>\n                <Overlay\n                    show={this.state.show}\n                    onHide={this.close}\n                    placement=\"bottom\"\n                    container={this}\n                    target={() => findDOMNode(this.target)}\n                    rootClose\n                >\n                    <AuthorDropdown\n                        author={author}\n                        follow={follow}\n                        mute={mute}\n                        authorRepLog10={authorRepLog10}\n                        name={name}\n                        about={about}\n                        username={username}\n                    />\n                </Overlay>\n            </span>\n        );\n    }\n}\n\nimport { connect } from 'react-redux';\n\nexport default connect((state, ownProps) => {\n    const { author, follow, mute, authorRepLog10 } = ownProps;\n    const username = state.user.getIn(['current', 'username']);\n    const account = state.global.getIn(['accounts', author]);\n    return {\n        author,\n        follow,\n        mute,\n        authorRepLog10,\n        username,\n        account,\n    };\n})(Author);\n"]}