{"version":3,"sources":["../../../../../src/app/components/elements/Follow/index.jsx"],"names":["transactionActions","userActions","string","PropTypes","bool","any","Follow","props","state","initEvents","followLoggedOut","bind","shouldComponentUpdate","nextProps","updateFollow","follower","following","upd","busy","setState","done","type","follow","unfollow","ignore","unignore","e","author_preview","document","querySelector","remove","showLogin","loading","followingWhat","showFollow","showMute","fat","children","cnBusy","cnActive","cnInactive","React","Component","propTypes","func","isRequired","defaultProps","emptyMap","emptySet","module","exports","ownProps","current_user","user","get","f","global","getIn","contains","action","what","json","dispatch","broadcastOperation","operation","id","required_posting_auths","successCallback","errorCallback","preventDefault"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingIndicator from 'app/components/elements/LoadingIndicator';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport * as userActions from 'app/redux/UserReducer';\nimport { Set, Map } from 'immutable';\nimport tt from 'counterpart';\n\nconst { string, bool, any } = PropTypes;\n\nexport default class Follow extends React.Component {\n    static propTypes = {\n        following: string,\n        follower: string, // OPTIONAL default to current user\n        showFollow: bool,\n        showMute: bool,\n        fat: bool,\n        children: any,\n        showLogin: PropTypes.func.isRequired,\n    };\n\n    static defaultProps = {\n        showFollow: true,\n        showMute: true,\n        fat: false,\n    };\n\n    constructor(props) {\n        super();\n        this.state = {};\n        this.initEvents(props);\n        this.followLoggedOut = this.followLoggedOut.bind(this);\n        this.shouldComponentUpdate = shouldComponentUpdate(this, 'Follow');\n    }\n\n    componentWillUpdate(nextProps) {\n        this.initEvents(nextProps);\n    }\n\n    initEvents(props) {\n        const { updateFollow, follower, following } = props;\n        const upd = type => {\n            if (this.state.busy) return;\n            this.setState({ busy: true });\n            const done = () => {\n                this.setState({ busy: false });\n            };\n            updateFollow(follower, following, type, done);\n        };\n        this.follow = () => {\n            upd('blog');\n        };\n        this.unfollow = () => {\n            upd();\n        };\n        this.ignore = () => {\n            upd('ignore');\n        };\n        this.unignore = () => {\n            upd();\n        };\n    }\n\n    followLoggedOut(e) {\n        // close author preview if present\n        const author_preview = document.querySelector('.dropdown-pane.is-open');\n        if (author_preview) author_preview.remove();\n        // resume authenticate modal\n        this.props.showLogin(e);\n    }\n\n    render() {\n        const { loading } = this.props;\n        if (loading)\n            return (\n                <span>\n                    <LoadingIndicator /> {tt('g.loading')}&hellip;\n                </span>\n            );\n        if (loading !== false) {\n            // must know what the user is already following before any update can happen\n            return <span />;\n        }\n\n        const { follower, following } = this.props; // html\n        // Show follow preview for new users\n        if (!follower || !following)\n            return (\n                <span>\n                    <label\n                        className=\"button slim hollow secondary\"\n                        onClick={this.followLoggedOut}\n                    >\n                        {tt('g.follow')}\n                    </label>\n                </span>\n            );\n        // Can't follow or ignore self\n        if (follower === following) return <span />;\n\n        const { followingWhat } = this.props; // redux\n        const { showFollow, showMute, fat, children } = this.props; // html\n        const { busy } = this.state;\n\n        const cnBusy = busy ? 'disabled' : '';\n        const cnActive = 'button' + (fat ? '' : ' slim');\n        const cnInactive = cnActive + ' hollow secondary ' + cnBusy;\n        return (\n            <span>\n                {showFollow &&\n                    followingWhat !== 'blog' && (\n                        <label className={cnInactive} onClick={this.follow}>\n                            {tt('g.follow')}\n                        </label>\n                    )}\n\n                {showFollow &&\n                    followingWhat === 'blog' && (\n                        <label className={cnInactive} onClick={this.unfollow}>\n                            {tt('g.unfollow')}\n                        </label>\n                    )}\n\n                {showMute &&\n                    followingWhat !== 'ignore' && (\n                        <label className={cnInactive} onClick={this.ignore}>\n                            {tt('g.mute')}\n                        </label>\n                    )}\n\n                {showMute &&\n                    followingWhat === 'ignore' && (\n                        <label className={cnInactive} onClick={this.unignore}>\n                            {tt('g.unmute')}\n                        </label>\n                    )}\n\n                {children && <span>&nbsp;&nbsp;{children}</span>}\n            </span>\n        );\n    }\n}\n\nconst emptyMap = Map();\nconst emptySet = Set();\n\nmodule.exports = connect(\n    (state, ownProps) => {\n        let { follower } = ownProps;\n        if (!follower) {\n            const current_user = state.user.get('current');\n            follower = current_user ? current_user.get('username') : null;\n        }\n\n        const { following } = ownProps;\n        const f = state.global.getIn(\n            ['follow', 'getFollowingAsync', follower],\n            emptyMap\n        );\n\n        // the line below was commented out by val - I think it's broken so sometimes the loading indicator is shown forever\n        // const loading = f.get('blog_loading', false) || f.get('ignore_loading', false)\n        const loading = false;\n\n        const followingWhat = f.get('blog_result', emptySet).contains(following)\n            ? 'blog'\n            : f.get('ignore_result', emptySet).contains(following)\n              ? 'ignore'\n              : null;\n\n        return {\n            follower,\n            following,\n            followingWhat,\n            loading,\n        };\n    },\n    dispatch => ({\n        updateFollow: (follower, following, action, done) => {\n            const what = action ? [action] : [];\n            const json = ['follow', { follower, following, what }];\n            dispatch(\n                transactionActions.broadcastOperation({\n                    type: 'custom_json',\n                    operation: {\n                        id: 'follow',\n                        required_posting_auths: [follower],\n                        json: JSON.stringify(json),\n                    },\n                    successCallback: done,\n                    // TODO: Why?\n                    errorCallback: done,\n                })\n            );\n        },\n        showLogin: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.showLogin());\n        },\n    })\n)(Follow);\n"]}