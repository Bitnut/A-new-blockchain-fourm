{"version":3,"sources":["../../../../../src/app/components/elements/NativeSelect/index.jsx"],"names":["NativeSelect","options","className","currentlySelected","onChange","handleChange","event","target","opts","map","val","name","label","value","propTypes","PropTypes","arrayOf","shape","string","link","isRequired","func","defaultProps"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,OAAyD;AAAA,QAAtDC,OAAsD,QAAtDA,OAAsD;AAAA,QAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,QAAlCC,iBAAkC,QAAlCA,iBAAkC;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AAC1E,QAAMC,eAAe,SAAfA,YAAe,QAAS;AAC1BD,iBAASE,MAAMC,MAAf;AACH,KAFD;;AAIA,QAAMC,OAAOP,QAAQQ,GAAR,CAAY,eAAO;AAC5B,eACI;AAAA;AAAA,cAAQ,KAAKC,IAAIC,IAAJ,GAAWD,IAAIE,KAA5B,EAAmC,OAAOF,IAAIG,KAA9C;AACKH,gBAAIE;AADT,SADJ;AAKH,KANY,CAAb;;AAQA,WACI;AAAA;AAAA;AACI,sBAAUP,YADd;AAEI,yCAA2BH,SAF/B;AAGI,mBAAOC;AAHX;AAKKK;AALL,KADJ;AASH,CAtBD;;AAwBAR,aAAac,SAAb,GAAyB;AACrBb,aAASc,oBAAUC,OAAV,CACLD,oBAAUE,KAAV,CAAgB;AACZN,cAAMI,oBAAUG,MADJ;AAEZN,eAAOG,oBAAUG,MAFL;AAGZC,cAAMJ,oBAAUG;AAHJ,KAAhB,CADK,EAMPE,UAPmB;AAQrBhB,cAAUW,oBAAUM,IAAV,CAAeD,UARJ;AASrBlB,eAAWa,oBAAUG,MATA;AAUrBf,uBAAmBY,oBAAUG,MAAV,CAAiBE;AAVf,CAAzB;AAYApB,aAAasB,YAAb,GAA4B;AACxBpB,eAAW;AADa,CAA5B;;kBAIeF,Y","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NativeSelect = ({ options, className, currentlySelected, onChange }) => {\n    const handleChange = event => {\n        onChange(event.target);\n    };\n\n    const opts = options.map(val => {\n        return (\n            <option key={val.name + val.label} value={val.value}>\n                {val.label}\n            </option>\n        );\n    });\n\n    return (\n        <select\n            onChange={handleChange}\n            className={`nativeSelect ${className}`}\n            value={currentlySelected}\n        >\n            {opts}\n        </select>\n    );\n};\n\nNativeSelect.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            label: PropTypes.string,\n            link: PropTypes.string,\n        })\n    ).isRequired,\n    onChange: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    currentlySelected: PropTypes.string.isRequired,\n};\nNativeSelect.defaultProps = {\n    className: '',\n};\n\nexport default NativeSelect;\n"]}