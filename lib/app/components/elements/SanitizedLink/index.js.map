{"version":3,"sources":["../../../../../src/app/components/elements/SanitizedLink/index.jsx"],"names":["SanitizedLink","onRevealPhishyLink","e","preventDefault","setState","revealPhishyLink","shouldComponentUpdate","state","props","text","url","isPhishy","classes","React","Component","propTypes","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;IAEqBA,a;;;AAMjB,6BAAc;AAAA;;AAAA;;AAAA,cAWdC,kBAXc,GAWO,aAAK;AACtBC,cAAEC,cAAF;AACA,kBAAKC,QAAL,CAAc,EAAEC,kBAAkB,IAApB,EAAd;AACH,SAda;;AAEV,cAAKC,qBAAL,GAA6B,4CAEzB,eAFyB,CAA7B;AAIA,cAAKC,KAAL,GAAa;AACTF,8BAAkB;AADT,SAAb;AANU;AASb;;;;iCAOQ;AAAA,yBACiB,KAAKG,KADtB;AAAA,gBACGC,IADH,UACGA,IADH;AAAA,gBACSC,GADT,UACSA,GADT;;;AAGL,gBAAMC,WAAW,2BAAYD,GAAZ,CAAjB;;AAEA,gBAAME,UAAU,0BAAW;AACvBZ,+BAAe,IADQ;AAEvB,6CAA6BW;AAFN,aAAX,CAAhB;;AAKA,gBAAI,CAACA,QAAL,EAAe;AACX,uBACI;AAAA;AAAA;AACI,mCAAWC,OADf;AAEI,8BAAMF,GAFV;AAGI,gCAAO,QAHX;AAII,6BAAI;AAJR;AAMKD;AANL,iBADJ;AAUH;;AAED,gBAAI,KAAKF,KAAL,CAAWF,gBAAf,EAAiC;AAC7B,uBACI;AAAA;AAAA;AACI,mCAAWO,OADf;AAEI,+BAAO,2BAAG,sCAAH;AAFX;AAIKH;AAJL,iBADJ;AAQH;;AAED,mBACI;AAAA;AAAA,kBAAM,WAAWG,OAAjB;AACI;AAAA;AAAA,sBAAM,WAAU,oBAAhB;AACK,+CAAG,sCAAH;AADL,iBADJ;AAII;AAAA;AAAA;AACI,mCAAU,wBADd;AAEI,8BAAK,QAFT;AAGI,iCAAS,KAAKX;AAHlB;AAKK,+CAAG,qCAAH;AALL;AAJJ,aADJ;AAcH;;;EAtEsCY,gBAAMC,S,UACtCC,S,GAAY;AACfL,SAAKM,oBAAUC,MADA;AAEfR,UAAMO,oBAAUC;AAFD,C;kBADFjB,a","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport tt from 'counterpart';\nimport classnames from 'classnames';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport { looksPhishy } from 'app/utils/Phishing';\n\nexport default class SanitizedLink extends React.Component {\n    static propTypes = {\n        url: PropTypes.string,\n        text: PropTypes.string,\n    };\n\n    constructor() {\n        super();\n        this.shouldComponentUpdate = shouldComponentUpdate(\n            this,\n            'SanitizedLink'\n        );\n        this.state = {\n            revealPhishyLink: false,\n        };\n    }\n\n    onRevealPhishyLink = e => {\n        e.preventDefault();\n        this.setState({ revealPhishyLink: true });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        const isPhishy = looksPhishy(url);\n\n        const classes = classnames({\n            SanitizedLink: true,\n            'SanitizedLink--phishyLink': isPhishy,\n        });\n\n        if (!isPhishy) {\n            return (\n                <a\n                    className={classes}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    {text}\n                </a>\n            );\n        }\n\n        if (this.state.revealPhishyLink) {\n            return (\n                <span\n                    className={classes}\n                    title={tt('sanitizedlink_jsx.phishylink_caution')}\n                >\n                    {text}\n                </span>\n            );\n        }\n\n        return (\n            <span className={classes}>\n                <span className=\"phishylink-caution\">\n                    {tt('sanitizedlink_jsx.phishylink_caution')}\n                </span>\n                <span\n                    className=\"phishylink-reveal-link\"\n                    role=\"button\"\n                    onClick={this.onRevealPhishyLink}\n                >\n                    {tt('sanitizedlink_jsx.phishylink_reveal')}\n                </span>\n            </span>\n        );\n    }\n}\n"]}