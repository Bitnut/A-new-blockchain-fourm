{"version":3,"sources":["../../../../src/app/components/elements/CheckLoginOwner.jsx"],"names":["CheckLoginOwner","hide","understood","state","last_valid_time","localStorage","getKey","setState","last_valid_date","props","previous_owner_authority","username","get","key","recover","browserHistory","push","onUnderstood","e","target","checked","console","log","nextProps","login_owner_pubkey","lookupPreviousOwnerAuthority","test","Date","THIRTY_DAYS","deadline","getTime","React","Component","ownProps","current","user","dispatch","type","payload"],"mappings":"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","file":"CheckLoginOwner.js","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport Reveal from 'app/components/elements/Reveal';\nimport CloseButton from 'app/components/elements/CloseButton';\nimport TimeAgoWrapper from 'app/components/elements/TimeAgoWrapper';\nimport { browserHistory } from 'react-router';\nimport tt from 'counterpart';\nimport { FormattedDate } from 'react-intl';\n\nclass CheckLoginOwner extends React.Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    componentWillReceiveProps(nextProps) {\n        const { login_owner_pubkey } = nextProps;\n        if (\n            login_owner_pubkey &&\n            this.props.login_owner_pubkey !== login_owner_pubkey\n        )\n            this.props.lookupPreviousOwnerAuthority();\n\n        const { previous_owner_authority } = nextProps;\n        if (\n            previous_owner_authority &&\n            this.props.previous_owner_authority !== previous_owner_authority\n        ) {\n            const last_valid_time = previous_owner_authority.get(\n                'last_valid_time'\n            );\n            // has this been shown already?\n            if (localStorage[this.getKey(nextProps)] !== last_valid_time) {\n                let last_valid_date;\n                if (!/Z$/.test(last_valid_time))\n                    last_valid_date = last_valid_time + 'Z';\n                last_valid_date = new Date(last_valid_date);\n\n                this.setState({ last_valid_time, last_valid_date });\n            }\n        }\n    }\n    hide = () => {\n        const { understood } = this.state;\n        if (understood) {\n            const { last_valid_time } = this.state;\n            localStorage[this.getKey()] = last_valid_time;\n        }\n        this.setState({ last_valid_time: null, last_valid_date: null });\n    };\n    getKey = (props = this.props) => {\n        const { previous_owner_authority } = props;\n        const username = previous_owner_authority.get('account');\n        const key = `${username}_previous_owner_authority_last_valid_time`;\n        return key;\n    };\n    recover = () => {\n        this.hide();\n        browserHistory.push('/recover_account_step_1');\n    };\n    onUnderstood = e => {\n        const understood = e.target.checked;\n        console.log('understood', understood);\n        this.setState({ understood });\n    };\n    render() {\n        const { last_valid_time, last_valid_date } = this.state;\n        if (!last_valid_time) return <span />;\n        const THIRTY_DAYS = 30 * 24 * 60 * 60 * 1000;\n        const deadline = last_valid_date.getTime() + THIRTY_DAYS;\n\n        // https://steemit.com/steem/@originate/steem-s-new-alert-after-key-updates-is-excellent-but-here-s-a-quick-update-that-would-make-it-even-better\n        // \"If you recently reset your password at(timestamp in strftime, example:  Thu, 21 Jul 2016 02:39:19 PST) this alert was most likely prompted by this action, otherwise your immediate attention is needed\"\n        return (\n            <span>\n                <Reveal show>\n                    <CloseButton onClick={this.hide} />\n                    <h3>{tt('g.account_updated')}</h3>\n                    <p>\n                        <span className=\"warning uppercase\">\n                            {tt('g.warning')}:\n                        </span>\n                        {tt(\n                            'checkloginowner_jsx.your_password_permissions_were_reduced'\n                        )}\n                        <TimeAgoWrapper date={last_valid_time} />.{' '}\n                        {tt(\n                            'checkloginowner_jsx.if_you_did_not_make_this_change'\n                        ) + ' '}\n                        <a onClick={this.recover}>\n                            {tt('g.recover_your_account')}\n                        </a>.\n                    </p>\n                    <p>\n                        {tt('checkloginowner_jsx.ownership_changed_on')}{' '}\n                        <FormattedDate value={last_valid_date} />\n                    </p>\n                    <p>\n                        {tt('checkloginowner_jsx.deadline_for_recovery_is')}{' '}\n                        <b>\n                            <TimeAgoWrapper date={deadline} />\n                        </b>.\n                    </p>\n                    <p>\n                        <input type=\"checkbox\" onChange={this.onUnderstood} />&nbsp;&nbsp;\n                        {tt('checkloginowner_jsx.i_understand_dont_show_again')}\n                    </p>\n                    <div className=\"button\" onClick={this.hide}>\n                        {tt('g.ok')}\n                    </div>\n                </Reveal>\n            </span>\n        );\n    }\n}\nimport { connect } from 'react-redux';\nexport default connect(\n    // mapStateToProps\n    (state, ownProps) => {\n        const current = state.user.get('current');\n        const login_owner_pubkey = current && current.get('login_owner_pubkey');\n        const previous_owner_authority =\n            current && current.get('previous_owner_authority');\n        return {\n            ...ownProps,\n            login_owner_pubkey,\n            previous_owner_authority,\n        };\n    },\n    // mapDispatchToProps\n    dispatch => ({\n        lookupPreviousOwnerAuthority: () => {\n            dispatch({\n                type: 'user/lookupPreviousOwnerAuthority',\n                payload: {},\n            });\n        },\n    })\n)(CheckLoginOwner);\n"]}