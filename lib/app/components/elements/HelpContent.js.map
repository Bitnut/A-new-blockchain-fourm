{"version":3,"sources":["../../../../src/app/components/elements/HelpContent.jsx"],"names":["process","env","BROWSER","getFolderContents","folder","recursive","fs","readdirSync","reduce","list","file","name","path","resolve","isDir","statSync","isDirectory","concat","requireContext","pattern","normalizedFolder","dirname","module","filename","folderContents","cache","filter","item","test","keys","returnContext","readFileSync","require","context","req","HelpData","split_into_sections","str","sections","split","length","splice","result","n","last","push","HelpContent","props","locale","md_file_path_regexp","RegExp","a","indexOf","forEach","res","match","key","help_locale","content","replace","text","substr","value","undefined","console","error","warn","section","setVars","title","React","Component","propTypes","PropTypes","string","isRequired"],"mappings":"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","file":"HelpContent.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MarkdownViewer from 'app/components/cards/MarkdownViewer';\nimport Icon from 'app/components/elements/Icon';\nimport { renderToString } from 'react-dom/server';\n\nif (!process.env.BROWSER) {\n    const cache = {};\n    // please note we don't need to define require.context for client side rendering because it's defined by webpack\n    const path = require('path');\n    const fs = require('fs');\n    function getFolderContents(folder, recursive) {\n        return fs.readdirSync(folder).reduce(function(list, file) {\n            var name = path.resolve(folder, file);\n            var isDir = fs.statSync(name).isDirectory();\n            return list.concat(\n                isDir && recursive ? getFolderContents(name, recursive) : [name]\n            );\n        }, []);\n    }\n    function requireContext(folder, recursive, pattern) {\n        var normalizedFolder = path.resolve(\n            path.dirname(module.filename),\n            folder\n        );\n        var folderContents = (cache[folder] = cache[folder]\n            ? cache[folder]\n            : getFolderContents(normalizedFolder, recursive).filter(function(\n                  item\n              ) {\n                  if (item === module.filename) return false;\n                  return pattern.test(item);\n              }));\n\n        var keys = function() {\n            return folderContents;\n        };\n        var returnContext = function returnContext(item) {\n            return (cache[item] = cache[item]\n                ? cache[item]\n                : fs.readFileSync(item, 'utf8'));\n        };\n        returnContext.keys = keys;\n        return returnContext;\n    }\n    require.context = requireContext;\n}\n\nlet req = require.context('../../help', true, /\\.md/);\nlet HelpData = {};\n\nfunction split_into_sections(str) {\n    let sections = str.split(/\\[#\\s?(.+?)\\s?\\]/);\n    if (sections.length === 1) return sections[0];\n    if (sections[0].length < 4) sections.splice(0, 1);\n    sections = sections.reduce((result, n) => {\n        let last = result.length > 0 ? result[result.length - 1] : null;\n        if (!last || last.length === 2) {\n            last = [n];\n            result.push(last);\n        } else last.push(n);\n        return result;\n    }, []);\n    return sections.reduce((result, n) => {\n        result[n[0]] = n[1];\n        return result;\n    }, {});\n}\n\nexport default class HelpContent extends React.Component {\n    static propTypes = {\n        path: PropTypes.string.isRequired,\n        section: PropTypes.string,\n        title: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n        this.locale = 'en';\n    }\n\n    componentWillMount() {\n        const md_file_path_regexp = new RegExp(`\\/${this.locale}\\/(.+)\\.md$`);\n        req\n            .keys()\n            .filter(a => {\n                return a.indexOf(`/${this.locale}/`) !== -1;\n            })\n            .forEach(filename => {\n                var res = filename.match(md_file_path_regexp);\n                let key = res[1];\n                let help_locale = HelpData[this.locale];\n                if (!help_locale) HelpData[this.locale] = help_locale = {};\n                let content = req(filename);\n                help_locale[key] = split_into_sections(content);\n            });\n    }\n\n    setVars(str) {\n        return str.replace(/(\\{.+?\\})/gi, (match, text) => {\n            let key = text.substr(1, text.length - 2);\n            let value = this.props[key] !== undefined ? this.props[key] : text;\n            return value;\n        });\n    }\n\n    render() {\n        if (!HelpData[this.locale]) {\n            console.error(`missing locale '${this.locale}' help files`);\n            return null;\n        }\n        let value = HelpData[this.locale][this.props.path];\n        if (!value && this.locale !== 'en') {\n            console.warn(\n                `missing path '${this.props.path}' for locale '${\n                    this.locale\n                }' help files, rolling back to 'en'`\n            );\n            value = HelpData['en'][this.props.path];\n        }\n        if (!value) {\n            console.error(\n                `help file not found '${this.props.path}' for locale '${\n                    this.locale\n                }'`\n            );\n            return null;\n        }\n        if (this.props.section) value = value[this.props.section];\n        if (!value) {\n            console.error(\n                `help section not found ${this.props.path}#${\n                    this.props.section\n                }`\n            );\n            return null;\n        }\n        value = this.setVars(value);\n        value = value.replace(\n            /<Icon name=\"([A-Za-z0-9\\_\\-]+)\" \\/>/gi,\n            (match, name) => {\n                return renderToString(<Icon name={name} />);\n            }\n        );\n        let title = null;\n        if (this.props.title) {\n            title = <h1>{this.props.title}</h1>;\n        }\n\n        return (\n            <div>\n                {title}\n                <MarkdownViewer\n                    className=\"HelpContent\"\n                    text={value}\n                    allowDangerousHTML\n                    breaks={false}\n                />\n            </div>\n        );\n    }\n}\n"]}