{"version":3,"sources":["../../../../src/app/components/elements/VotesAndComments.jsx"],"names":["VotesAndComments","props","shouldComponentUpdate","comments","commentsLink","totalVotes","comments_tooltip","count","React","Component","propTypes","post","PropTypes","string","isRequired","number","state","global","getIn","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,gB;;;AAWF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA,8JACTA,KADS;;AAEf,cAAKC,qBAAL,GAA6B,4CAEzB,kBAFyB,CAA7B;AAFe;AAMlB;;;;iCAEQ;AAAA,yBAC0C,KAAKD,KAD/C;AAAA,gBACGE,QADH,UACGA,QADH;AAAA,gBACaC,YADb,UACaA,YADb;AAAA,gBAC2BC,UAD3B,UAC2BA,UAD3B;;AAEL,gBAAIC,mBAAmB,2BACnB,wDADmB,CAAvB;AAGA,gBAAIH,WAAW,CAAf,EACIG,mBAAmB,2BACf,6CADe,EAEf,EAAEC,OAAOJ,QAAT,EAFe,CAAnB;;AAKJ,mBACI;AAAA;AAAA,kBAAM,WAAU,kBAAhB;AACI;AAAA;AAAA;AACI,mCAAU,yBADd;AAEI,+BAAO,2BAAG,iCAAH,EAAsC;AACzCI,mCAAOF;AADkC,yBAAtC;AAFX;AAMI,kDAAC,cAAD,IAAM,MAAK,IAAX,EAAgB,MAAK,mBAArB,GANJ;AAAA;AAOQA;AAPR,iBADJ;AAWI;AAAA;AAAA;AACI,mCACI,gCACCF,aAAa,CAAb,GAAiB,cAAjB,GAAkC,EADnC;AAFR;AAMI;AAAC,yCAAD;AAAA,0BAAM,IAAIC,YAAV,EAAwB,OAAOE,gBAA/B;AACI,sDAAC,cAAD,IAAM,MAAMH,WAAW,CAAX,GAAe,WAAf,GAA6B,SAAzC,GADJ;AAAA;AAEQA;AAFR;AANJ;AAXJ,aADJ;AA0BH;;;EAxD0BK,gBAAMC,S,UAC1BC,S,GAAY;AACf;AACAC,UAAMC,oBAAUC,MAAV,CAAiBC,UAFR;AAGfV,kBAAcQ,oBAAUC,MAAV,CAAiBC,UAHhB;;AAKf;AACAX,cAAUS,oBAAUG,MANL;AAOfV,gBAAYO,oBAAUG;AAPP,C;kBA0DR,yBAAQ,UAACC,KAAD,EAAQf,KAAR,EAAkB;AACrC,QAAMU,OAAOK,MAAMC,MAAN,CAAaC,KAAb,CAAmB,CAAC,SAAD,EAAYjB,MAAMU,IAAlB,CAAnB,CAAb;AACA,QAAI,CAACA,IAAL,EAAW,OAAOV,KAAP;AACX,sCACOA,KADP;AAEII,oBAAYM,KAAKO,KAAL,CAAW,CAAC,OAAD,EAAU,aAAV,CAAX,CAFhB;AAGIf,kBAAUQ,KAAKQ,GAAL,CAAS,UAAT;AAHd;AAKH,CARc,EAQZnB,gBARY,C","file":"VotesAndComments.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport Icon from 'app/components/elements/Icon';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport tt from 'counterpart';\n\nclass VotesAndComments extends React.Component {\n    static propTypes = {\n        // HTML properties\n        post: PropTypes.string.isRequired,\n        commentsLink: PropTypes.string.isRequired,\n\n        // Redux connect properties\n        comments: PropTypes.number,\n        totalVotes: PropTypes.number,\n    };\n\n    constructor(props) {\n        super(props);\n        this.shouldComponentUpdate = shouldComponentUpdate(\n            this,\n            'VotesAndComments'\n        );\n    }\n\n    render() {\n        const { comments, commentsLink, totalVotes } = this.props;\n        let comments_tooltip = tt(\n            'votesandcomments_jsx.no_responses_yet_click_to_respond'\n        );\n        if (comments > 0)\n            comments_tooltip = tt(\n                'votesandcomments_jsx.response_count_tooltip',\n                { count: comments }\n            );\n\n        return (\n            <span className=\"VotesAndComments\">\n                <span\n                    className=\"VotesAndComments__votes\"\n                    title={tt('votesandcomments_jsx.vote_count', {\n                        count: totalVotes,\n                    })}\n                >\n                    <Icon size=\"1x\" name=\"chevron-up-circle\" />&nbsp;{\n                        totalVotes\n                    }\n                </span>\n                <span\n                    className={\n                        'VotesAndComments__comments' +\n                        (comments === 0 ? ' no-comments' : '')\n                    }\n                >\n                    <Link to={commentsLink} title={comments_tooltip}>\n                        <Icon name={comments > 1 ? 'chatboxes' : 'chatbox'} />&nbsp;{\n                            comments\n                        }\n                    </Link>\n                </span>\n            </span>\n        );\n    }\n}\n\nexport default connect((state, props) => {\n    const post = state.global.getIn(['content', props.post]);\n    if (!post) return props;\n    return {\n        ...props,\n        totalVotes: post.getIn(['stats', 'total_votes']),\n        comments: post.get('children'),\n    };\n})(VotesAndComments);\n"]}