{"version":3,"sources":["../../../../src/app/components/pages/TagsIndex.jsx"],"names":["TagsIndex","props","onChangeSort","e","order","preventDefault","setState","compareTags","a","b","type","get","localeCompare","parseInt","state","bind","nextProps","nextState","res","tagsAll","tags","rows","filter","test","tag","sort","map","name","link","toString","toArray","cols","col","React","Component","propTypes","PropTypes","object","isRequired","module","exports","path","component","global"],"mappings":"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","file":"TagsIndex.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { browserHistory } from 'react-router';\nimport { numberWithCommas } from 'app/utils/StateFunctions';\nimport tt from 'counterpart';\n\nexport default class TagsIndex extends React.Component {\n    static propTypes = {\n        tagsAll: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { order: props.order || 'name' };\n        this.onChangeSort = this.onChangeSort.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const res =\n            this.props.tagsAll !== nextProps.tagsAll ||\n            this.state !== nextState;\n        return res;\n    }\n\n    onChangeSort = (e, order) => {\n        e.preventDefault();\n        this.setState({ order });\n    };\n\n    compareTags = (a, b, type) => {\n        switch (type) {\n            case 'name':\n                return a.get('name').localeCompare(b.get('name'));\n            case 'posts':\n                return parseInt(a.get('top_posts')) <=\n                    parseInt(b.get('top_posts'))\n                    ? 1\n                    : -1;\n            case 'comments':\n                return parseInt(a.get('comments')) <=\n                    parseInt(b.get('comments'))\n                    ? 1\n                    : -1;\n            case 'payouts':\n                return parseInt(a.get('total_payouts')) <=\n                    parseInt(b.get('total_payouts'))\n                    ? 1\n                    : -1;\n        }\n    };\n\n    render() {\n        const { tagsAll } = this.props;\n        //console.log('-- TagsIndex.render -->', tagsAll.toJS());\n        const { order } = this.state;\n        let tags = tagsAll;\n\n        const rows = tags\n            .filter(\n                // there is a blank tag present, as well as some starting with #. filter them out.\n                tag => /^[a-z]/.test(tag.get('name'))\n            )\n            .sort((a, b) => {\n                return this.compareTags(a, b, order);\n            })\n            .map(tag => {\n                const name = tag.get('name');\n                const link = `/trending/${name}`;\n                return (\n                    <tr key={name}>\n                        <td>\n                            <Link to={link} activeClassName=\"active\">\n                                {name}\n                            </Link>\n                        </td>\n                        <td>\n                            {numberWithCommas(tag.get('top_posts').toString())}\n                        </td>\n                        <td>\n                            {numberWithCommas(tag.get('comments').toString())}\n                        </td>\n                        <td>{numberWithCommas(tag.get('total_payouts'))}</td>\n                    </tr>\n                );\n            })\n            .toArray();\n\n        const cols = [\n            ['name', tt('g.tag')],\n            ['posts', tt('g.posts')],\n            ['comments', tt('g.comments')],\n            ['payouts', tt('g.payouts')],\n        ].map(col => {\n            return (\n                <th key={col[0]}>\n                    {order === col[0] ? (\n                        <strong>{col[1]}</strong>\n                    ) : (\n                        <Link\n                            to=\"#\"\n                            onClick={e => this.onChangeSort(e, col[0])}\n                        >\n                            {col[1]}\n                        </Link>\n                    )}\n                </th>\n            );\n        });\n\n        return (\n            <div className=\"TagsIndex row\">\n                <div className=\"column\">\n                    <br />\n                    <h4>{tt('g.trending_topics')}</h4>\n                    <table>\n                        <thead>\n                            <tr>{cols}</tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nmodule.exports = {\n    path: 'tags(/:order)',\n    component: connect(state => ({\n        tagsAll: state.global.get('tags'),\n    }))(TagsIndex),\n};\n"]}