{"version":3,"sources":["../../../../src/app/components/pages/XSS.jsx"],"names":["XSS","process","env","NODE_ENV","tests","xss","map","test","i","React","Component","module","exports","path","component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEMA,G;;;;;;;;;;iCACO;AACL,gBAAI,CAACC,QAAQC,GAAR,CAAYC,QAAb,KAA0B,aAA9B,EAA6C,OAAO,0CAAP;AAC7C,gBAAIC,QAAQC,IAAIC,GAAJ,CAAQ,UAACC,IAAD,EAAOC,CAAP;AAAA,uBAChB;AAAA;AAAA,sBAAK,KAAKA,CAAV;AACI;AAAA;AAAA;AAAA;AAAUA;AAAV,qBADJ;AAEI,kDAAC,wBAAD,IAAgB,QAAQ,YAAYA,CAApC,EAAuC,MAAMD,IAA7C,GAFJ;AAGI;AAHJ,iBADgB;AAAA,aAAR,CAAZ;AAOA,mBACI;AAAA;AAAA,kBAAK,WAAU,KAAf;AACI;AAAA;AAAA,sBAAK,WAAU,kBAAf;AAAmCH;AAAnC;AADJ,aADJ;AAKA;AACH;;;EAhBaK,gBAAMC,S;;AAmBxBC,OAAOC,OAAP,GAAiB;AACbC,UAAM,WADO;AAEbC,eAAWd;AAFE,CAAjB;;AAKA;AACA;AACA,IAAMK,MAAM,41DA8CR,sDA9CQ,EAgDR,+JAhDQ,EAkDR,mGAlDQ,EAmDR,kIAnDQ,CAAZ","file":"XSS.js","sourcesContent":["import React from 'react';\nimport MarkdownViewer from 'app/components/cards/MarkdownViewer';\n\nclass XSS extends React.Component {\n    render() {\n        if (!process.env.NODE_ENV === 'development') return <div />;\n        let tests = xss.map((test, i) => (\n            <div key={i}>\n                <h2>Test {i}</h2>\n                <MarkdownViewer formId={'xsstest' + i} text={test} />\n                <hr />\n            </div>\n        ));\n        return (\n            <div className=\"row\">\n                <div className=\"column column-12\">{tests}</div>\n            </div>\n        );\n        // return <div dangerouslySetInnerHTML={{__html: xss}} />\n    }\n}\n\nmodule.exports = {\n    path: '/xss/test',\n    component: XSS,\n};\n\n// https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Image_XSS_using_the_JavaScript_directive\n// July 14 2016\nconst xss = [\n    `<SCRIPT>alert(String.fromCharCode(88,83,83))</SCRIPT>`,\n\n    `<DIV STYLE=\"background-image:url(javascript:alert('XSS'))\">`,\n\n    `<div style=\"background-image:url(javascript:alert('XSS'))\">`,\n\n    `<FRAMESET><FRAME SRC=\"javascript:alert('XSS') ;\"></FRAMESET>`,\n\n    `<IFRAME SRC=\"javascript:alert('XSS') ;\"></IFRAME>`,\n\n    `<INPUT TYPE=\"IMAGE\" SRC=\"javascript:alert('XSS') ;\">`,\n\n    `<IMG DYNSRC=\"javascript:alert('XSS');\">`,\n\n    `<LINK REL=\"stylesheet\" HREF=\"javascript:alert('XSS');\">`,\n\n    `<STYLE>li {list-style-image: url(\"javascript:alert('XSS') \");}</STYLE><UL><LI>XSS`,\n\n    `<META HTTP-EQUIV=\"refresh\" CONTENT=\"0;url=data:text/html;base64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K\">`,\n\n    `<OBJECT classid=clsid:ae24fdae-03c6-11d1-8b76-0080c744f389><param name=url value=javascript:alert('XSS')></OBJECT>`,\n\n    `<EMBED SRC=\"http://ha.ckers.org/xss.swf\" AllowScriptAccess=\"always\"></EMBED>`,\n\n    `<table background=\"javascript:alert('XSS')\"><tr><td style=\"background-image:url(javascript:alert('XSS'))\">*</td></tr></table>`,\n\n    `<a href=\"javascript:alert('XSS')\">XSS</a>`,\n\n    `';alert(String.fromCharCode(88,83,83))//';alert(String.fromCharCode(88,83,83))//\";\nalert(String.fromCharCode(88,83,83))//\";alert(String.fromCharCode(88,83,83))//--\n></SCRIPT>\">'><SCRIPT>alert(String.fromCharCode(88,83,83))</SCRIPT>`,\n\n    `'';!--\"<XSS>=&{()}`,\n\n    `<SCRIPT SRC=https://steemd.com/xss.js></SCRIPT>`,\n\n    `onnerr w/ clearly invalid img: <img src=\"awesome.jpg\" onerror=\"alert('xss')\" /><br />\ngood image: <img src=\"https://steem.io/images/press/press-theblkchn.png\" onerror=\"alert('xss')\" /><br />\ngood url, bad img: <img src=\"https://steem.io/testing-does-not-exist.png\" onerror=\"alert('xss')\" /> \n(results will vary if using image proxy -- it rewrites 'src')`,\n\n    `**test**!%3Cimg%20src=%22awsome.jpg%22%20onerror=%22alert(1)%22/%3E`,\n\n    `<html>test!%3Cimg%20src=%22awsome.jpg%22%20onerror=%22alert(1)%22/%3E</html>`,\n\n    '<IMG SRC=`javascript:alert(\"RSnake says, \\'XSS\\'\")`>',\n\n    '<html><a href=\"&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;\">Hax</a></html>',\n\n    '<a href=\"/not-a-domain.com/local-page\" rel=\"fffffffff\">Link to a local page with bad rel attr</a>',\n    '<a href=\"//relative-protocol-domain.com/some-page\" target=\"fffffffff\">Link to domain (relative protocol) and bad target attr</a>',\n];\n"]}