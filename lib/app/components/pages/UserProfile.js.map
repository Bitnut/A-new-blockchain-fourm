{"version":3,"sources":["../../../../src/app/components/pages/UserProfile.jsx"],"names":["globalActions","transactionActions","userActions","UserProfile","toggleShowResteem","e","preventDefault","newShowResteem","state","showResteem","setState","onPrint","window","print","loadMore","bind","np","ns","props","follow","follow_count","account","accountname","followersLoading","npFollowersLoading","followingLoading","npFollowingLoading","getIn","current_user","wifShown","global_status","loading","location","pathname","blogmode","clearTransferDefaults","clearPowerdownDefaults","last_post","category","order","console","log","postFilter","value","author","split","permlink","requestData","username","get","section","routeParams","status","fetching","accountImm","toJS","followers","following","totalCounts","followerCount","followingCount","follower_count","following_count","rep","reputation","isMyAccount","name","tab_content","rewardsClass","walletClass","showTransfer","showPowerdown","withdrawVesting","has","comments","posts","size","blog","emptyText","recent_replies","userIllegalContent","includes","page_title","layoutClass","blog_header","printLink","rewardsMenu","link","label","top_menu","flexWrap","browserHistory","push","target","about","website","cover_image","website_label","replace","cover_image_style","backgroundImage","position","count","post_count","created","React","Component","module","exports","path","component","ownProps","global","user","toLowerCase","discussions","app","login","dispatch","showLogin","setTransferDefaults","transferDefaults","powerdownDefaults","setPowerdownDefaults","vesting_shares","errorCallback","successCallback","successCallbackWrapper","getState","url","broadcastOperation","type","operation","fetchDataSagaActions","args"],"mappings":"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","file":"UserProfile.js","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { browserHistory } from 'react-router';\nimport classnames from 'classnames';\nimport * as globalActions from 'app/redux/GlobalReducer';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport * as userActions from 'app/redux/UserReducer';\nimport { actions as fetchDataSagaActions } from 'app/redux/FetchDataSaga';\nimport Icon from 'app/components/elements/Icon';\nimport UserKeys from 'app/components/elements/UserKeys';\nimport PasswordReset from 'app/components/elements/PasswordReset';\nimport UserWallet from 'app/components/modules/UserWallet';\nimport Settings from 'app/components/modules/Settings';\nimport CurationRewards from 'app/components/modules/CurationRewards';\nimport AuthorRewards from 'app/components/modules/AuthorRewards';\nimport UserList from 'app/components/elements/UserList';\nimport Follow from 'app/components/elements/Follow';\nimport LoadingIndicator from 'app/components/elements/LoadingIndicator';\nimport PostsList from 'app/components/cards/PostsList';\nimport { isFetchingOrRecentlyUpdated } from 'app/utils/StateFunctions';\nimport { repLog10 } from 'app/utils/ParsersAndFormatters.js';\nimport Tooltip from 'app/components/elements/Tooltip';\nimport DateJoinWrapper from 'app/components/elements/DateJoinWrapper';\nimport tt from 'counterpart';\nimport { List } from 'immutable';\nimport WalletSubMenu from 'app/components/elements/WalletSubMenu';\nimport Userpic from 'app/components/elements/Userpic';\nimport Callout from 'app/components/elements/Callout';\nimport normalizeProfile from 'app/utils/NormalizeProfile';\nimport userIllegalContent from 'app/utils/userIllegalContent';\nimport proxifyImageUrl from 'app/utils/ProxifyUrl';\nimport ArticleLayoutSelector from 'app/components/modules/ArticleLayoutSelector';\nimport SanitizedLink from 'app/components/elements/SanitizedLink';\nimport DropdownMenu from 'app/components/elements/DropdownMenu';\n\nexport default class UserProfile extends React.Component {\n    constructor() {\n        super();\n        this.state = { showResteem: true };\n        this.onPrint = () => {\n            window.print();\n        };\n        this.loadMore = this.loadMore.bind(this);\n    }\n\n    shouldComponentUpdate(np, ns) {\n        const { follow, follow_count, account, accountname } = this.props;\n\n        let followersLoading = false,\n            npFollowersLoading = false;\n        let followingLoading = false,\n            npFollowingLoading = false;\n\n        if (follow) {\n            followersLoading = follow.getIn(\n                ['getFollowersAsync', accountname, 'blog_loading'],\n                false\n            );\n            followingLoading = follow.getIn(\n                ['getFollowingAsync', accountname, 'blog_loading'],\n                false\n            );\n        }\n        if (np.follow) {\n            npFollowersLoading = np.follow.getIn(\n                ['getFollowersAsync', accountname, 'blog_loading'],\n                false\n            );\n            npFollowingLoading = np.follow.getIn(\n                ['getFollowingAsync', accountname, 'blog_loading'],\n                false\n            );\n        }\n\n        return (\n            np.current_user !== this.props.current_user ||\n            np.account !== this.props.account ||\n            np.wifShown !== this.props.wifShown ||\n            np.global_status !== this.props.global_status ||\n            (npFollowersLoading !== followersLoading && !npFollowersLoading) ||\n            (npFollowingLoading !== followingLoading && !npFollowingLoading) ||\n            np.loading !== this.props.loading ||\n            np.location.pathname !== this.props.location.pathname ||\n            np.follow_count !== this.props.follow_count ||\n            np.blogmode !== this.props.blogmode ||\n            ns.showResteem !== this.state.showResteem\n        );\n    }\n\n    componentWillUnmount() {\n        this.props.clearTransferDefaults();\n        this.props.clearPowerdownDefaults();\n    }\n\n    loadMore(last_post, category, showResteem) {\n        const { accountname } = this.props;\n\n        if (!last_post) return;\n\n        let order;\n        switch (category) {\n            case 'feed':\n                order = 'by_feed';\n                break;\n            case 'blog':\n                order = 'by_author';\n                break;\n            case 'comments':\n                order = 'by_comments';\n                break;\n            case 'recent_replies':\n                order = 'by_replies';\n                break;\n            default:\n                console.log('unhandled category:', category);\n        }\n\n        if (\n            isFetchingOrRecentlyUpdated(\n                this.props.global_status,\n                order,\n                category\n            )\n        ) {\n            return;\n        }\n\n        const postFilter = showResteem\n            ? null\n            : value => value.author === accountname;\n        const [author, permlink] = last_post.split('/');\n        this.props.requestData({\n            author,\n            permlink,\n            order,\n            category,\n            accountname,\n            postFilter,\n        });\n    }\n\n    toggleShowResteem = e => {\n        e.preventDefault();\n        const newShowResteem = !this.state.showResteem;\n        this.setState({ showResteem: newShowResteem });\n    };\n\n    render() {\n        const {\n            state: { showResteem },\n            props: {\n                current_user,\n                wifShown,\n                global_status,\n                follow,\n                accountname,\n            },\n            onPrint,\n        } = this;\n        const username = current_user ? current_user.get('username') : null;\n\n        let { section } = this.props.routeParams;\n        if (!section) section = 'blog';\n\n        // Loading status\n        const status = global_status\n            ? global_status.getIn([section, 'by_author'])\n            : null;\n        const fetching = (status && status.fetching) || this.props.loading;\n\n        let account;\n        let accountImm = this.props.account;\n        if (accountImm) {\n            account = accountImm.toJS();\n        } else if (fetching) {\n            return (\n                <center>\n                    <LoadingIndicator type=\"circle\" />\n                </center>\n            );\n        } else {\n            return (\n                <div>\n                    <center>{tt('user_profile.unknown_account')}</center>\n                </div>\n            );\n        }\n        const followers =\n            follow && follow.getIn(['getFollowersAsync', accountname]);\n        const following =\n            follow && follow.getIn(['getFollowingAsync', accountname]);\n\n        // instantiate following items\n        let totalCounts = this.props.follow_count;\n        let followerCount = 0;\n        let followingCount = 0;\n\n        if (totalCounts && accountname) {\n            totalCounts = totalCounts.get(accountname);\n            if (totalCounts) {\n                totalCounts = totalCounts.toJS();\n                followerCount = totalCounts.follower_count;\n                followingCount = totalCounts.following_count;\n            }\n        }\n\n        const rep = repLog10(account.reputation);\n\n        const isMyAccount = username === account.name;\n        let tab_content = null;\n\n        let rewardsClass = '',\n            walletClass = '';\n        if (section === 'transfers') {\n            walletClass = 'active';\n            tab_content = (\n                <div>\n                    <UserWallet\n                        account={accountImm}\n                        showTransfer={this.props.showTransfer}\n                        showPowerdown={this.props.showPowerdown}\n                        current_user={current_user}\n                        withdrawVesting={this.props.withdrawVesting}\n                    />\n                </div>\n            );\n        } else if (section === 'curation-rewards') {\n            rewardsClass = 'active';\n            tab_content = <CurationRewards account={account} />;\n        } else if (section === 'author-rewards') {\n            rewardsClass = 'active';\n            tab_content = <AuthorRewards account={account} />;\n        } else if (section === 'followers') {\n            if (followers && followers.has('blog_result')) {\n                tab_content = (\n                    <div>\n                        <UserList\n                            title={tt('user_profile.followers')}\n                            account={account}\n                            users={followers.get('blog_result')}\n                        />\n                    </div>\n                );\n            }\n        } else if (section === 'followed') {\n            if (following && following.has('blog_result')) {\n                tab_content = (\n                    <UserList\n                        title=\"Followed\"\n                        account={account}\n                        users={following.get('blog_result')}\n                    />\n                );\n            }\n        } else if (section === 'settings') {\n            tab_content = <Settings routeParams={this.props.routeParams} />;\n        } else if (section === 'comments') {\n            if (account.comments) {\n                let posts = accountImm.get('comments');\n                if (!fetching && (posts && !posts.size)) {\n                    tab_content = (\n                        <Callout>\n                            {tt('user_profile.user_hasnt_made_any_posts_yet', {\n                                name: accountname,\n                            })}\n                        </Callout>\n                    );\n                } else {\n                    tab_content = (\n                        <PostsList\n                            posts={posts}\n                            loading={fetching}\n                            category=\"comments\"\n                            loadMore={this.loadMore}\n                            showPinned={false}\n                            showSpam\n                        />\n                    );\n                }\n            } else {\n                tab_content = (\n                    <center>\n                        <LoadingIndicator type=\"circle\" />\n                    </center>\n                );\n            }\n        } else if (!section || section === 'blog') {\n            if (account.blog) {\n                let posts = accountImm.get('blog');\n                const emptyText = isMyAccount ? (\n                    <div>\n                        {tt(\n                            'user_profile.looks_like_you_havent_posted_anything_yet'\n                        )}\n                        <br />\n                        <br />\n                        <Link to=\"/submit.html\">\n                            {tt('user_profile.create_a_post')}\n                        </Link>\n                        <br />\n                        <Link to=\"/trending\">\n                            {tt('user_profile.explore_trending_articles')}\n                        </Link>\n                        <br />\n                        <Link to=\"/welcome\">\n                            {tt('user_profile.read_the_quick_start_guide')}\n                        </Link>\n                        <br />\n                        <Link to=\"/faq.html\">\n                            {tt('user_profile.browse_the_faq')}\n                        </Link>\n                        <br />\n                    </div>\n                ) : (\n                    tt('user_profile.user_hasnt_started_bloggin_yet', {\n                        name: accountname,\n                    })\n                );\n\n                if (!fetching && (posts && !posts.size)) {\n                    tab_content = <Callout>{emptyText}</Callout>;\n                } else {\n                    tab_content = (\n                        <div>\n                            <a href=\"#\" onClick={this.toggleShowResteem}>\n                                {showResteem\n                                    ? tt('user_profile.hide_resteems')\n                                    : tt('user_profile.show_all')}\n                            </a>\n                            <PostsList\n                                account={account.name}\n                                posts={posts}\n                                loading={fetching}\n                                category=\"blog\"\n                                loadMore={this.loadMore}\n                                showPinned={false}\n                                showResteem={showResteem}\n                                showSpam\n                            />\n                        </div>\n                    );\n                }\n            } else {\n                tab_content = (\n                    <center>\n                        <LoadingIndicator type=\"circle\" />\n                    </center>\n                );\n            }\n        } else if (section === 'recent-replies') {\n            if (account.recent_replies) {\n                let posts = accountImm.get('recent_replies');\n                if (!fetching && (posts && !posts.size)) {\n                    tab_content = (\n                        <Callout>\n                            {tt('user_profile.user_hasnt_had_any_replies_yet', {\n                                name: accountname,\n                            }) + '.'}\n                        </Callout>\n                    );\n                } else {\n                    tab_content = (\n                        <div>\n                            <PostsList\n                                posts={posts}\n                                loading={fetching}\n                                category=\"recent_replies\"\n                                loadMore={this.loadMore}\n                                showPinned={false}\n                                showSpam={false}\n                            />\n                        </div>\n                    );\n                }\n            } else {\n                tab_content = (\n                    <center>\n                        <LoadingIndicator type=\"circle\" />\n                    </center>\n                );\n            }\n        } else if (section === 'permissions' && isMyAccount) {\n            walletClass = 'active';\n            tab_content = (\n                <div>\n                    <div className=\"row\">\n                        <div className=\"column\">\n                            <WalletSubMenu account_name={account.name} />\n                        </div>\n                    </div>\n                    <br />\n                    <UserKeys account={accountImm} />\n                </div>\n            );\n        } else if (section === 'password') {\n            walletClass = 'active';\n            tab_content = (\n                <div>\n                    <div className=\"row\">\n                        <div className=\"column\">\n                            <WalletSubMenu account_name={account.name} />\n                        </div>\n                    </div>\n                    <br />\n                    <PasswordReset account={accountImm} />\n                </div>\n            );\n        } else {\n            //    console.log( \"no matches\" );\n        }\n\n        // detect illegal users\n        if (userIllegalContent.includes(accountname)) {\n            tab_content = <div>Unavailable For Legal Reasons.</div>;\n        }\n\n        var page_title = '';\n        // Page title\n\n        if (isMyAccount) {\n            if (section === 'blog') {\n                page_title = tt('g.my_blog');\n            } else if (section === 'comments') {\n                page_title = tt('g.my_comments');\n            } else if (section === 'recent-replies') {\n                page_title = tt('g.my_replies');\n            } else if (section === 'settings') {\n                page_title = tt('g.settings');\n            } else if (section === 'curation-rewards') {\n                page_title = tt('g.curation_rewards');\n            } else if (section === 'author-rewards') {\n                page_title = tt('g.author_rewards');\n            }\n        } else {\n            if (section === 'blog') {\n                page_title = tt('g.blog');\n            } else if (section === 'comments') {\n                page_title = tt('g.comments');\n            } else if (section === 'recent-replies') {\n                page_title = tt('g.replies');\n            } else if (section === 'settings') {\n                page_title = tt('g.settings');\n            } else if (section === 'curation-rewards') {\n                page_title = tt('g.curation_rewards');\n            } else if (section === 'author-rewards') {\n                page_title = tt('g.author_rewards');\n            }\n        }\n\n        const layoutClass = this.props.blogmode\n            ? 'layout-block'\n            : 'layout-list';\n\n        const blog_header = (\n            <div>\n                <div className=\"articles__header\">\n                    <div className=\"articles__header-col\">\n                        <h1 className=\"articles__h1\">{page_title}</h1>\n                    </div>\n                    <div className=\"articles__header-col articles__header-col--right\">\n                        <ArticleLayoutSelector />\n                    </div>\n                </div>\n                <hr className=\"articles__hr\" />\n            </div>\n        );\n\n        if (\n            !(\n                section === 'transfers' ||\n                section === 'permissions' ||\n                section === 'password'\n            )\n        ) {\n            tab_content = (\n                <div className=\"row\">\n                    <div\n                        className={classnames(\n                            'UserProfile__tab_content',\n                            'column',\n                            layoutClass,\n                            section\n                        )}\n                    >\n                        <article className=\"articles\">\n                            {section === 'blog' || 'comments'\n                                ? blog_header\n                                : null}\n                            {tab_content}\n                        </article>\n                    </div>\n                </div>\n            );\n        }\n\n        let printLink = null;\n        if (section === 'permissions') {\n            if (isMyAccount && wifShown) {\n                printLink = (\n                    <div>\n                        <a className=\"float-right noPrint\" onClick={onPrint}>\n                            <Icon name=\"printer\" />&nbsp;{tt('g.print')}&nbsp;&nbsp;\n                        </a>\n                    </div>\n                );\n            }\n        }\n\n        let rewardsMenu = [\n            {\n                link: `/@${accountname}/curation-rewards`,\n                label: tt('g.curation_rewards'),\n                value: tt('g.curation_rewards'),\n            },\n            {\n                link: `/@${accountname}/author-rewards`,\n                label: tt('g.author_rewards'),\n                value: tt('g.author_rewards'),\n            },\n        ];\n\n        const top_menu = (\n            <div className=\"row UserProfile__top-menu\">\n                <div className=\"columns small-10 medium-12 medium-expand\">\n                    <ul className=\"menu\" style={{ flexWrap: 'wrap' }}>\n                        <li>\n                            <Link\n                                to={`/@${accountname}`}\n                                activeClassName=\"active\"\n                            >\n                                {tt('g.blog')}\n                            </Link>\n                        </li>\n                        <li>\n                            <Link\n                                to={`/@${accountname}/comments`}\n                                activeClassName=\"active\"\n                            >\n                                {tt('g.comments')}\n                            </Link>\n                        </li>\n                        <li>\n                            <Link\n                                to={`/@${accountname}/recent-replies`}\n                                activeClassName=\"active\"\n                            >\n                                {tt('g.replies')}\n                            </Link>\n                        </li>\n                        {/*<li><Link to={`/@${accountname}/feed`} activeClassName=\"active\">Feed</Link></li>*/}\n                        <DropdownMenu\n                            className={rewardsClass}\n                            items={rewardsMenu}\n                            el=\"li\"\n                            selected={tt('g.rewards')}\n                            position=\"right\"\n                        />\n                    </ul>\n                </div>\n                <div className=\"columns shrink\">\n                    <ul className=\"menu\" style={{ flexWrap: 'wrap' }}>\n                        <li>\n                            <a\n                                href={`/@${accountname}/transfers`}\n                                className={walletClass}\n                                onClick={e => {\n                                    e.preventDefault();\n                                    browserHistory.push(e.target.pathname);\n                                    return false;\n                                }}\n                            >\n                                {tt('g.wallet')}\n                            </a>\n                        </li>\n                        {isMyAccount && (\n                            <li>\n                                <Link\n                                    to={`/@${accountname}/settings`}\n                                    activeClassName=\"active\"\n                                >\n                                    {tt('g.settings')}\n                                </Link>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        );\n\n        const {\n            name,\n            location,\n            about,\n            website,\n            cover_image,\n        } = normalizeProfile(account);\n        const website_label = website\n            ? website.replace(/^https?:\\/\\/(www\\.)?/, '').replace(/\\/$/, '')\n            : null;\n\n        let cover_image_style = {};\n        if (cover_image) {\n            cover_image_style = {\n                backgroundImage:\n                    'url(' + proxifyImageUrl(cover_image, '2048x512') + ')',\n            };\n        }\n\n        return (\n            <div className=\"UserProfile\">\n                <div className=\"UserProfile__banner row expanded\">\n                    <div className=\"column\" style={cover_image_style}>\n                        <div style={{ position: 'relative' }}>\n                            <div className=\"UserProfile__buttons hide-for-small-only\">\n                                <Follow\n                                    follower={username}\n                                    following={accountname}\n                                />\n                            </div>\n                        </div>\n                        <h1>\n                            <Userpic account={account.name} hideIfDefault />\n                            {name || account.name}{' '}\n                            <Tooltip\n                                t={tt(\n                                    'user_profile.this_is_users_reputations_score_it_is_based_on_history_of_votes',\n                                    { name: accountname }\n                                )}\n                            >\n                                <span className=\"UserProfile__rep\">\n                                    ({rep})\n                                </span>\n                            </Tooltip>\n                        </h1>\n\n                        <div>\n                            {about && (\n                                <p className=\"UserProfile__bio\">{about}</p>\n                            )}\n                            <div className=\"UserProfile__stats\">\n                                <span>\n                                    <Link to={`/@${accountname}/followers`}>\n                                        {tt('user_profile.follower_count', {\n                                            count: followerCount,\n                                        })}\n                                    </Link>\n                                </span>\n                                <span>\n                                    <Link to={`/@${accountname}`}>\n                                        {tt('user_profile.post_count', {\n                                            count: account.post_count || 0,\n                                        })}\n                                    </Link>\n                                </span>\n                                <span>\n                                    <Link to={`/@${accountname}/followed`}>\n                                        {tt('user_profile.followed_count', {\n                                            count: followingCount,\n                                        })}\n                                    </Link>\n                                </span>\n                            </div>\n                            <p className=\"UserProfile__info\">\n                                {location && (\n                                    <span>\n                                        <Icon name=\"location\" /> {location}\n                                    </span>\n                                )}\n                                {website && (\n                                    <span>\n                                        <Icon name=\"link\" />{' '}\n                                        <SanitizedLink\n                                            url={website}\n                                            text={website_label}\n                                        />\n                                    </span>\n                                )}\n                                <Icon name=\"calendar\" />{' '}\n                                <DateJoinWrapper date={account.created} />\n                            </p>\n                        </div>\n                        <div className=\"UserProfile__buttons_mobile show-for-small-only\">\n                            <Follow\n                                follower={username}\n                                following={accountname}\n                                what=\"blog\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"UserProfile__top-nav row expanded noPrint\">\n                    {top_menu}\n                </div>\n                <div>{printLink}</div>\n                <div>{tab_content}</div>\n            </div>\n        );\n    }\n}\n\nmodule.exports = {\n    path: '@:accountname(/:section)',\n    component: connect(\n        (state, ownProps) => {\n            const wifShown = state.global.get('UserKeys_wifShown');\n            const current_user = state.user.get('current');\n            const accountname = ownProps.routeParams.accountname.toLowerCase();\n\n            return {\n                discussions: state.global.get('discussion_idx'),\n                current_user,\n                wifShown,\n                loading: state.app.get('loading'),\n                global_status: state.global.get('status'),\n                accountname: accountname,\n                account: state.global.getIn(['accounts', accountname]),\n                follow: state.global.get('follow'),\n                follow_count: state.global.get('follow_count'),\n                blogmode: state.app.getIn(['user_preferences', 'blogmode']),\n            };\n        },\n        dispatch => ({\n            login: () => {\n                dispatch(userActions.showLogin());\n            },\n            clearTransferDefaults: () => {\n                dispatch(userActions.clearTransferDefaults());\n            },\n            showTransfer: transferDefaults => {\n                dispatch(userActions.setTransferDefaults(transferDefaults));\n                dispatch(userActions.showTransfer());\n            },\n            clearPowerdownDefaults: () => {\n                dispatch(userActions.clearPowerdownDefaults());\n            },\n            showPowerdown: powerdownDefaults => {\n                console.log('power down defaults:', powerdownDefaults);\n                dispatch(userActions.setPowerdownDefaults(powerdownDefaults));\n                dispatch(userActions.showPowerdown());\n            },\n            withdrawVesting: ({\n                account,\n                vesting_shares,\n                errorCallback,\n                successCallback,\n            }) => {\n                const successCallbackWrapper = (...args) => {\n                    dispatch(\n                        globalActions.getState({ url: `@${account}/transfers` })\n                    );\n                    return successCallback(...args);\n                };\n                dispatch(\n                    transactionActions.broadcastOperation({\n                        type: 'withdraw_vesting',\n                        operation: { account, vesting_shares },\n                        errorCallback,\n                        successCallback: successCallbackWrapper,\n                    })\n                );\n            },\n            requestData: args =>\n                dispatch(fetchDataSagaActions.requestData(args)),\n        })\n    )(UserProfile),\n};\n"]}