{"version":3,"sources":["../../../src/app/components/App.jsx"],"names":["userActions","pageRequiresEntropy","path","page","entropyPages","indexOf","App","props","setShowBannerFalse","setState","showBanner","onEntropyEvent","e","type","key_utils","addEntropy","pageX","pageY","screenX","screenY","console","log","signUp","learnMore","state","showCallout","listenerActive","process","env","BROWSER","localStorage","removeItem","loginUser","pathname","_addEntropyCollector","np","_removeEntropyCollector","refs","App_root","addEventListener","capture","passive","removeEventListener","nextProps","nextState","new_visitor","nightmodeEnabled","showAnnouncement","n","params","children","viewMode","category","order","miniHeader","whistleView","VIEW_MODE_WHISTLE","headerHidden","params_keys","ip","length","alert","error","callout","warning","success","$STM_Config","read_only_mode","themeClass","withAnnouncement","React","Component","propTypes","PropTypes","string","AppPropTypes","Children","func","isRequired","ownProps","current_user","user","get","current_account_name","offchain","app","getIn","location","dispatch","usernamePasswordLogin"],"mappings":"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","file":"App.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppPropTypes from 'app/utils/AppPropTypes';\nimport Header from 'app/components/modules/Header';\nimport * as userActions from 'app/redux/UserReducer';\nimport classNames from 'classnames';\nimport ConnectedSidePanel from 'app/components/modules/ConnectedSidePanel';\nimport CloseButton from 'app/components/elements/CloseButton';\nimport Dialogs from 'app/components/modules/Dialogs';\nimport Modals from 'app/components/modules/Modals';\nimport WelcomePanel from 'app/components/elements/WelcomePanel';\nimport MiniHeader from 'app/components/modules/MiniHeader';\nimport tt from 'counterpart';\nimport PageViewsCounter from 'app/components/elements/PageViewsCounter';\nimport { serverApiRecordEvent } from 'app/utils/ServerApiClient';\nimport { key_utils } from '@steemit/steem-js/lib/auth/ecc';\nimport resolveRoute from 'app/ResolveRoute';\nimport { VIEW_MODE_WHISTLE } from 'shared/constants';\n\nconst pageRequiresEntropy = path => {\n    const { page } = resolveRoute(path);\n\n    const entropyPages = [\n        'ChangePassword',\n        'RecoverAccountStep1',\n        'RecoverAccountStep2',\n        'UserProfile',\n        'CreateAccount',\n    ];\n    /* Returns true if that page requires the entropy collection listener */\n    return entropyPages.indexOf(page) !== -1;\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        // TODO: put both of these and associated toggles into Redux Store.\n        this.state = {\n            showCallout: true,\n            showBanner: true,\n        };\n        this.listenerActive = null;\n    }\n\n    componentWillMount() {\n        if (process.env.BROWSER) localStorage.removeItem('autopost'); // July 14 '16 compromise, renamed to autopost2\n        this.props.loginUser();\n    }\n\n    componentDidMount() {\n        if (pageRequiresEntropy(this.props.pathname)) {\n            this._addEntropyCollector();\n        }\n    }\n\n    componentWillReceiveProps(np) {\n        // Add listener if the next page requires entropy and the current page didn't\n        if (\n            pageRequiresEntropy(np.pathname) &&\n            !pageRequiresEntropy(this.props.pathname)\n        ) {\n            this._addEntropyCollector();\n        } else if (!pageRequiresEntropy(np.pathname)) {\n            // Remove if next page does not require entropy\n            this._removeEntropyCollector();\n        }\n    }\n\n    _addEntropyCollector() {\n        if (!this.listenerActive && this.refs.App_root) {\n            this.refs.App_root.addEventListener(\n                'mousemove',\n                this.onEntropyEvent,\n                { capture: false, passive: true }\n            );\n            this.listenerActive = true;\n        }\n    }\n\n    _removeEntropyCollector() {\n        if (this.listenerActive && this.refs.App_root) {\n            this.refs.App_root.removeEventListener(\n                'mousemove',\n                this.onEntropyEvent\n            );\n            this.listenerActive = null;\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            pathname,\n            new_visitor,\n            nightmodeEnabled,\n            showAnnouncement,\n        } = this.props;\n        const n = nextProps;\n        return (\n            pathname !== n.pathname ||\n            new_visitor !== n.new_visitor ||\n            this.state.showBanner !== nextState.showBanner ||\n            this.state.showCallout !== nextState.showCallout ||\n            nightmodeEnabled !== n.nightmodeEnabled ||\n            showAnnouncement !== n.showAnnouncement\n        );\n    }\n\n    setShowBannerFalse = () => {\n        this.setState({ showBanner: false });\n    };\n\n    onEntropyEvent = e => {\n        if (e.type === 'mousemove')\n            key_utils.addEntropy(e.pageX, e.pageY, e.screenX, e.screenY);\n        else console.log('onEntropyEvent Unknown', e.type, e);\n    };\n\n    signUp = () => {\n        serverApiRecordEvent('Sign up', 'Hero banner');\n    };\n\n    learnMore = () => {\n        serverApiRecordEvent('Learn more', 'Hero banner');\n    };\n\n    render() {\n        const {\n            params,\n            children,\n            new_visitor,\n            nightmodeEnabled,\n            viewMode,\n            pathname,\n            category,\n            order,\n        } = this.props;\n\n        const miniHeader =\n            pathname === '/create_account' || pathname === '/pick_account';\n\n        const whistleView = viewMode === VIEW_MODE_WHISTLE;\n        const headerHidden = whistleView;\n        const params_keys = Object.keys(params);\n        const ip =\n            pathname === '/' ||\n            (params_keys.length === 2 &&\n                params_keys[0] === 'order' &&\n                params_keys[1] === 'category');\n        const alert = this.props.error;\n        let callout = null;\n        if (this.state.showCallout && alert) {\n            callout = (\n                <div className=\"App__announcement row\">\n                    <div className=\"column\">\n                        <div className={classNames('callout', { alert })}>\n                            <CloseButton\n                                onClick={() =>\n                                    this.setState({ showCallout: false })\n                                }\n                            />\n                            <p>{alert}</p>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if (false && ip && this.state.showCallout) {\n            callout = (\n                <div className=\"App__announcement row\">\n                    <div className=\"column\">\n                        <div\n                            className={classNames(\n                                'callout success',\n                                { alert },\n                                { warning },\n                                { success }\n                            )}\n                        >\n                            <CloseButton\n                                onClick={() =>\n                                    this.setState({ showCallout: false })\n                                }\n                            />\n                            <ul>\n                                <li>\n                                    /*<a href=\"https://steemit.com/steemit/@steemitblog/steemit-com-is-now-open-source\">\n                                        ...STORY TEXT...\n                                    </a>*/\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        if ($STM_Config.read_only_mode && this.state.showCallout) {\n            callout = (\n                <div className=\"App__announcement row\">\n                    <div className=\"column\">\n                        <div\n                            className={classNames(\n                                'callout warning',\n                                { alert },\n                                { warning },\n                                { success }\n                            )}\n                        >\n                            <CloseButton\n                                onClick={() =>\n                                    this.setState({ showCallout: false })\n                                }\n                            />\n                            <p>{tt('g.read_only_mode')}</p>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const themeClass = nightmodeEnabled ? ' theme-dark' : ' theme-light';\n\n        return (\n            <div\n                className={classNames('App', themeClass, {\n                    'index-page': ip,\n                    'mini-header': miniHeader,\n                    'whistle-view': whistleView,\n                    withAnnouncement: this.props.showAnnouncement,\n                })}\n                ref=\"App_root\"\n            >\n                <ConnectedSidePanel alignment=\"right\" />\n\n                {headerHidden ? null : miniHeader ? (\n                    <MiniHeader />\n                ) : (\n                    <Header\n                        pathname={pathname}\n                        category={category}\n                        order={order}\n                    />\n                )}\n\n                <div className=\"App__content\">\n                    {process.env.BROWSER &&\n                    ip &&\n                    new_visitor &&\n                    this.state.showBanner ? (\n                        <WelcomePanel\n                            setShowBannerFalse={this.setShowBannerFalse}\n                        />\n                    ) : null}\n                    {callout}\n                    {children}\n                </div>\n                <Dialogs />\n                <Modals />\n                <PageViewsCounter />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    error: PropTypes.string,\n    children: AppPropTypes.Children,\n    pathname: PropTypes.string,\n    category: PropTypes.string,\n    order: PropTypes.string,\n    loginUser: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    (state, ownProps) => {\n        const current_user = state.user.get('current');\n        const current_account_name = current_user\n            ? current_user.get('username')\n            : state.offchain.get('account');\n\n        return {\n            viewMode: state.app.get('viewMode'),\n            error: state.app.get('error'),\n            new_visitor:\n                !state.user.get('current') &&\n                !state.offchain.get('user') &&\n                !state.offchain.get('account') &&\n                state.offchain.get('new_visit'),\n\n            nightmodeEnabled: state.app.getIn([\n                'user_preferences',\n                'nightmode',\n            ]),\n            pathname: ownProps.location.pathname,\n            order: ownProps.params.order,\n            category: ownProps.params.category,\n            showAnnouncement: state.user.get('showAnnouncement'),\n        };\n    },\n    dispatch => ({\n        loginUser: () => dispatch(userActions.usernamePasswordLogin({})),\n    })\n)(App);\n"]}