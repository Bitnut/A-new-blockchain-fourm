{"version":3,"sources":["../../../../src/app/components/modules/Modals.jsx"],"names":["userActions","appActions","transactionActions","Modals","shouldComponentUpdate","props","show_login_modal","show_confirm_modal","show_transfer_modal","show_powerdown_modal","show_signup_modal","show_bandwidth_error_modal","show_post_advanced_settings_modal","hideLogin","hideTransfer","hidePowerdown","hideConfirm","hideSignUp","show_terms_modal","notifications","removeNotification","hidePromotePost","show_promote_post_modal","hideBandwidthError","hidePostAdvancedSettings","username","notifications_array","toArray","map","n","onClick","key","buySteemPower","e","preventDefault","new_window","window","open","opener","location","React","Component","defaultProps","undefined","propTypes","PropTypes","bool","string","func","isRequired","object","state","user","getIn","get","transaction","app","routing","locationBeforeTransitions","pathname","dispatch","dismissError"],"mappings":"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","file":"Modals.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CloseButton from 'app/components/elements/CloseButton';\nimport Reveal from 'app/components/elements/Reveal';\nimport { NotificationStack } from 'react-notification';\nimport { OrderedSet } from 'immutable';\nimport tt from 'counterpart';\nimport * as userActions from 'app/redux/UserReducer';\nimport * as appActions from 'app/redux/AppReducer';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport LoginForm from 'app/components/modules/LoginForm';\nimport ConfirmTransactionForm from 'app/components/modules/ConfirmTransactionForm';\nimport Transfer from 'app/components/modules/Transfer';\nimport SignUp from 'app/components/modules/SignUp';\nimport Powerdown from 'app/components/modules/Powerdown';\nimport shouldComponentUpdate from 'app/utils/shouldComponentUpdate';\nimport TermsAgree from 'app/components/modules/TermsAgree';\nimport PostAdvancedSettings from 'app/components/modules/PostAdvancedSettings';\n\nclass Modals extends React.Component {\n    static defaultProps = {\n        username: '',\n        notifications: undefined,\n        removeNotification: () => {},\n        show_terms_modal: false,\n        show_promote_post_modal: false,\n        show_signup_modal: false,\n        show_bandwidth_error_modal: false,\n        show_powerdown_modal: false,\n        show_transfer_modal: false,\n        show_confirm_modal: false,\n        show_login_modal: false,\n        show_post_advanced_settings_modal: '',\n    };\n    static propTypes = {\n        show_login_modal: PropTypes.bool,\n        show_confirm_modal: PropTypes.bool,\n        show_transfer_modal: PropTypes.bool,\n        show_powerdown_modal: PropTypes.bool,\n        show_bandwidth_error_modal: PropTypes.bool,\n        show_signup_modal: PropTypes.bool,\n        show_promote_post_modal: PropTypes.bool,\n        show_post_advanced_settings_modal: PropTypes.string,\n        hideLogin: PropTypes.func.isRequired,\n        username: PropTypes.string,\n        hideConfirm: PropTypes.func.isRequired,\n        hideSignUp: PropTypes.func.isRequired,\n        hideTransfer: PropTypes.func.isRequired,\n        hidePowerdown: PropTypes.func.isRequired,\n        hidePromotePost: PropTypes.func.isRequired,\n        hideBandwidthError: PropTypes.func.isRequired,\n        hidePostAdvancedSettings: PropTypes.func.isRequired,\n        notifications: PropTypes.object,\n        show_terms_modal: PropTypes.bool,\n        removeNotification: PropTypes.func,\n    };\n\n    constructor() {\n        super();\n        this.shouldComponentUpdate = shouldComponentUpdate(this, 'Modals');\n    }\n\n    render() {\n        const {\n            show_login_modal,\n            show_confirm_modal,\n            show_transfer_modal,\n            show_powerdown_modal,\n            show_signup_modal,\n            show_bandwidth_error_modal,\n            show_post_advanced_settings_modal,\n            hideLogin,\n            hideTransfer,\n            hidePowerdown,\n            hideConfirm,\n            hideSignUp,\n            show_terms_modal,\n            notifications,\n            removeNotification,\n            hidePromotePost,\n            show_promote_post_modal,\n            hideBandwidthError,\n            hidePostAdvancedSettings,\n            username,\n        } = this.props;\n\n        const notifications_array = notifications\n            ? notifications.toArray().map(n => {\n                  n.onClick = () => removeNotification(n.key);\n                  return n;\n              })\n            : [];\n\n        const buySteemPower = e => {\n            if (e && e.preventDefault) e.preventDefault();\n            const new_window = window.open();\n            new_window.opener = null;\n            new_window.location =\n                'https://blocktrades.us/?input_coin_type=eth&output_coin_type=steem_power&receive_address=' +\n                username;\n        };\n\n        return (\n            <div>\n                {show_login_modal && (\n                    <Reveal onHide={hideLogin} show={show_login_modal}>\n                        <LoginForm onCancel={hideLogin} />\n                    </Reveal>\n                )}\n                {show_confirm_modal && (\n                    <Reveal onHide={hideConfirm} show={show_confirm_modal}>\n                        <CloseButton onClick={hideConfirm} />\n                        <ConfirmTransactionForm onCancel={hideConfirm} />\n                    </Reveal>\n                )}\n                {show_transfer_modal && (\n                    <Reveal onHide={hideTransfer} show={show_transfer_modal}>\n                        <CloseButton onClick={hideTransfer} />\n                        <Transfer />\n                    </Reveal>\n                )}\n                {show_powerdown_modal && (\n                    <Reveal onHide={hidePowerdown} show={show_powerdown_modal}>\n                        <CloseButton onClick={hidePowerdown} />\n                        <Powerdown />\n                    </Reveal>\n                )}\n                {show_signup_modal && (\n                    <Reveal onHide={hideSignUp} show={show_signup_modal}>\n                        <CloseButton onClick={hideSignUp} />\n                        <SignUp />\n                    </Reveal>\n                )}\n                {show_terms_modal && (\n                    <Reveal show={show_terms_modal}>\n                        <TermsAgree onCancel={hideLogin} />\n                    </Reveal>\n                )}\n                {show_bandwidth_error_modal && (\n                    <Reveal\n                        onHide={hideBandwidthError}\n                        show={show_bandwidth_error_modal}\n                    >\n                        <div>\n                            <CloseButton onClick={hideBandwidthError} />\n                            <h4>{tt('modals_jsx.your_transaction_failed')}</h4>\n                            <hr />\n                            <h5>{tt('modals_jsx.out_of_bandwidth_title')}</h5>\n                            <p>{tt('modals_jsx.out_of_bandwidth_reason')}</p>\n                            <p>{tt('modals_jsx.out_of_bandwidth_reason_2')}</p>\n                            <p>\n                                {tt('modals_jsx.out_of_bandwidth_option_title')}\n                            </p>\n                            <ol>\n                                <li>\n                                    {tt('modals_jsx.out_of_bandwidth_option_1')}\n                                </li>\n                                <li>\n                                    {tt('modals_jsx.out_of_bandwidth_option_2')}\n                                </li>\n                                <li>\n                                    {tt('modals_jsx.out_of_bandwidth_option_3')}\n                                </li>\n                            </ol>\n                            <button className=\"button\" onClick={buySteemPower}>\n                                {tt('g.buy_steem_power')}\n                            </button>\n                        </div>\n                    </Reveal>\n                )}\n                {show_post_advanced_settings_modal && (\n                    <Reveal\n                        onHide={hidePostAdvancedSettings}\n                        show={show_post_advanced_settings_modal ? true : false}\n                    >\n                        <CloseButton onClick={hidePostAdvancedSettings} />\n                        <PostAdvancedSettings\n                            formId={show_post_advanced_settings_modal}\n                        />\n                    </Reveal>\n                )}\n                <NotificationStack\n                    style={false}\n                    notifications={notifications_array}\n                    onDismiss={n => removeNotification(n.key)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => {\n        return {\n            username: state.user.getIn(['current', 'username']),\n            show_login_modal: state.user.get('show_login_modal'),\n            show_confirm_modal: state.transaction.get('show_confirm_modal'),\n            show_transfer_modal: state.user.get('show_transfer_modal'),\n            show_powerdown_modal: state.user.get('show_powerdown_modal'),\n            show_promote_post_modal: state.user.get('show_promote_post_modal'),\n            show_signup_modal: state.user.get('show_signup_modal'),\n            notifications: state.app.get('notifications'),\n            show_terms_modal:\n                state.user.get('show_terms_modal') &&\n                state.routing.locationBeforeTransitions.pathname !==\n                    '/tos.html' &&\n                state.routing.locationBeforeTransitions.pathname !==\n                    '/privacy.html',\n            show_bandwidth_error_modal: state.transaction.getIn([\n                'errors',\n                'bandwidthError',\n            ]),\n            show_post_advanced_settings_modal: state.user.get(\n                'show_post_advanced_settings_modal'\n            ),\n        };\n    },\n    dispatch => ({\n        hideLogin: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.hideLogin());\n        },\n        hideConfirm: e => {\n            if (e) e.preventDefault();\n            dispatch(transactionActions.hideConfirm());\n        },\n        hideTransfer: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.hideTransfer());\n        },\n        hidePowerdown: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.hidePowerdown());\n        },\n        hidePromotePost: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.hidePromotePost());\n        },\n        hideSignUp: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.hideSignUp());\n        },\n        hideBandwidthError: e => {\n            if (e) e.preventDefault();\n            dispatch(\n                transactionActions.dismissError({ key: 'bandwidthError' })\n            );\n        },\n        hidePostAdvancedSettings: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.hidePostAdvancedSettings());\n        },\n        // example: addNotification: ({key, message}) => dispatch({type: 'ADD_NOTIFICATION', payload: {key, message}}),\n        removeNotification: key =>\n            dispatch(appActions.removeNotification({ key })),\n    })\n)(Modals);\n"]}