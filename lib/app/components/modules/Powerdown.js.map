{"version":3,"sources":["../../../../src/app/components/modules/Powerdown.jsx"],"names":["globalActions","transactionActions","userActions","Powerdown","props","context","new_withdraw","to_withdraw","withdrawn","Math","max","available_shares","state","broadcasting","manual_entry","account","vesting_shares","delegated_vesting_shares","formatSp","amount","sliderChange","setState","value","inputChange","event","preventDefault","parseFloat","target","replace","isFinite","powerDown","error_message","undefined","successCallback","errorCallback","String","error","withdraw","toFixed","VEST_TICKER","withdrawVesting","notes","AMOUNT","WITHDRAWN","push","LIQUID_TICKER","length","VESTING_TOKEN","MESSAGE","React","Component","ownProps","values","user","get","dispatch","hidePowerdown","e","name","showDialog","successCallbackWrapper","getState","url","broadcastOperation","type","operation"],"mappings":"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","file":"Powerdown.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-rangeslider';\nimport tt from 'counterpart';\nimport reactForm from 'app/utils/ReactForm';\nimport * as globalActions from 'app/redux/GlobalReducer';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport * as userActions from 'app/redux/UserReducer';\nimport { VEST_TICKER, LIQUID_TICKER, VESTING_TOKEN } from 'app/client_config';\nimport {\n    numberWithCommas,\n    spToVestsf,\n    vestsToSpf,\n    vestsToSp,\n    assetFloat,\n} from 'app/utils/StateFunctions';\n\nclass Powerdown extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        let new_withdraw;\n        if (props.to_withdraw - props.withdrawn > 0) {\n            new_withdraw = props.to_withdraw - props.withdrawn;\n        } else {\n            // Set the default withrawal amount to (available - 5 STEEM)\n            // This should be removed post hf20\n            new_withdraw = Math.max(\n                0,\n                props.available_shares - spToVestsf(props.state, 5.001)\n            );\n        }\n        this.state = {\n            broadcasting: false,\n            manual_entry: false,\n            new_withdraw,\n        };\n    }\n\n    render() {\n        const { broadcasting, new_withdraw, manual_entry } = this.state;\n        const {\n            account,\n            available_shares,\n            withdrawn,\n            to_withdraw,\n            vesting_shares,\n            delegated_vesting_shares,\n        } = this.props;\n        const formatSp = amount =>\n            numberWithCommas(vestsToSp(this.props.state, amount));\n        const sliderChange = value => {\n            this.setState({ new_withdraw: value, manual_entry: false });\n        };\n        const inputChange = event => {\n            event.preventDefault();\n            let value = spToVestsf(\n                this.props.state,\n                parseFloat(event.target.value.replace(/,/g, ''))\n            );\n            if (!isFinite(value)) {\n                value = new_withdraw;\n            }\n            this.setState({\n                new_withdraw: value,\n                manual_entry: event.target.value,\n            });\n        };\n        const powerDown = event => {\n            event.preventDefault();\n            this.setState({ broadcasting: true, error_message: undefined });\n            const successCallback = this.props.successCallback;\n            const errorCallback = error => {\n                this.setState({\n                    broadcasting: false,\n                    error_message: String(error),\n                });\n            };\n            // workaround bad math in react-rangeslider\n            let withdraw = new_withdraw;\n            if (withdraw > vesting_shares - delegated_vesting_shares) {\n                withdraw = vesting_shares - delegated_vesting_shares;\n            }\n            const vesting_shares = `${withdraw.toFixed(6)} ${VEST_TICKER}`;\n            this.props.withdrawVesting({\n                account,\n                vesting_shares,\n                errorCallback,\n                successCallback,\n            });\n        };\n\n        const notes = [];\n        if (to_withdraw - withdrawn > 0) {\n            const AMOUNT = formatSp(to_withdraw);\n            const WITHDRAWN = formatSp(withdrawn);\n            notes.push(\n                <li key=\"already_power_down\">\n                    {tt('powerdown_jsx.already_power_down', {\n                        AMOUNT,\n                        WITHDRAWN,\n                        LIQUID_TICKER,\n                    })}\n                </li>\n            );\n        }\n        if (delegated_vesting_shares !== 0) {\n            const AMOUNT = formatSp(delegated_vesting_shares);\n            notes.push(\n                <li key=\"delegating\">\n                    {tt('powerdown_jsx.delegating', { AMOUNT, LIQUID_TICKER })}\n                </li>\n            );\n        }\n        if (notes.length === 0) {\n            let AMOUNT = vestsToSpf(this.props.state, new_withdraw) / 13;\n            AMOUNT = AMOUNT.toFixed(AMOUNT >= 10 ? 0 : 1);\n            notes.push(\n                <li key=\"per_week\">\n                    {tt('powerdown_jsx.per_week', { AMOUNT, LIQUID_TICKER })}\n                </li>\n            );\n        }\n        // NOTE: remove this post hf20\n        if (\n            new_withdraw >\n            vesting_shares -\n                delegated_vesting_shares -\n                spToVestsf(this.props.state, 5)\n        ) {\n            const AMOUNT = 5;\n            notes.push(\n                <li key=\"warning\" className=\"warning\">\n                    {tt('powerdown_jsx.warning', { AMOUNT, VESTING_TOKEN })}\n                </li>\n            );\n        }\n\n        if (this.state.error_message) {\n            const MESSAGE = this.state.error_message;\n            notes.push(\n                <li key=\"error\" className=\"error\">\n                    {tt('powerdown_jsx.error', { MESSAGE })}\n                </li>\n            );\n        }\n\n        return (\n            <div className=\"PowerdownModal\">\n                <div className=\"row\">\n                    <h3 className=\"column\">\n                        {tt('powerdown_jsx.power_down')} {broadcasting}\n                    </h3>\n                </div>\n                <Slider\n                    value={new_withdraw}\n                    step={0.000001}\n                    max={vesting_shares - delegated_vesting_shares}\n                    format={formatSp}\n                    onChange={sliderChange}\n                />\n                <p className=\"powerdown-amount\">\n                    {tt('powerdown_jsx.amount')}\n                    <br />\n                    <input\n                        value={\n                            manual_entry ? manual_entry : formatSp(new_withdraw)\n                        }\n                        onChange={inputChange}\n                        autoCorrect={false}\n                    />\n                    {LIQUID_TICKER}\n                </p>\n                <ul className=\"powerdown-notes\">{notes}</ul>\n                <button\n                    type=\"submit\"\n                    className=\"button\"\n                    onClick={powerDown}\n                    disabled={broadcasting}\n                >\n                    {tt('powerdown_jsx.power_down')}\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    // mapStateToProps\n    (state, ownProps) => {\n        const values = state.user.get('powerdown_defaults');\n        const account = values.get('account');\n        const to_withdraw = parseFloat(values.get('to_withdraw')) / 1e6;\n        const withdrawn = parseFloat(values.get('withdrawn')) / 1e6;\n        const vesting_shares = assetFloat(\n            values.get('vesting_shares'),\n            VEST_TICKER\n        );\n        const delegated_vesting_shares = assetFloat(\n            values.get('delegated_vesting_shares'),\n            VEST_TICKER\n        );\n        const available_shares =\n            vesting_shares - to_withdraw - withdrawn - delegated_vesting_shares;\n\n        return {\n            ...ownProps,\n            account,\n            available_shares,\n            delegated_vesting_shares,\n            state,\n            to_withdraw,\n            vesting_shares,\n            withdrawn,\n        };\n    },\n    // mapDispatchToProps\n    dispatch => ({\n        successCallback: () => {\n            dispatch(userActions.hidePowerdown());\n        },\n        powerDown: e => {\n            e.preventDefault();\n            const name = 'powerDown';\n            dispatch(globalActions.showDialog({ name }));\n        },\n        withdrawVesting: ({\n            account,\n            vesting_shares,\n            errorCallback,\n            successCallback,\n        }) => {\n            const successCallbackWrapper = (...args) => {\n                dispatch(\n                    globalActions.getState({ url: `@${account}/transfers` })\n                );\n                return successCallback(...args);\n            };\n            dispatch(\n                transactionActions.broadcastOperation({\n                    type: 'withdraw_vesting',\n                    operation: { account, vesting_shares },\n                    errorCallback,\n                    successCallback: successCallbackWrapper,\n                })\n            );\n        },\n    })\n)(Powerdown);\n"]}