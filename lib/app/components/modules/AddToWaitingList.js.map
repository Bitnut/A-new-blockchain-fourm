{"version":3,"sources":["../../../../src/app/components/modules/AddToWaitingList.jsx"],"names":["email_regex","AddToWaitingList","onSubmit","e","preventDefault","email","state","fetch","method","mode","credentials","headers","Accept","body","csrf","$STM_csrf","then","r","json","res","error","status","console","setState","submitted","catch","email_error","onEmailChange","bind","target","value","trim","toLowerCase","test","APP_NAME","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,cAAc,ggBAApB;;IAEqBC,gB;;;AACjB,gCAAc;AAAA;;AAAA;;AAAA,cAMdC,QANc,GAMH,aAAK;AACZC,cAAEC,cAAF;AACA,gBAAMC,QAAQ,MAAKC,KAAL,CAAWD,KAAzB;AACA,gBAAI,CAACA,KAAL,EAAY;AACZE,kBAAM,sBAAN,EAA8B;AAC1BC,wBAAQ,MADkB;AAE1BC,sBAAM,SAFoB;AAG1BC,6BAAa,aAHa;AAI1BC,yBAAS;AACLC,4BAAQ,kBADH;AAEL,oCAAgB;AAFX,iBAJiB;AAQ1BC,sBAAM,yBAAe,EAAEC,MAAMC,SAAR,EAAmBV,YAAnB,EAAf;AARoB,aAA9B,EAUKW,IAVL,CAUU;AAAA,uBAAKC,EAAEC,IAAF,EAAL;AAAA,aAVV,EAWKF,IAXL,CAWU,eAAO;AACT,oBAAIG,IAAIC,KAAJ,IAAaD,IAAIE,MAAJ,KAAe,IAAhC,EAAsC;AAClCC,4BAAQF,KAAR,CAAc,4BAAd,EAA4CD,IAAIC,KAAhD;AACH,iBAFD,MAEO;AACH;AACH;AACD,sBAAKG,QAAL,CAAc,EAAEC,WAAW,IAAb,EAAd;AACH,aAlBL,EAmBKC,KAnBL,CAmBW,iBAAS;AACZH,wBAAQF,KAAR,CAAc,mCAAd,EAAmDA,KAAnD;AACA,sBAAKG,QAAL,CAAc,EAAEC,WAAW,IAAb,EAAd;AACH,aAtBL;AAuBH,SAjCa;;AAEV,cAAKlB,KAAL,GAAa,EAAED,OAAO,EAAT,EAAamB,WAAW,KAAxB,EAA+BE,aAAa,EAA5C,EAAb;AACA,cAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AAHU;AAIb;;;;sCA+BazB,C,EAAG;AACb,gBAAME,QAAQF,EAAE0B,MAAF,CAASC,KAAT,CAAeC,IAAf,GAAsBC,WAAtB,EAAd;AACA,gBAAIN,cAAc,EAAlB;AACA,gBAAI,CAAC1B,YAAYiC,IAAZ,CAAiB5B,MAAM2B,WAAN,EAAjB,CAAL,EACIN,cAAc,2BAAG,mBAAH,CAAd;AACJ,iBAAKH,QAAL,CAAc,EAAElB,YAAF,EAASqB,wBAAT,EAAd;AACH;;;iCAEQ;AAAA,yBACqC,KAAKpB,KAD1C;AAAA,gBACGD,KADH,UACGA,KADH;AAAA,gBACUqB,WADV,UACUA,WADV;AAAA,gBACuBF,SADvB,UACuBA,SADvB;;AAEL,gBAAIA,SAAJ,EAAe;AACX,uBACI;AAAA;AAAA,sBAAK,WAAU,iBAAf;AACK,+CAAG,oDAAH,EAAyD;AACtDU;AADsD,qBAAzD;AADL,iBADJ;AAOH;AACD,mBACI;AAAA;AAAA,kBAAM,UAAU,KAAKhC,QAArB;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACK,mDAAG,SAAH,CADL;AAEI;AACI,iCAAI,OADR;AAEI,kCAAK,MAFT;AAGI,kCAAK,MAHT;AAII,0CAAa,KAJjB;AAKI,mCAAOG,KALX;AAMI,sCAAU,KAAKsB;AANnB;AAFJ,qBADJ;AAYI;AAAA;AAAA,0BAAG,WAAU,OAAb;AAAsBD;AAAtB;AAZJ,iBADJ;AAeI,yDAfJ;AAgBI;AACI,0BAAK,QADT;AAEI,+BAAU,kBAFd;AAGI,2BAAO,2BAAG,UAAH;AAHX;AAhBJ,aADJ;AAwBH;;;EA/EyCS,gBAAMC,S;;kBAA/BnC,gB","file":"AddToWaitingList.js","sourcesContent":["import React from 'react';\nimport tt from 'counterpart';\nimport { APP_NAME } from 'app/client_config';\n\nconst email_regex = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/;\n\nexport default class AddToWaitingList extends React.Component {\n    constructor() {\n        super();\n        this.state = { email: '', submitted: false, email_error: '' };\n        this.onEmailChange = this.onEmailChange.bind(this);\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        const email = this.state.email;\n        if (!email) return;\n        fetch('/api/v1/update_email', {\n            method: 'post',\n            mode: 'no-cors',\n            credentials: 'same-origin',\n            headers: {\n                Accept: 'application/json',\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify({ csrf: $STM_csrf, email }),\n        })\n            .then(r => r.json())\n            .then(res => {\n                if (res.error || res.status !== 'ok') {\n                    console.error('CreateAccount server error', res.error);\n                } else {\n                    // TODO: process errors\n                }\n                this.setState({ submitted: true });\n            })\n            .catch(error => {\n                console.error('Caught CreateAccount server error', error);\n                this.setState({ submitted: true });\n            });\n    };\n\n    onEmailChange(e) {\n        const email = e.target.value.trim().toLowerCase();\n        let email_error = '';\n        if (!email_regex.test(email.toLowerCase()))\n            email_error = tt('g.not_valid_email');\n        this.setState({ email, email_error });\n    }\n\n    render() {\n        const { email, email_error, submitted } = this.state;\n        if (submitted) {\n            return (\n                <div className=\"callout success\">\n                    {tt('g.thank_you_for_being_an_early_visitor_to_APP_NAME', {\n                        APP_NAME,\n                    })}\n                </div>\n            );\n        }\n        return (\n            <form onSubmit={this.onSubmit}>\n                <div>\n                    <label>\n                        {tt('g.email')}\n                        <input\n                            ref=\"email\"\n                            type=\"text\"\n                            name=\"name\"\n                            autoComplete=\"off\"\n                            value={email}\n                            onChange={this.onEmailChange}\n                        />\n                    </label>\n                    <p className=\"error\">{email_error}</p>\n                </div>\n                <br />\n                <input\n                    type=\"submit\"\n                    className=\"button secondary\"\n                    value={tt('g.submit')}\n                />\n            </form>\n        );\n    }\n}\n"]}