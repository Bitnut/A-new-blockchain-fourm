{"version":3,"sources":["../../../../src/app/components/modules/PostAdvancedSettings.jsx"],"names":["userActions","PostAdvancedSettings","props","handlePayoutChange","setState","payoutType","event","target","value","state","initialPayoutType","initForm","fields","instance","name","initialValues","validation","formId","username","defaultPayoutType","advancedSettings","submitting","valid","handleSubmit","disabled","form","data","setPayoutType","hideAdvancedSettings","Component","propTypes","React","PropTypes","string","isRequired","ownProps","user","getIn","isStory","SUBMIT_FORM_ID","app","dispatch","hidePostAdvancedSettings","set","key"],"mappings":"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","file":"PostAdvancedSettings.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport reactForm from 'app/utils/ReactForm';\nimport { SUBMIT_FORM_ID } from 'shared/constants';\nimport tt from 'counterpart';\nimport { fromJS } from 'immutable';\n\nimport * as userActions from 'app/redux/UserReducer';\n\nclass PostAdvancedSettings extends Component {\n    static propTypes = {\n        formId: React.PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super();\n        this.state = { payoutType: props.initialPayoutType };\n        this.initForm(props);\n    }\n\n    initForm(props) {\n        const { fields } = props;\n        reactForm({\n            fields,\n            instance: this,\n            name: 'advancedSettings',\n            initialValues: props.initialValues,\n            validation: values => {},\n        });\n    }\n\n    handlePayoutChange = event => {\n        this.setState({ payoutType: event.target.value });\n    };\n\n    render() {\n        const {\n            formId,\n            username,\n            defaultPayoutType,\n            initialPayoutType,\n        } = this.props;\n        const { payoutType } = this.state;\n        const { submitting, valid, handleSubmit } = this.state.advancedSettings;\n        const disabled =\n            submitting || !(valid || payoutType !== initialPayoutType);\n\n        const form = (\n            <form\n                onSubmit={handleSubmit(({ data }) => {\n                    this.props.setPayoutType(formId, payoutType);\n                    this.props.hideAdvancedSettings();\n                })}\n            >\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <h4>\n                            {tt(\n                                'post_advanced_settings_jsx.payout_option_header'\n                            )}\n                        </h4>\n                        <p>\n                            {tt(\n                                'post_advanced_settings_jsx.payout_option_description'\n                            )}\n                        </p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"small-12 medium-6 large-12 columns\">\n                        <select\n                            defaultValue={payoutType}\n                            onChange={this.handlePayoutChange}\n                        >\n                            <option value=\"0%\">\n                                {tt('reply_editor.decline_payout')}\n                            </option>\n                            <option value=\"50%\">\n                                {tt('reply_editor.default_50_50')}\n                            </option>\n                            <option value=\"100%\">\n                                {tt('reply_editor.power_up_100')}\n                            </option>\n                        </select>\n                    </div>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"column\">\n                        {tt('post_advanced_settings_jsx.current_default')}:{' '}\n                        {defaultPayoutType === '0%'\n                            ? tt('reply_editor.decline_payout')\n                            : defaultPayoutType === '50%'\n                              ? tt('reply_editor.default_50_50')\n                              : tt('reply_editor.power_up_100')}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <a href={'/@' + username + '/settings'}>\n                            {tt(\n                                'post_advanced_settings_jsx.update_default_in_settings'\n                            )}\n                        </a>\n                    </div>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <span>\n                            <button\n                                type=\"submit\"\n                                className=\"button\"\n                                disabled={disabled}\n                                tabIndex={2}\n                            >\n                                {tt('g.save')}\n                            </button>\n                        </span>\n                    </div>\n                </div>\n            </form>\n        );\n        return (\n            <div>\n                <div className=\"row\">\n                    <h3 className=\"column\">\n                        {tt('reply_editor.advanced_settings')}\n                    </h3>\n                </div>\n                <hr />\n                {form}\n            </div>\n        );\n    }\n}\n\nimport { connect } from 'react-redux';\n\nexport default connect(\n    // mapStateToProps\n    (state, ownProps) => {\n        const formId = ownProps.formId;\n        const username = state.user.getIn(['current', 'username']);\n        const isStory = formId === SUBMIT_FORM_ID;\n        const defaultPayoutType = state.app.getIn(\n            [\n                'user_preferences',\n                isStory ? 'defaultBlogPayout' : 'defaultCommentPayout',\n            ],\n            '50%'\n        );\n        const initialPayoutType = state.user.getIn([\n            'current',\n            'post',\n            formId,\n            'payoutType',\n        ]);\n        return {\n            ...ownProps,\n            fields: [],\n            defaultPayoutType,\n            initialPayoutType,\n            username,\n            initialValues: {},\n        };\n    },\n\n    // mapDispatchToProps\n    dispatch => ({\n        hideAdvancedSettings: () =>\n            dispatch(userActions.hidePostAdvancedSettings()),\n        setPayoutType: (formId, payoutType) =>\n            dispatch(\n                userActions.set({\n                    key: ['current', 'post', formId, 'payoutType'],\n                    value: payoutType,\n                })\n            ),\n    })\n)(PostAdvancedSettings);\n"]}