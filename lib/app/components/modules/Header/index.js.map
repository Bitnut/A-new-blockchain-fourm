{"version":3,"sources":["../../../../../src/app/components/modules/Header/index.jsx"],"names":["userActions","appActions","Header","nextProps","pathname","props","route","page","params","length","sort_order","window","last_sort_order","category","order","current_account_name","username","showLogin","logout","loggedIn","vertical","nightmodeEnabled","toggleNightmode","userPath","showSidePanel","navigate","account_meta","home_account","page_title","topic","page_name","account_name","indexOf","type","prefix","user_name","slice","name","toJS","user_title","charAt","toUpperCase","process","env","BROWSER","document","title","APP_NAME","logo_link","defaultNavigate","e","metaKey","ctrlKey","preventDefault","a","target","nodeName","toLowerCase","parentNode","browserHistory","push","search","hash","nav","submit_story","$STM_Config","read_only_mode","feed_link","replies_link","wallet_link","account_link","comments_link","reset_password_link","settings_link","pathCheck","user_menu","link","icon","value","onClick","showAnnouncement","hideAnnouncement","SIGNUP_URL","React","Component","propTypes","PropTypes","string","object","_Header_","mapStateToProps","state","ownProps","user_profile","global","getIn","routing","locationBeforeTransitions","user","offchain","get","mapDispatchToProps","dispatch","hideSidePanel","connectedHeader"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport Icon from 'app/components/elements/Icon';\nimport resolveRoute from 'app/ResolveRoute';\nimport tt from 'counterpart';\nimport { APP_NAME } from 'app/client_config';\nimport SortOrder from 'app/components/elements/SortOrder';\nimport SearchInput from 'app/components/elements/SearchInput';\nimport IconButton from 'app/components/elements/IconButton';\nimport DropdownMenu from 'app/components/elements/DropdownMenu';\nimport * as userActions from 'app/redux/UserReducer';\nimport * as appActions from 'app/redux/AppReducer';\nimport Userpic from 'app/components/elements/Userpic';\nimport { SIGNUP_URL } from 'shared/constants';\nimport SteemLogo from 'app/components/elements/SteemLogo';\nimport normalizeProfile from 'app/utils/NormalizeProfile';\nimport Announcement from 'app/components/elements/Announcement';\n\nclass Header extends React.Component {\n    static propTypes = {\n        current_account_name: PropTypes.string,\n        account_meta: PropTypes.object,\n        category: PropTypes.string,\n        order: PropTypes.string,\n        pathname: PropTypes.string,\n    };\n\n    constructor() {\n        super();\n    }\n\n    // Conside refactor.\n    // I think 'last sort order' is something available through react-router-redux history.\n    // Therefore no need to store it in the window global like this.\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.pathname !== this.props.pathname) {\n            const route = resolveRoute(nextProps.pathname);\n            if (\n                route &&\n                route.page === 'PostsIndex' &&\n                route.params &&\n                route.params.length > 0\n            ) {\n                const sort_order =\n                    route.params[0] !== 'home' ? route.params[0] : null;\n                if (sort_order)\n                    window.last_sort_order = this.last_sort_order = sort_order;\n            }\n        }\n    }\n\n    render() {\n        const {\n            category,\n            order,\n            pathname,\n            current_account_name,\n            username,\n            showLogin,\n            logout,\n            loggedIn,\n            vertical,\n            nightmodeEnabled,\n            toggleNightmode,\n            userPath,\n            showSidePanel,\n            navigate,\n            account_meta,\n        } = this.props;\n\n        /*Set the document.title on each header render.*/\n        const route = resolveRoute(pathname);\n        let home_account = false;\n        let page_title = route.page;\n\n        let sort_order = '';\n        let topic = '';\n        let page_name = null;\n        if (route.page === 'PostsIndex') {\n            sort_order = route.params[0];\n            if (sort_order === 'home') {\n                page_title = tt('header_jsx.home');\n                const account_name = route.params[1];\n                if (\n                    current_account_name &&\n                    account_name.indexOf(current_account_name) === 1\n                )\n                    home_account = true;\n            } else {\n                topic = route.params.length > 1 ? route.params[1] : '';\n                const type =\n                    route.params[0] == 'payout_comments' ? 'comments' : 'posts';\n                let prefix = route.params[0];\n                if (prefix == 'created') prefix = 'New';\n                if (prefix == 'payout') prefix = 'Pending payout';\n                if (prefix == 'payout_comments') prefix = 'Pending payout';\n                if (topic !== '') prefix += ` ${topic}`;\n                page_title = `${prefix} ${type}`;\n            }\n        } else if (route.page === 'Post') {\n            sort_order = '';\n            topic = route.params[0];\n        } else if (route.page == 'SubmitPost') {\n            page_title = tt('header_jsx.create_a_post');\n        } else if (route.page == 'Privacy') {\n            page_title = tt('navigation.privacy_policy');\n        } else if (route.page == 'Tos') {\n            page_title = tt('navigation.terms_of_service');\n        } else if (route.page == 'ChangePassword') {\n            page_title = tt('header_jsx.change_account_password');\n        } else if (route.page == 'CreateAccount') {\n            page_title = tt('header_jsx.create_account');\n        } else if (route.page == 'PickAccount') {\n            page_title = `Pick Your New Steemit Account`;\n        } else if (route.page == 'Approval') {\n            page_title = `Account Confirmation`;\n        } else if (\n            route.page == 'RecoverAccountStep1' ||\n            route.page == 'RecoverAccountStep2'\n        ) {\n            page_title = tt('header_jsx.stolen_account_recovery');\n        } else if (route.page === 'UserProfile') {\n            let user_name = route.params[0].slice(1);\n            const name = account_meta\n                ? normalizeProfile(account_meta.toJS()).name\n                : null;\n            const user_title = name ? `${name} (@${user_name})` : user_name;\n            page_title = user_title;\n            if (route.params[1] === 'followers') {\n                page_title = tt('header_jsx.people_following', {\n                    username: user_title,\n                });\n            }\n            if (route.params[1] === 'followed') {\n                page_title = tt('header_jsx.people_followed_by', {\n                    username: user_title,\n                });\n            }\n            if (route.params[1] === 'curation-rewards') {\n                page_title = tt('header_jsx.curation_rewards_by', {\n                    username: user_title,\n                });\n            }\n            if (route.params[1] === 'author-rewards') {\n                page_title = tt('header_jsx.author_rewards_by', {\n                    username: user_title,\n                });\n            }\n            if (route.params[1] === 'recent-replies') {\n                page_title = tt('header_jsx.replies_to', {\n                    username: user_title,\n                });\n            }\n            // @user/\"posts\" is deprecated in favor of \"comments\" as of oct-2016 (#443)\n            if (route.params[1] === 'posts' || route.params[1] === 'comments') {\n                page_title = tt('header_jsx.comments_by', {\n                    username: user_title,\n                });\n            }\n        } else {\n            page_name = ''; //page_title = route.page.replace( /([a-z])([A-Z])/g, '$1 $2' ).toLowerCase();\n        }\n\n        // Format first letter of all titles and lowercase user name\n        if (route.page !== 'UserProfile') {\n            page_title =\n                page_title.charAt(0).toUpperCase() + page_title.slice(1);\n        }\n\n        if (\n            process.env.BROWSER &&\n            (route.page !== 'Post' && route.page !== 'PostNoCategory')\n        )\n            document.title = page_title + ' — ' + APP_NAME;\n\n        const logo_link =\n            resolveRoute(pathname).params &&\n            resolveRoute(pathname).params.length > 1 &&\n            this.last_sort_order\n                ? '/' + this.last_sort_order\n                : current_account_name ? `/@${current_account_name}/feed` : '/';\n\n        //TopRightHeader Stuff\n        const defaultNavigate = e => {\n            if (e.metaKey || e.ctrlKey) {\n                // prevent breaking anchor tags\n            } else {\n                e.preventDefault();\n            }\n            const a =\n                e.target.nodeName.toLowerCase() === 'a'\n                    ? e.target\n                    : e.target.parentNode;\n            browserHistory.push(a.pathname + a.search + a.hash);\n        };\n\n        // Since navigate isn't set, defaultNavigate will always be used.\n        const nav = navigate || defaultNavigate;\n\n        const submit_story = $STM_Config.read_only_mode ? null : (\n            <Link to=\"/submit.html\">\n                <IconButton />\n            </Link>\n        );\n\n        const feed_link = `/@${username}/feed`;\n        const replies_link = `/@${username}/recent-replies`;\n        const wallet_link = `/@${username}/transfers`;\n        const account_link = `/@${username}`;\n        const comments_link = `/@${username}/comments`;\n        const reset_password_link = `/@${username}/password`;\n        const settings_link = `/@${username}/settings`;\n        const pathCheck = userPath === '/submit.html' ? true : null;\n\n        const user_menu = [\n            {\n                link: feed_link,\n                icon: 'home',\n                value: tt('g.feed'),\n            },\n            { link: account_link, icon: 'profile', value: tt('g.blog') },\n            { link: comments_link, icon: 'replies', value: tt('g.comments') },\n            {\n                link: replies_link,\n                icon: 'reply',\n                value: tt('g.replies'),\n            },\n            {\n                link: wallet_link,\n                icon: 'wallet',\n                value: tt('g.wallet'),\n            },\n            {\n                link: '#',\n                icon: 'eye',\n                onClick: toggleNightmode,\n                value: tt('g.toggle_nightmode'),\n            },\n            {\n                link: reset_password_link,\n                icon: 'key',\n                value: tt('g.change_password'),\n            },\n            { link: settings_link, icon: 'cog', value: tt('g.settings') },\n            loggedIn\n                ? {\n                      link: '#',\n                      icon: 'enter',\n                      onClick: logout,\n                      value: tt('g.logout'),\n                  }\n                : { link: '#', onClick: showLogin, value: tt('g.login') },\n        ];\n        return (\n            <header className=\"Header\">\n                {this.props.showAnnouncement && (\n                    <Announcement onClose={this.props.hideAnnouncement} />\n                )}\n                <nav className=\"row Header__nav\">\n                    <div className=\"small-5 large-4 columns Header__logotype\">\n                        {/*LOGO*/}\n                        <Link to={logo_link}>\n                            <SteemLogo />\n                        </Link>\n                    </div>\n\n                    <div className=\"large-4 columns show-for-large large-centered Header__sort\">\n                        {/*SORT*/}\n                        <SortOrder\n                            sortOrder={order}\n                            topic={category === 'feed' ? '' : category}\n                            horizontal={true}\n                            pathname={pathname}\n                        />\n                    </div>\n                    <div className=\"small-7 large-4 columns Header__buttons\">\n                        {/*NOT LOGGED IN SIGN IN AND SIGN UP LINKS*/}\n                        {!loggedIn && (\n                            <span className=\"Header__user-signup show-for-medium\">\n                                <a\n                                    className=\"Header__login-link\"\n                                    href=\"/login.html\"\n                                    onClick={showLogin}\n                                >\n                                    {tt('g.login')}\n                                </a>\n                                <a\n                                    className=\"Header__signup-link\"\n                                    href={SIGNUP_URL}\n                                >\n                                    {tt('g.sign_up')}\n                                </a>\n                            </span>\n                        )}\n\n                        {/*CUSTOM SEARCH*/}\n                        <span className=\"Header__search--desktop\">\n                            <SearchInput />\n                        </span>\n                        <span className=\"Header__search\">\n                            <a href=\"/static/search.html\">\n                                <IconButton icon=\"magnifyingGlass\" />\n                            </a>\n                        </span>\n\n                        {/*SUBMIT STORY*/}\n                        {submit_story}\n                        {/*USER AVATAR */}\n                        {loggedIn && (\n                            <DropdownMenu\n                                className={'Header__usermenu'}\n                                items={user_menu}\n                                title={username}\n                                el=\"span\"\n                                selected={tt('g.rewards')}\n                                position=\"left\"\n                            >\n                                <li className={'Header__userpic '}>\n                                    <span title={username}>\n                                        <Userpic account={username} />\n                                    </span>\n                                </li>\n                            </DropdownMenu>\n                        )}\n                        {/*HAMBURGER*/}\n                        <span\n                            onClick={showSidePanel}\n                            className=\"toggle-menu Header__hamburger\"\n                        >\n                            <span className=\"hamburger\" />\n                        </span>\n                    </div>\n                </nav>\n            </header>\n        );\n    }\n}\n\nexport { Header as _Header_ };\n\nconst mapStateToProps = (state, ownProps) => {\n    // SSR code split.\n    if (!process.env.BROWSER) {\n        return {\n            username: null,\n            loggedIn: false,\n        };\n    }\n\n    let user_profile;\n    const route = resolveRoute(ownProps.pathname);\n    if (route.page === 'UserProfile') {\n        user_profile = state.global.getIn([\n            'accounts',\n            route.params[0].slice(1),\n        ]);\n    }\n\n    const userPath = state.routing.locationBeforeTransitions.pathname;\n    const username = state.user.getIn(['current', 'username']);\n    const loggedIn = !!username;\n    const current_account_name = username\n        ? username\n        : state.offchain.get('account');\n\n    return {\n        username,\n        loggedIn,\n        userPath,\n        nightmodeEnabled: state.user.getIn(['user_preferences', 'nightmode']),\n        account_meta: user_profile,\n        current_account_name,\n        showAnnouncement: state.user.get('showAnnouncement'),\n        ...ownProps,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    showLogin: e => {\n        if (e) e.preventDefault();\n        dispatch(userActions.showLogin({ type: 'basic' }));\n    },\n    logout: e => {\n        if (e) e.preventDefault();\n        dispatch(userActions.logout({ type: 'default' }));\n    },\n    toggleNightmode: e => {\n        if (e) e.preventDefault();\n        dispatch(appActions.toggleNightmode());\n    },\n    showSidePanel: () => {\n        dispatch(userActions.showSidePanel());\n    },\n    hideSidePanel: () => {\n        dispatch(userActions.hideSidePanel());\n    },\n    hideAnnouncement: () => dispatch(userActions.hideAnnouncement()),\n});\n\nconst connectedHeader = connect(mapStateToProps, mapDispatchToProps)(Header);\n\nexport default connectedHeader;\n"]}