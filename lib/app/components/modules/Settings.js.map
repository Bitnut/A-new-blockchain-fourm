{"version":3,"sources":["../../../../src/app/components/modules/Settings.jsx"],"names":["userActions","transactionActions","appActions","Settings","props","onDrop","acceptedFiles","rejectedFiles","length","setState","progress","error","console","log","file","upload","name","onOpenClick","imageInProgress","imageName","dropzone","open","uploadImage","message","url","image_md","field","state","profile_image","cover_image","onChange","setTimeout","handleSubmit","updateInitialValues","metaData","profile","user_image","about","location","website","value","account","updateAccount","loading","json_metadata","memo_key","errorCallback","e","errorMessage","changed","successCallback","successMessage","handleDefaultBlogPayoutChange","setUserPreferences","user_preferences","defaultBlogPayout","event","target","handleDefaultCommentPayoutChange","defaultCommentPayout","handleLanguageChange","locale","userPreferences","initForm","onNsfwPrefChange","bind","instance","fields","initialValues","validation","values","test","handleSubmitForm","accountSettings","args","nsfwPref","currentTarget","submitting","valid","touched","disabled","isOwnAccount","follow","following","getIn","ignores","get","node","blur","size","React","Component","ownProps","accountname","routeParams","global","toJS","current_user","user","username","o2j","ifStringParseJSON","app","changeLanguage","dispatch","language","operation","options","type","broadcastOperation","payload"],"mappings":"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","file":"Settings.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport tt from 'counterpart';\nimport * as userActions from 'app/redux/UserReducer';\nimport * as transactionActions from 'app/redux/TransactionReducer';\nimport * as appActions from 'app/redux/AppReducer';\nimport o2j from 'shared/clash/object2json';\nimport LoadingIndicator from 'app/components/elements/LoadingIndicator';\nimport reactForm from 'app/utils/ReactForm';\nimport UserList from 'app/components/elements/UserList';\nimport Dropzone from 'react-dropzone';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorMessage: '',\n            successMessage: '',\n            progress: {},\n        };\n        this.initForm(props);\n        this.onNsfwPrefChange = this.onNsfwPrefChange.bind(this);\n    }\n\n    initForm(props) {\n        reactForm({\n            instance: this,\n            name: 'accountSettings',\n            fields: [\n                'profile_image',\n                'cover_image',\n                'name',\n                'about',\n                'location',\n                'website',\n            ],\n            initialValues: props.profile,\n            validation: values => ({\n                profile_image:\n                    values.profile_image &&\n                    !/^https?:\\/\\//.test(values.profile_image)\n                        ? tt('settings_jsx.invalid_url')\n                        : null,\n                cover_image:\n                    values.cover_image &&\n                    !/^https?:\\/\\//.test(values.cover_image)\n                        ? tt('settings_jsx.invalid_url')\n                        : null,\n                name:\n                    values.name && values.name.length > 20\n                        ? tt('settings_jsx.name_is_too_long')\n                        : values.name && /^\\s*@/.test(values.name)\n                          ? tt('settings_jsx.name_must_not_begin_with')\n                          : null,\n                about:\n                    values.about && values.about.length > 160\n                        ? tt('settings_jsx.about_is_too_long')\n                        : null,\n                location:\n                    values.location && values.location.length > 30\n                        ? tt('settings_jsx.location_is_too_long')\n                        : null,\n                website:\n                    values.website && values.website.length > 100\n                        ? tt('settings_jsx.website_url_is_too_long')\n                        : values.website && !/^https?:\\/\\//.test(values.website)\n                          ? tt('settings_jsx.invalid_url')\n                          : null,\n            }),\n        });\n        this.handleSubmitForm = this.state.accountSettings.handleSubmit(args =>\n            this.handleSubmit(args)\n        );\n    }\n\n    onDrop = (acceptedFiles, rejectedFiles) => {\n        if (!acceptedFiles.length) {\n            if (rejectedFiles.length) {\n                this.setState({\n                    progress: { error: 'Please insert only image files.' },\n                });\n                console.log('onDrop Rejected files: ', rejectedFiles);\n            }\n            return;\n        }\n        const file = acceptedFiles[0];\n        this.upload(file, file.name);\n    };\n\n    onOpenClick = imageName => {\n        this.setState({\n            imageInProgress: imageName,\n        });\n        this.dropzone.open();\n    };\n\n    upload = (file, name = '') => {\n        const { uploadImage } = this.props;\n        this.setState({\n            progress: { message: tt('settings_jsx.uploading_image') + '...' },\n        });\n        uploadImage(file, progress => {\n            if (progress.url) {\n                this.setState({ progress: {} });\n                const { url } = progress;\n                const image_md = `${url}`;\n                let field;\n                if (this.state.imageInProgress === 'profile_image') {\n                    field = this.state.profile_image;\n                } else if (this.state.imageInProgress === 'cover_image') {\n                    field = this.state.cover_image;\n                } else {\n                    return;\n                }\n                field.props.onChange(image_md);\n            } else {\n                this.setState({ progress });\n            }\n            setTimeout(() => {\n                this.setState({ progress: {} });\n            }, 4000); // clear message\n        });\n    };\n\n    handleSubmit = ({ updateInitialValues }) => {\n        let { metaData } = this.props;\n        if (!metaData) metaData = {};\n        if (!metaData.profile) metaData.profile = {};\n        delete metaData.user_image; // old field... cleanup\n\n        const {\n            profile_image,\n            cover_image,\n            name,\n            about,\n            location,\n            website,\n        } = this.state;\n\n        // Update relevant fields\n        metaData.profile.profile_image = profile_image.value;\n        metaData.profile.cover_image = cover_image.value;\n        metaData.profile.name = name.value;\n        metaData.profile.about = about.value;\n        metaData.profile.location = location.value;\n        metaData.profile.website = website.value;\n\n        // Remove empty keys\n        if (!metaData.profile.profile_image)\n            delete metaData.profile.profile_image;\n        if (!metaData.profile.cover_image) delete metaData.profile.cover_image;\n        if (!metaData.profile.name) delete metaData.profile.name;\n        if (!metaData.profile.about) delete metaData.profile.about;\n        if (!metaData.profile.location) delete metaData.profile.location;\n        if (!metaData.profile.website) delete metaData.profile.website;\n\n        const { account, updateAccount } = this.props;\n        this.setState({ loading: true });\n        updateAccount({\n            json_metadata: JSON.stringify(metaData),\n            account: account.name,\n            memo_key: account.memo_key,\n            errorCallback: e => {\n                if (e === 'Canceled') {\n                    this.setState({\n                        loading: false,\n                        errorMessage: '',\n                    });\n                } else {\n                    console.log('updateAccount ERROR', e);\n                    this.setState({\n                        loading: false,\n                        changed: false,\n                        errorMessage: tt('g.server_returned_error'),\n                    });\n                }\n            },\n            successCallback: () => {\n                this.setState({\n                    loading: false,\n                    changed: false,\n                    errorMessage: '',\n                    successMessage: tt('settings_jsx.saved'),\n                });\n                // remove successMessage after a while\n                setTimeout(() => this.setState({ successMessage: '' }), 4000);\n                updateInitialValues();\n            },\n        });\n    };\n\n    onNsfwPrefChange(e) {\n        this.props.setUserPreferences({\n            ...this.props.user_preferences,\n            nsfwPref: e.currentTarget.value,\n        });\n    }\n\n    handleDefaultBlogPayoutChange = event => {\n        this.props.setUserPreferences({\n            ...this.props.user_preferences,\n            defaultBlogPayout: event.target.value,\n        });\n    };\n\n    handleDefaultCommentPayoutChange = event => {\n        this.props.setUserPreferences({\n            ...this.props.user_preferences,\n            defaultCommentPayout: event.target.value,\n        });\n    };\n\n    handleLanguageChange = event => {\n        const locale = event.target.value;\n        const userPreferences = { ...this.props.user_preferences, locale };\n        this.props.setUserPreferences(userPreferences);\n    };\n\n    render() {\n        const { state, props } = this;\n\n        const { submitting, valid, touched } = this.state.accountSettings;\n        const disabled =\n            !props.isOwnAccount ||\n            state.loading ||\n            submitting ||\n            !valid ||\n            !touched;\n\n        const {\n            profile_image,\n            cover_image,\n            name,\n            about,\n            location,\n            website,\n            progress,\n        } = this.state;\n\n        const { follow, account, isOwnAccount, user_preferences } = this.props;\n        const following =\n            follow && follow.getIn(['getFollowingAsync', account.name]);\n        const ignores =\n            isOwnAccount && following && following.get('ignore_result');\n\n        return (\n            <div className=\"Settings\">\n                <div className=\"row\">\n                    <form\n                        onSubmit={this.handleSubmitForm}\n                        className=\"small-12 medium-6 large-4 columns\"\n                    >\n                        <h4>{tt('settings_jsx.public_profile_settings')}</h4>\n                        {progress.message && (\n                            <div className=\"info\">{progress.message}</div>\n                        )}\n                        {progress.error && (\n                            <div className=\"error\">\n                                {tt('reply_editor.image_upload')}\n                                {': '}\n                                {progress.error}\n                            </div>\n                        )}\n                        <label>\n                            {tt('settings_jsx.profile_image_url')}\n                            <Dropzone\n                                onDrop={this.onDrop}\n                                className={'none'}\n                                disableClick\n                                multiple={false}\n                                accept=\"image/*\"\n                                ref={node => {\n                                    this.dropzone = node;\n                                }}\n                            >\n                                <input\n                                    type=\"url\"\n                                    {...profile_image.props}\n                                    autoComplete=\"off\"\n                                />\n                            </Dropzone>\n                            <a\n                                onClick={() =>\n                                    this.onOpenClick('profile_image')\n                                }\n                            >\n                                {tt('settings_jsx.upload_image')}\n                            </a>\n                        </label>\n                        <div className=\"error\">\n                            {profile_image.blur &&\n                                profile_image.touched &&\n                                profile_image.error}\n                        </div>\n                        <label>\n                            {tt('settings_jsx.cover_image_url')}\n                            <input\n                                type=\"url\"\n                                {...cover_image.props}\n                                autoComplete=\"off\"\n                            />\n                            <a onClick={() => this.onOpenClick('cover_image')}>\n                                {tt('settings_jsx.upload_image')}\n                            </a>\n                        </label>\n                        <div className=\"error\">\n                            {cover_image.blur &&\n                                cover_image.touched &&\n                                cover_image.error}\n                        </div>\n                        <label>\n                            {tt('settings_jsx.profile_name')}\n                            <input\n                                type=\"text\"\n                                {...name.props}\n                                maxLength=\"20\"\n                                autoComplete=\"off\"\n                            />\n                        </label>\n                        <div className=\"error\">\n                            {name.touched && name.error}\n                        </div>\n                        <label>\n                            {tt('settings_jsx.profile_about')}\n                            <input\n                                type=\"text\"\n                                {...about.props}\n                                maxLength=\"160\"\n                                autoComplete=\"off\"\n                            />\n                        </label>\n                        <div className=\"error\">\n                            {about.touched && about.error}\n                        </div>\n                        <label>\n                            {tt('settings_jsx.profile_location')}\n                            <input\n                                type=\"text\"\n                                {...location.props}\n                                maxLength=\"30\"\n                                autoComplete=\"off\"\n                            />\n                        </label>\n                        <div className=\"error\">\n                            {location.touched && location.error}\n                        </div>\n                        <label>\n                            {tt('settings_jsx.profile_website')}\n                            <input\n                                type=\"url\"\n                                {...website.props}\n                                maxLength=\"100\"\n                                autoComplete=\"off\"\n                            />\n                        </label>\n                        <div className=\"error\">\n                            {website.blur && website.touched && website.error}\n                        </div>\n                        <br />\n                        {state.loading && (\n                            <span>\n                                <LoadingIndicator type=\"circle\" />\n                                <br />\n                            </span>\n                        )}\n                        {!state.loading && (\n                            <input\n                                type=\"submit\"\n                                className=\"button\"\n                                value={tt('settings_jsx.update')}\n                                disabled={disabled}\n                            />\n                        )}{' '}\n                        {state.errorMessage ? (\n                            <small className=\"error\">\n                                {state.errorMessage}\n                            </small>\n                        ) : state.successMessage ? (\n                            <small className=\"success uppercase\">\n                                {state.successMessage}\n                            </small>\n                        ) : null}\n                    </form>\n                </div>\n\n                {isOwnAccount && (\n                    <div className=\"row\">\n                        <div className=\"small-12 medium-6 large-4 columns\">\n                            <br />\n                            <br />\n                            <h4>{tt('settings_jsx.preferences')}</h4>\n\n                            <div className=\"row\">\n                                <div className=\"small-12 medium-6 large-12 columns\">\n                                    <label>\n                                        {tt('g.choose_language')}\n                                        <select\n                                            defaultValue={\n                                                user_preferences.locale\n                                            }\n                                            onChange={this.handleLanguageChange}\n                                        >\n                                            <option value=\"en\">English</option>\n                                            <option value=\"es\">\n                                                Spanish Español\n                                            </option>\n                                            <option value=\"ru\">\n                                                Russian русский\n                                            </option>\n                                            <option value=\"fr\">\n                                                French français\n                                            </option>\n                                            <option value=\"it\">\n                                                Italian italiano\n                                            </option>\n                                            <option value=\"ko\">\n                                                Korean 한국어\n                                            </option>\n                                            <option value=\"ja\">\n                                                Japanese 日本語\n                                            </option>\n                                            <option value=\"pl\">Polish</option>\n                                            <option value=\"zh\">\n                                                Chinese 简体中文\n                                            </option>\n                                        </select>\n                                    </label>\n                                </div>\n                            </div>\n                            <br />\n\n                            <div className=\"row\">\n                                <div className=\"small-12 medium-6 large-12 columns\">\n                                    <label>\n                                        {tt(\n                                            'settings_jsx.not_safe_for_work_nsfw_content'\n                                        )}\n                                    </label>\n                                    <select\n                                        value={user_preferences.nsfwPref}\n                                        onChange={this.onNsfwPrefChange}\n                                    >\n                                        <option value=\"hide\">\n                                            {tt('settings_jsx.always_hide')}\n                                        </option>\n                                        <option value=\"warn\">\n                                            {tt('settings_jsx.always_warn')}\n                                        </option>\n                                        <option value=\"show\">\n                                            {tt('settings_jsx.always_show')}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <br />\n\n                            <div className=\"row\">\n                                <div className=\"small-12 medium-6 large-12 columns\">\n                                    <label>\n                                        {tt(\n                                            'settings_jsx.choose_default_blog_payout'\n                                        )}\n                                        <select\n                                            defaultValue={\n                                                user_preferences.defaultBlogPayout ||\n                                                '50%'\n                                            }\n                                            onChange={\n                                                this\n                                                    .handleDefaultBlogPayoutChange\n                                            }\n                                        >\n                                            <option value=\"0%\">\n                                                {tt(\n                                                    'reply_editor.decline_payout'\n                                                )}\n                                            </option>\n                                            <option value=\"50%\">\n                                                {tt(\n                                                    'reply_editor.default_50_50'\n                                                )}\n                                            </option>\n                                            <option value=\"100%\">\n                                                {tt(\n                                                    'reply_editor.power_up_100'\n                                                )}\n                                            </option>\n                                        </select>\n                                    </label>\n                                </div>\n                            </div>\n                            <br />\n\n                            <div className=\"row\">\n                                <div className=\"small-12 medium-6 large-12 columns\">\n                                    <label>\n                                        {tt(\n                                            'settings_jsx.choose_default_comment_payout'\n                                        )}\n                                        <select\n                                            defaultValue={\n                                                user_preferences.defaultCommentPayout ||\n                                                '50%'\n                                            }\n                                            onChange={\n                                                this\n                                                    .handleDefaultCommentPayoutChange\n                                            }\n                                        >\n                                            <option value=\"0%\">\n                                                {tt(\n                                                    'reply_editor.decline_payout'\n                                                )}\n                                            </option>\n                                            <option value=\"50%\">\n                                                {tt(\n                                                    'reply_editor.default_50_50'\n                                                )}\n                                            </option>\n                                            <option value=\"100%\">\n                                                {tt(\n                                                    'reply_editor.power_up_100'\n                                                )}\n                                            </option>\n                                        </select>\n                                    </label>\n                                </div>\n                            </div>\n                            <br />\n                        </div>\n                    </div>\n                )}\n                {ignores &&\n                    ignores.size > 0 && (\n                        <div className=\"row\">\n                            <div className=\"small-12 medium-6 large-4 columns\">\n                                <br />\n                                <br />\n                                <UserList\n                                    title={tt('settings_jsx.muted_users')}\n                                    account={account}\n                                    users={ignores}\n                                />\n                            </div>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    // mapStateToProps\n    (state, ownProps) => {\n        const { accountname } = ownProps.routeParams;\n        const account = state.global.getIn(['accounts', accountname]).toJS();\n        const current_user = state.user.get('current');\n        const username = current_user ? current_user.get('username') : '';\n        let metaData = account\n            ? o2j.ifStringParseJSON(account.json_metadata)\n            : {};\n        if (typeof metaData === 'string')\n            metaData = o2j.ifStringParseJSON(metaData); // issue #1237\n        const profile = metaData && metaData.profile ? metaData.profile : {};\n        const user_preferences = state.app.get('user_preferences').toJS();\n\n        return {\n            account,\n            metaData,\n            accountname,\n            isOwnAccount: username == accountname,\n            profile,\n            follow: state.global.get('follow'),\n            user_preferences,\n            ...ownProps,\n        };\n    },\n    // mapDispatchToProps\n    dispatch => ({\n        changeLanguage: language => {\n            dispatch(userActions.changeLanguage(language));\n        },\n        uploadImage: (file, progress) =>\n            dispatch(userActions.uploadImage({ file, progress })),\n        updateAccount: ({ successCallback, errorCallback, ...operation }) => {\n            const options = {\n                type: 'account_update',\n                operation,\n                successCallback,\n                errorCallback,\n            };\n            dispatch(transactionActions.broadcastOperation(options));\n        },\n        setUserPreferences: payload => {\n            dispatch(appActions.setUserPreferences(payload));\n        },\n    })\n)(Settings);\n"]}