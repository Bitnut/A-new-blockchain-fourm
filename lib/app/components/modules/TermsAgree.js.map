{"version":3,"sources":["../../../../src/app/components/modules/TermsAgree.jsx"],"names":["userActions","TermsAgree","state","tosChecked","privacyChecked","termsAgree","bind","handleInputChange","event","target","value","type","checked","name","setState","e","props","acceptTerms","username","Component","propTypes","PropTypes","string","isRequired","func","user","getIn","preventDefault","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAAA;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;AACA;;;;AACA;;IAAYA,W;;;;;;IAENC,U;;;AACF,0BAAc;AAAA;;AAAA;;AAEV,cAAKC,KAAL,GAAa;AACTC,wBAAY,KADH;AAETC,4BAAgB;AAFP,SAAb;AAIA,cAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,OAAzB;AAPU;AAQb;;;;0CAEiBE,K,EAAO;AACrB,gBAAMC,SAASD,MAAMC,MAArB;AACA,gBAAMC,QACFD,OAAOE,IAAP,KAAgB,UAAhB,GAA6BF,OAAOG,OAApC,GAA8CH,OAAOC,KADzD;AAEA,gBAAMG,OAAOJ,OAAOI,IAApB;;AAEA,iBAAKC,QAAL,mCACKD,IADL,EACYH,KADZ;AAGH;;;mCAEUK,C,EAAG;AACV;AACA,iBAAKC,KAAL,CAAWC,WAAX,CAAuBF,CAAvB;AACH;;;iCAOQ;AAAA,gBACGG,QADH,GACgB,KAAKF,KADrB,CACGE,QADH;;;AAGL,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAK,+CAAG,8BAAH;AAAL,iBADJ;AAEI;AAAA;AAAA;AAAI,+CAAG,wBAAH,EAA6B,EAAEA,kBAAF,EAA7B;AAAJ,iBAFJ;AAGI;AAAA;AAAA;AAAI,+CAAG,sBAAH;AAAJ,iBAHJ;AAII;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AACI,kCAAK,YADT;AAEI,kCAAK,UAFT;AAGI,qCAAS,KAAKhB,KAAL,CAAWC,UAHxB;AAII,sCAAU,KAAKI;AAJnB,0BADJ;AAOK,mDAAG,oCAAH,CAPL;AAO+C,2BAP/C;AAQI;AAAA;AAAA;AACI,wCAAO,QADX;AAEI,qCAAI,qBAFR;AAGI,sCAAK;AAHT;AAKK,uDAAG,iCAAH;AALL;AARJ;AADJ,iBAJJ;AAsBI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AACI,kCAAK,gBADT;AAEI,kCAAK,UAFT;AAGI,qCAAS,KAAKL,KAAL,CAAWE,cAHxB;AAII,sCAAU,KAAKG;AAJnB,0BADJ;AAOK,mDAAG,oCAAH,CAPL;AAO+C,2BAP/C;AAQI;AAAA;AAAA;AACI,wCAAO,QADX;AAEI,qCAAI,qBAFR;AAGI,sCAAK;AAHT;AAKK,uDAAG,+BAAH;AALL;AARJ;AADJ,iBAtBJ;AAwCI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,kCAAK,QADT;AAEI,uCAAU,QAFd;AAGI,qCAAS,KAAKF,UAHlB;AAII,sCACI,CAAC,KAAKH,KAAL,CAAWC,UAAZ,IAA0B,CAAC,KAAKD,KAAL,CAAWE;AAL9C;AAQK,mDAAG,yBAAH;AARL;AADJ;AAxCJ,aADJ;AAuDH;;;EA1FoBe,gB,UA2BdC,S,GAAY;AACfF,cAAUG,oBAAUC,MAAV,CAAiBC,UADZ;AAEfN,iBAAaI,oBAAUG,IAAV,CAAeD;AAFb,C;kBAkER,yBACX;AAAA,WAAU;AACNL,kBAAUhB,MAAMuB,IAAN,CAAWC,KAAX,CAAiB,CAAC,SAAD,EAAY,UAAZ,CAAjB;AADJ,KAAV;AAAA,CADW,EAIX;AAAA,WAAa;AACTT,qBAAa,wBAAK;AACd,gBAAIF,CAAJ,EAAOA,EAAEY,cAAF;AACPC,qBAAS5B,YAAYiB,WAAZ,EAAT;AACH;AAJQ,KAAb;AAAA,CAJW,EAUbhB,UAVa,C;AAWf","file":"TermsAgree.js","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport tt from 'counterpart';\n\nimport { translate } from 'app/Translator';\nimport HelpContent from 'app/components/elements/HelpContent';\nimport * as userActions from 'app/redux/UserReducer';\n\nclass TermsAgree extends Component {\n    constructor() {\n        super();\n        this.state = {\n            tosChecked: false,\n            privacyChecked: false,\n        };\n        this.termsAgree = this.termsAgree.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value =\n            target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    termsAgree(e) {\n        // let user proceed\n        this.props.acceptTerms(e);\n    }\n\n    static propTypes = {\n        username: PropTypes.string.isRequired,\n        acceptTerms: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { username } = this.props;\n\n        return (\n            <div>\n                <h4>{tt('termsagree_jsx.please_review')}</h4>\n                <p>{tt('termsagree_jsx.hi_user', { username })}</p>\n                <p>{tt('termsagree_jsx.blurb')}</p>\n                <p>\n                    <label>\n                        <input\n                            name=\"tosChecked\"\n                            type=\"checkbox\"\n                            checked={this.state.tosChecked}\n                            onChange={this.handleInputChange}\n                        />\n                        {tt('termsagree_jsx.i_agree_to_steemits')}{' '}\n                        <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"/tos.html\"\n                        >\n                            {tt('termsagree_jsx.terms_of_service')}\n                        </a>\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        <input\n                            name=\"privacyChecked\"\n                            type=\"checkbox\"\n                            checked={this.state.privacyChecked}\n                            onChange={this.handleInputChange}\n                        />\n                        {tt('termsagree_jsx.i_agree_to_steemits')}{' '}\n                        <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"/privacy.html\"\n                        >\n                            {tt('termsagree_jsx.privacy_policy')}\n                        </a>\n                    </label>\n                </p>\n                <div>\n                    <button\n                        type=\"submit\"\n                        className=\"button\"\n                        onClick={this.termsAgree}\n                        disabled={\n                            !this.state.tosChecked || !this.state.privacyChecked\n                        }\n                    >\n                        {tt('termsagree_jsx.continue')}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        username: state.user.getIn(['current', 'username']),\n    }),\n    dispatch => ({\n        acceptTerms: e => {\n            if (e) e.preventDefault();\n            dispatch(userActions.acceptTerms());\n        },\n    })\n)(TermsAgree);\n// mapStateToProps\n"]}