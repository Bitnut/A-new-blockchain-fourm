{"version":3,"sources":["../../../../src/app/components/modules/ExplorePost.jsx"],"names":["ExplorePost","props","state","copied","onCopy","bind","Steemd","Steemdb","Busy","permlink","setState","link","steemd","steemdb","busy","steemit","text","e","preventDefault","Component","propTypes","PropTypes","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,W;;;AAKF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oJACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,oBAAQ;AADC,SAAb;AAGA,cAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AACA,cAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,OAAd;AACA,cAAKE,OAAL,GAAe,MAAKA,OAAL,CAAaF,IAAb,OAAf;AACA,cAAKG,IAAL,GAAY,MAAKA,IAAL,CAAUH,IAAV,OAAZ;AARe;AASlB;;;;iCAEQ;AACL,uDAAqB,YAArB,EAAmC,KAAKJ,KAAL,CAAWQ,QAA9C;AACH;;;kCAES;AACN,uDAAqB,aAArB,EAAoC,KAAKR,KAAL,CAAWQ,QAA/C;AACH;;;+BAEM;AACH,uDAAqB,WAArB,EAAkC,KAAKR,KAAL,CAAWQ,QAA7C;AACH;;;iCAEQ;AACL,iBAAKC,QAAL,CAAc;AACVP,wBAAQ;AADE,aAAd;AAGH;;;iCAEQ;AACL,gBAAMQ,OAAO,KAAKV,KAAL,CAAWQ,QAAxB;AACA,gBAAMG,SAAS,uBAAuBD,IAAtC;AACA,gBAAME,UAAU,wBAAwBF,IAAxC;AACA,gBAAMG,OAAO,qBAAqBH,IAAlC;AACA,gBAAMI,UAAU,wBAAwBJ,IAAxC;AACA,gBAAIK,OACA,KAAKd,KAAL,CAAWC,MAAX,IAAqB,IAArB,GACM,2BAAG,wBAAH,CADN,GAEM,2BAAG,sBAAH,CAHV;AAIA,mBACI;AAAA;AAAA,kBAAM,WAAU,aAAhB;AACI;AAAA;AAAA;AAAK,+CAAG,mBAAH;AAAL,iBADJ;AAEI,yDAFJ;AAGI;AAAA;AAAA,sBAAK,WAAU,aAAf;AACI;AACI,mCAAU,6BADd;AAEI,8BAAK,MAFT;AAGI,+BAAOY,OAHX;AAII,kCAAU;AAAA,mCAAKE,EAAEC,cAAF,EAAL;AAAA;AAJd,sBADJ;AAOI;AAAC,sDAAD;AAAA;AACI,kCAAMH,OADV;AAEI,oCAAQ,KAAKX,MAFjB;AAGI,uCAAU;AAHd;AAKI;AAAA;AAAA;AAAOY;AAAP;AALJ;AAPJ,iBAHJ;AAkBI;AAAA;AAAA;AAAK,+CAAG,qCAAH;AAAL,iBAlBJ;AAmBI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,sCAAMJ,MADV;AAEI,yCAAS,KAAKN,MAFlB;AAGI,wCAAO,QAHX;AAII,qCAAI;AAJR;AAAA;AAMe,0DAAC,cAAD,IAAM,MAAK,SAAX;AANf;AADJ,qBADJ;AAWI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,sCAAMO,OADV;AAEI,yCAAS,KAAKN,OAFlB;AAGI,wCAAO,QAHX;AAII,qCAAI;AAJR;AAAA;AAMgB,0DAAC,cAAD,IAAM,MAAK,SAAX;AANhB;AADJ,qBAXJ;AAqBI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,sCAAMO,IADV;AAEI,yCAAS,KAAKN,IAFlB;AAGI,wCAAO,QAHX;AAII,qCAAI;AAJR;AAAA;AAMa,0DAAC,cAAD,IAAM,MAAK,SAAX;AANb;AADJ;AArBJ;AAnBJ,aADJ;AAsDH;;;EAlGqBW,gB,UACfC,S,GAAY;AACfX,cAAUY,oBAAUC,MAAV,CAAiBC;AADZ,C;kBAoGR,2BAAUvB,WAAV,C","file":"ExplorePost.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { serverApiRecordEvent } from 'app/utils/ServerApiClient';\nimport Icon from 'app/components/elements/Icon';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport tt from 'counterpart';\n\nclass ExplorePost extends Component {\n    static propTypes = {\n        permlink: PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            copied: false,\n        };\n        this.onCopy = this.onCopy.bind(this);\n        this.Steemd = this.Steemd.bind(this);\n        this.Steemdb = this.Steemdb.bind(this);\n        this.Busy = this.Busy.bind(this);\n    }\n\n    Steemd() {\n        serverApiRecordEvent('SteemdView', this.props.permlink);\n    }\n\n    Steemdb() {\n        serverApiRecordEvent('SteemdbView', this.props.permlink);\n    }\n\n    Busy() {\n        serverApiRecordEvent('Busy view', this.props.permlink);\n    }\n\n    onCopy() {\n        this.setState({\n            copied: true,\n        });\n    }\n\n    render() {\n        const link = this.props.permlink;\n        const steemd = 'https://steemd.com' + link;\n        const steemdb = 'https://steemdb.com' + link;\n        const busy = 'https://busy.org' + link;\n        const steemit = 'https://steemit.com' + link;\n        let text =\n            this.state.copied == true\n                ? tt('explorepost_jsx.copied')\n                : tt('explorepost_jsx.copy');\n        return (\n            <span className=\"ExplorePost\">\n                <h4>{tt('g.share_this_post')}</h4>\n                <hr />\n                <div className=\"input-group\">\n                    <input\n                        className=\"input-group-field share-box\"\n                        type=\"text\"\n                        value={steemit}\n                        onChange={e => e.preventDefault()}\n                    />\n                    <CopyToClipboard\n                        text={steemit}\n                        onCopy={this.onCopy}\n                        className=\"ExplorePost__copy-button input-group-label\"\n                    >\n                        <span>{text}</span>\n                    </CopyToClipboard>\n                </div>\n                <h5>{tt('explorepost_jsx.alternative_sources')}</h5>\n                <ul>\n                    <li>\n                        <a\n                            href={steemd}\n                            onClick={this.Steemd}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            steemd.com <Icon name=\"extlink\" />\n                        </a>\n                    </li>\n                    <li>\n                        <a\n                            href={steemdb}\n                            onClick={this.Steemdb}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            steemdb.com <Icon name=\"extlink\" />\n                        </a>\n                    </li>\n                    <li>\n                        <a\n                            href={busy}\n                            onClick={this.Busy}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            busy.org <Icon name=\"extlink\" />\n                        </a>\n                    </li>\n                </ul>\n            </span>\n        );\n    }\n}\n\nexport default connect()(ExplorePost);\n"]}