{"version":3,"sources":["../../../src/app/utils/SanitizeConfig.js"],"names":["iframeWhitelist","re","fn","src","m","match","length","replace","noImageText","allowedTags","trim","split","large","highQualityPost","noImage","sanitizeErrors","allowedAttributes","iframe","div","td","img","a","allowedSchemes","transformTags","tagName","attribs","srcAtty","item","test","frameborder","allowfullscreen","webkitallowfullscreen","mozallowfullscreen","width","height","console","log","push","text","alt","atts","attys","classWhitelist","validClass","find","class","e","title","style","href","rel"],"mappings":"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","file":"SanitizeConfig.js","sourcesContent":["import {\n    getPhishingWarningMessage,\n    getExternalLinkWarningMessage,\n} from 'shared/HtmlReady'; // the only allowable title attributes for div and a tags\n\nconst iframeWhitelist = [\n    {\n        re: /^(https?:)?\\/\\/player.vimeo.com\\/video\\/.*/i,\n        fn: src => {\n            // <iframe src=\"https://player.vimeo.com/video/179213493\" width=\"640\" height=\"360\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n            if (!src) return null;\n            const m = src.match(\n                /https:\\/\\/player\\.vimeo\\.com\\/video\\/([0-9]+)/\n            );\n            if (!m || m.length !== 2) return null;\n            return 'https://player.vimeo.com/video/' + m[1];\n        },\n    },\n    {\n        re: /^(https?:)?\\/\\/www.youtube.com\\/embed\\/.*/i,\n        fn: src => {\n            return src.replace(/\\?.+$/, ''); // strip query string (yt: autoplay=1,controls=0,showinfo=0, etc)\n        },\n    },\n    {\n        re: /^https:\\/\\/w.soundcloud.com\\/player\\/.*/i,\n        fn: src => {\n            if (!src) return null;\n            // <iframe width=\"100%\" height=\"450\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/257659076&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true\"></iframe>\n            const m = src.match(/url=(.+?)&/);\n            if (!m || m.length !== 2) return null;\n            return (\n                'https://w.soundcloud.com/player/?url=' +\n                m[1] +\n                '&auto_play=false&hide_related=false&show_comments=true' +\n                '&show_user=true&show_reposts=false&visual=true'\n            );\n        },\n    },\n    {\n        re: /^(https?:)?\\/\\/player.twitch.tv\\/.*/i,\n        fn: src => {\n            //<iframe src=\"https://player.twitch.tv/?channel=ninja\" frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" height=\"378\" width=\"620\">\n            return src;\n        },\n    },\n];\nexport const noImageText = '(Image not shown due to low ratings)';\nexport const allowedTags = `\n    div, iframe, del,\n    a, p, b, i, q, br, ul, li, ol, img, h1, h2, h3, h4, h5, h6, hr,\n    blockquote, pre, code, em, strong, center, table, thead, tbody, tr, th, td,\n    strike, sup, sub\n`\n    .trim()\n    .split(/,\\s*/);\n\n// Medium insert plugin uses: div, figure, figcaption, iframe\nexport default ({\n    large = true,\n    highQualityPost = true,\n    noImage = false,\n    sanitizeErrors = [],\n}) => ({\n    allowedTags,\n    // figure, figcaption,\n\n    // SEE https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n    allowedAttributes: {\n        // \"src\" MUST pass a whitelist (below)\n        iframe: [\n            'src',\n            'width',\n            'height',\n            'frameborder',\n            'allowfullscreen',\n            'webkitallowfullscreen',\n            'mozallowfullscreen',\n        ],\n\n        // class attribute is strictly whitelisted (below)\n        // and title is only set in the case of a phishing warning\n        div: ['class', 'title'],\n\n        // style is subject to attack, filtering more below\n        td: ['style'],\n        img: ['src', 'alt'],\n\n        // title is only set in the case of an external link warning\n        a: ['href', 'rel', 'title'],\n    },\n    allowedSchemes: ['http', 'https', 'steem'],\n    transformTags: {\n        iframe: (tagName, attribs) => {\n            const srcAtty = attribs.src;\n            for (const item of iframeWhitelist)\n                if (item.re.test(srcAtty)) {\n                    const src =\n                        typeof item.fn === 'function'\n                            ? item.fn(srcAtty, item.re)\n                            : srcAtty;\n                    if (!src) break;\n                    return {\n                        tagName: 'iframe',\n                        attribs: {\n                            frameborder: '0',\n                            allowfullscreen: 'allowfullscreen',\n                            webkitallowfullscreen: 'webkitallowfullscreen', // deprecated but required for vimeo : https://vimeo.com/forums/help/topic:278181\n                            mozallowfullscreen: 'mozallowfullscreen', // deprecated but required for vimeo\n                            src,\n                            width: large ? '640' : '480',\n                            height: large ? '360' : '270',\n                        },\n                    };\n                }\n            console.log(\n                'Blocked, did not match iframe \"src\" white list urls:',\n                tagName,\n                attribs\n            );\n            sanitizeErrors.push('Invalid iframe URL: ' + srcAtty);\n            return { tagName: 'div', text: `(Unsupported ${srcAtty})` };\n        },\n        img: (tagName, attribs) => {\n            if (noImage) return { tagName: 'div', text: noImageText };\n            //See https://github.com/punkave/sanitize-html/issues/117\n            let { src, alt } = attribs;\n            if (!/^(https?:)?\\/\\//i.test(src)) {\n                console.log(\n                    'Blocked, image tag src does not appear to be a url',\n                    tagName,\n                    attribs\n                );\n                sanitizeErrors.push(\n                    'An image in this post did not save properly.'\n                );\n                return { tagName: 'img', attribs: { src: 'brokenimg.jpg' } };\n            }\n\n            // replace http:// with // to force https when needed\n            src = src.replace(/^http:\\/\\//i, '//');\n            let atts = { src };\n            if (alt && alt !== '') atts.alt = alt;\n            return { tagName, attribs: atts };\n        },\n        div: (tagName, attribs) => {\n            const attys = {};\n            const classWhitelist = [\n                'pull-right',\n                'pull-left',\n                'text-justify',\n                'text-rtl',\n                'text-center',\n                'text-right',\n                'videoWrapper',\n                'phishy',\n            ];\n            const validClass = classWhitelist.find(e => attribs.class == e);\n            if (validClass) attys.class = validClass;\n            if (\n                validClass === 'phishy' &&\n                attribs.title === getPhishingWarningMessage()\n            )\n                attys.title = attribs.title;\n            return {\n                tagName,\n                attribs: attys,\n            };\n        },\n        td: (tagName, attribs) => {\n            const attys = {};\n            if (attribs.style === 'text-align:right')\n                attys.style = 'text-align:right';\n            return {\n                tagName,\n                attribs: attys,\n            };\n        },\n        a: (tagName, attribs) => {\n            let { href } = attribs;\n            if (!href) href = '#';\n            href = href.trim();\n            const attys = { href };\n            // If it's not a (relative or absolute) steemit URL...\n            if (!href.match(/^(\\/(?!\\/)|https:\\/\\/steemit.com)/)) {\n                // attys.target = '_blank' // pending iframe impl https://mathiasbynens.github.io/rel-noopener/\n                attys.rel = highQualityPost ? 'noopener' : 'nofollow noopener';\n                attys.title = getExternalLinkWarningMessage();\n            }\n            return {\n                tagName,\n                attribs: attys,\n            };\n        },\n    },\n});\n"]}