{"version":3,"sources":["../../../src/app/utils/FormatDecimal.test.js"],"names":["describe","it","test_cases","forEach","expect","v","join","toBe"],"mappings":";;AAAA;;AAEAA,SAAS,eAAT,EAA0B,YAAM;AAC5BC,OAAG,wBAAH,EAA6B,YAAM;AAC/B,YAAMC,aAAa,CACf,CAAC,KAAD,EAAQ,QAAR,CADe,EAEf,CAAC,GAAD,EAAM,QAAN,CAFe,EAGf,CAAC,KAAD,EAAQ,QAAR,CAHe,EAIf,CAAC,OAAD,EAAU,UAAV,CAJe,EAKf,CAAC,MAAD,EAAS,YAAT,CALe,EAMf,CAAC,eAAD,EAAkB,sBAAlB,CANe,EAOf,CAAC,CAAC,IAAF,EAAQ,WAAR,CAPe,CAAnB;AASAA,mBAAWC,OAAX,CAAmB,aAAK;AACpBC,mBAAO,yCAAcC,EAAE,CAAF,CAAd,EAAoBC,IAApB,CAAyB,EAAzB,CAAP,EAAqCC,IAArC,CAA0CF,EAAE,CAAF,CAA1C;AACH,SAFD;AAGH,KAbD;AAcH,CAfD","file":"FormatDecimal.test.js","sourcesContent":["import { formatDecimal } from './ParsersAndFormatters';\n\ndescribe('formatDecimal', () => {\n    it('should format decimals', () => {\n        const test_cases = [\n            [100.0, '100.00'],\n            [101, '101.00'],\n            ['102', '102.00'],\n            [1000.12, '1,000.12'],\n            [100000, '100,000.00'],\n            [1000000000000.0, '1,000,000,000,000.00'],\n            [-1000, '-1,000.00'],\n        ];\n        test_cases.forEach(v => {\n            expect(formatDecimal(v[0]).join('')).toBe(v[1]);\n        });\n    });\n});\n"]}