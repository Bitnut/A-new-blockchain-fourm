{"version":3,"sources":["../../../src/app/utils/MarketUtils.js"],"names":["roundUp","num","precision","satoshis","parseFloat","Math","pow","ceil","roundDown","floor","createOrderSorter","getValue","columnName","dir","a","b","module","exports"],"mappings":";;AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,SAAtB,EAAiC;AAC7B,QAAIC,WAAWC,WAAWH,GAAX,IAAkBI,KAAKC,GAAL,CAAS,EAAT,EAAaJ,SAAb,CAAjC;;AAEA;AACAC,eAAWA,WAAW,MAAtB;;AAEA;AACA,WAAOE,KAAKE,IAAL,CAAUJ,QAAV,IAAsBE,KAAKC,GAAL,CAAS,EAAT,EAAaJ,SAAb,CAA7B;AACH;;AAED,SAASM,SAAT,CAAmBP,GAAnB,EAAwBC,SAAxB,EAAmC;AAC/B,QAAIC,WAAWC,WAAWH,GAAX,IAAkBI,KAAKC,GAAL,CAAS,EAAT,EAAaJ,SAAb,CAAjC;;AAEA;AACAC,eAAWA,WAAW,MAAtB;;AAEA;AACA,WAAOE,KAAKI,KAAL,CAAWN,QAAX,IAAuBE,KAAKC,GAAL,CAAS,EAAT,EAAaJ,SAAb,CAA9B;AACH;;AAED;;;;;;;AAOA,IAAMQ,oBAAoB,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,UAAX,EAAuBC,GAAvB;AAAA,WAA+B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC/D,YAAIJ,SAASG,EAAEF,UAAF,CAAT,IAA0BD,SAASI,EAAEH,UAAF,CAAT,CAA9B,EAAuD;AACnD,mBAAO,CAAC,CAAD,GAAKC,GAAZ;AACH;;AAED,YAAIF,SAASG,EAAEF,UAAF,CAAT,IAA0BD,SAASI,EAAEH,UAAF,CAAT,CAA9B,EAAuD;AACnD,mBAAO,IAAIC,GAAX;AACH;;AAED,eAAO,CAAP;AACH,KAVyB;AAAA,CAA1B;;AAYAG,OAAOC,OAAP,GAAiB;AACbjB,oBADa;AAEbQ,wBAFa;AAGbE;AAHa,CAAjB","file":"MarketUtils.js","sourcesContent":["function roundUp(num, precision) {\n    let satoshis = parseFloat(num) * Math.pow(10, precision);\n\n    // Attempt to correct floating point: 1.0001 satoshis should not round up.\n    satoshis = satoshis - 0.0001;\n\n    // Round up, restore precision\n    return Math.ceil(satoshis) / Math.pow(10, precision);\n}\n\nfunction roundDown(num, precision) {\n    let satoshis = parseFloat(num) * Math.pow(10, precision);\n\n    // Attempt to correct floating point: 1.9999 satoshis should not round down.\n    satoshis = satoshis + 0.0001;\n\n    // Round down, restore precision\n    return Math.floor(satoshis) / Math.pow(10, precision);\n}\n\n/**\n * Returns a sorting function which uses a given column and value-fetcher.\n *\n * @param {Function} getValue\n * @param {String} columnName\n * @param {Number} dir either 1 or -1\n */\nconst createOrderSorter = (getValue, columnName, dir) => (a, b) => {\n    if (getValue(a[columnName]) < getValue(b[columnName])) {\n        return -1 * dir;\n    }\n\n    if (getValue(a[columnName]) > getValue(b[columnName])) {\n        return 1 * dir;\n    }\n\n    return 0;\n};\n\nmodule.exports = {\n    roundUp,\n    roundDown,\n    createOrderSorter,\n};\n"]}