{"version":3,"sources":["../../../src/app/utils/FrontendLogger.js"],"names":["frontendLogger","formatEventReport","event","window","$STM_csrf","report","location","href","process","env","VERSION","version","trace","error","stack","message"],"mappings":";;;;;;;;;;kBAWwBA,c;QAoBRC,iB,GAAAA,iB;;AA/BhB;;;;AAEA;;;;;;;;;AASe,SAASD,cAAT,CAAwBE,KAAxB,EAA+B;AAC1C,QAAIC,OAAOC,SAAX,EAAsB;AAClB,YAAMC,SAASJ,kBACXC,KADW,EAEXC,OAAOG,QAAP,CAAgBC,IAFL,EAGXC,QAAQC,GAAR,CAAYC,OAHD,CAAf;AAKA,mDAAqB,cAArB,EAAqCL,MAArC;AACH;AACJ;;AAED;;;;;;;;;AASO,SAASJ,iBAAT,CAA2BC,KAA3B,EAAkCK,IAAlC,EAAwCI,OAAxC,EAAiD;AACpD,QAAMC,QACF,sBAAOV,MAAMW,KAAb,MAAuB,QAAvB,IACAX,MAAMW,KAAN,KAAgB,IADhB,IAEA,OAAOX,MAAMW,KAAN,CAAYC,KAAnB,KAA6B,QAF7B,GAGMZ,MAAMW,KAAN,CAAYC,KAHlB,GAIM,KALV;AAMA,WAAO;AACHF,oBADG;AAEHG,iBAASb,MAAMa,OAFZ;AAGHR,kBAHG;AAIHI;AAJG,KAAP;AAMH","file":"FrontendLogger.js","sourcesContent":["import { serverApiRecordEvent } from 'app/utils/ServerApiClient';\n\n/**\n * Handles window error events by logging to overseer.\n *\n * This function relies on these globals:\n * - process.env.VERSION\n * - window.location.href\n *\n * @param {ErrorEvent} event\n */\nexport default function frontendLogger(event) {\n    if (window.$STM_csrf) {\n        const report = formatEventReport(\n            event,\n            window.location.href,\n            process.env.VERSION\n        );\n        serverApiRecordEvent('client_error', report);\n    }\n}\n\n/**\n * Format a browser error event report\n *\n * @param {ErrorEvent} event\n * @param {string} href\n * @param {string} version\n *\n * @return {object}\n */\nexport function formatEventReport(event, href, version) {\n    const trace =\n        typeof event.error === 'object' &&\n        event.error !== null &&\n        typeof event.error.stack === 'string'\n            ? event.error.stack\n            : false;\n    return {\n        trace,\n        message: event.message,\n        href,\n        version,\n    };\n}\n"]}