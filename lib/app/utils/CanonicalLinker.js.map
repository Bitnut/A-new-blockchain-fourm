{"version":3,"sources":["../../../src/app/utils/CanonicalLinker.js"],"names":["makeCanonicalLink","d","canonicalUrl","link","json_metadata","app","hasAppTemplateData","category","split","length","hasAppData","Apps","url_scheme","join","author","permlink"],"mappings":";;;;;QAEgBA,iB,GAAAA,iB;;AAFhB;;;;;;AAEO,SAASA,iBAAT,CAA2BC,CAA3B,EAA8B;AACjC,QAAIC,eAAe,wBAAwBD,EAAEE,IAA7C;AACA,QACIF,EAAEG,aAAF,IACAH,EAAEG,aAAF,CAAgBC,GADhB,IAEA,OAAOJ,EAAEG,aAAF,CAAgBC,GAAvB,KAA+B,QAHnC,EAIE;AACE,eAAOH,YAAP;AACH;AACD,QAAMI,qBACFL,EAAEG,aAAF,IACAH,EAAEG,aAAF,CAAgBC,GADhB,IAEAJ,EAAEM,QAFF,IAGAN,EAAEG,aAAF,CAAgBC,GAAhB,CAAoBG,KAApB,CAA0B,GAA1B,EAA+BC,MAA/B,KAA0C,CAJ9C;AAKA,QAAIH,kBAAJ,EAAwB;AACpB,YAAMD,MAAMJ,EAAEG,aAAF,CAAgBC,GAAhB,CAAoBG,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAZ;AACA,YAAME,aAAaC,eAAKN,GAAL,KAAaM,eAAKN,GAAL,EAAUO,UAA1C;AACA,YAAIF,UAAJ,EAAgB;AACZR,2BAAeS,eAAKN,GAAL,EAAUO,UAAV,CACVJ,KADU,CACJ,YADI,EAEVK,IAFU,CAELZ,EAAEM,QAFG,EAGVC,KAHU,CAGJ,YAHI,EAIVK,IAJU,CAILZ,EAAEa,MAJG,EAKVN,KALU,CAKJ,YALI,EAMVK,IANU,CAMLZ,EAAEc,QANG,CAAf;AAOH;AACJ;AACD,WAAOb,YAAP;AACH","file":"CanonicalLinker.js","sourcesContent":["import Apps from 'steemscript/apps.json';\n\nexport function makeCanonicalLink(d) {\n    var canonicalUrl = 'https://steemit.com' + d.link;\n    if (\n        d.json_metadata &&\n        d.json_metadata.app &&\n        typeof d.json_metadata.app !== 'string'\n    ) {\n        return canonicalUrl;\n    }\n    const hasAppTemplateData =\n        d.json_metadata &&\n        d.json_metadata.app &&\n        d.category &&\n        d.json_metadata.app.split('/').length === 2;\n    if (hasAppTemplateData) {\n        const app = d.json_metadata.app.split('/')[0];\n        const hasAppData = Apps[app] && Apps[app].url_scheme;\n        if (hasAppData) {\n            canonicalUrl = Apps[app].url_scheme\n                .split('{category}')\n                .join(d.category)\n                .split('{username}')\n                .join(d.author)\n                .split('{permlink}')\n                .join(d.permlink);\n        }\n    }\n    return canonicalUrl;\n}\n"]}