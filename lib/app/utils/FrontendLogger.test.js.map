{"version":3,"sources":["../../../src/app/utils/FrontendLogger.test.js"],"names":["describe","it","modernErrorEvent","error","stack","message","logged","expect","trace","toEqual","version","href","lameErrorEvent"],"mappings":";;AAAA;;AAEAA,SAAS,mBAAT,EAA8B,YAAM;AAChCC,OAAG,8DAAH,EAAmE,YAAM;AACrE,YAAMC,mBAAmB;AACrBC,mBAAO;AACHC,uBAAO;AADJ,aADc;AAIrBC,qBAAS;AAJY,SAAzB;;AAOA,YAAMC,SAAS,uCACXJ,gBADW,EAEX,UAFW,EAGX,SAHW,CAAf;;AAMAK,eAAOD,OAAOE,KAAd,EAAqBC,OAArB,CAA6B,mBAA7B;AACAF,eAAOD,OAAOD,OAAd,EAAuBI,OAAvB,CAA+B,gBAA/B;AACAF,eAAOD,OAAOI,OAAd,EAAuBD,OAAvB,CAA+B,SAA/B;AACAF,eAAOD,OAAOK,IAAd,EAAoBF,OAApB,CAA4B,UAA5B;AACH,KAlBD;AAmBAR,OAAG,sEAAH,EAA2E,YAAM;AAC7E,YAAMW,iBAAiB;AACnBP,qBAAS;AADU,SAAvB;;AAIA,YAAMC,SAAS,uCAAkBM,cAAlB,EAAkC,UAAlC,EAA8C,SAA9C,CAAf;;AAEAL,eAAOD,OAAOE,KAAd,EAAqBC,OAArB,CAA6B,KAA7B;AACAF,eAAOD,OAAOD,OAAd,EAAuBI,OAAvB,CAA+B,mBAA/B;AACAF,eAAOD,OAAOI,OAAd,EAAuBD,OAAvB,CAA+B,SAA/B;AACAF,eAAOD,OAAOK,IAAd,EAAoBF,OAApB,CAA4B,UAA5B;AACH,KAXD;AAYH,CAhCD","file":"FrontendLogger.test.js","sourcesContent":["import { formatEventReport } from './FrontendLogger';\n\ndescribe('formatEventReport', () => {\n    it('should handle modern firefox/chrome errors with a stacktrace', () => {\n        const modernErrorEvent = {\n            error: {\n                stack: 'i am a stacktrace',\n            },\n            message: 'i am a message',\n        };\n\n        const logged = formatEventReport(\n            modernErrorEvent,\n            'location',\n            'version'\n        );\n\n        expect(logged.trace).toEqual('i am a stacktrace');\n        expect(logged.message).toEqual('i am a message');\n        expect(logged.version).toEqual('version');\n        expect(logged.href).toEqual('location');\n    });\n    it('should handle errors from browsers that do not provide a stack trace', () => {\n        const lameErrorEvent = {\n            message: 'i am an old error',\n        };\n\n        const logged = formatEventReport(lameErrorEvent, 'location', 'version');\n\n        expect(logged.trace).toEqual(false);\n        expect(logged.message).toEqual('i am an old error');\n        expect(logged.version).toEqual('version');\n        expect(logged.href).toEqual('location');\n    });\n});\n"]}