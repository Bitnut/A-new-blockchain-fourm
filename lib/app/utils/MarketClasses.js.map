{"version":3,"sources":["../../../src/app/utils/MarketClasses.js"],"names":["precision","Order","order","side","price","parseFloat","real_price","Math","max","stringPrice","toFixed","steem","parseInt","sbd","date","created","getSteemAmount","getSBDAmount","type","getStringSBD","getStringSteem","getStringPrice","TradeHistory","fill","zdate","test","Date","current_pays","indexOf","DEBT_TICKER","color","split","open_pays","LIQUID_TICKER","module","exports"],"mappings":"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","file":"MarketClasses.js","sourcesContent":["import { roundDown, roundUp } from './MarketUtils';\nimport { LIQUID_TICKER, DEBT_TICKER } from 'app/client_config';\nconst precision = 1000;\n\nclass Order {\n    constructor(order, side) {\n        this.side = side;\n        this.price = parseFloat(order.real_price);\n        this.price =\n            side === 'asks'\n                ? roundUp(this.price, 6)\n                : Math.max(roundDown(this.price, 6), 0.000001);\n        this.stringPrice = this.price.toFixed(6);\n        this.steem = parseInt(order.steem, 10);\n        this.sbd = parseInt(order.sbd, 10);\n        this.date = order.created;\n    }\n\n    getSteemAmount() {\n        return this.steem / precision;\n    }\n\n    getStringSteem() {\n        return this.getSteemAmount().toFixed(3);\n    }\n\n    getPrice() {\n        return this.price;\n    }\n\n    getStringPrice() {\n        return this.stringPrice;\n    }\n\n    getStringSBD() {\n        return this.getSBDAmount().toFixed(3);\n    }\n\n    getSBDAmount() {\n        return this.sbd / precision;\n    }\n\n    add(order) {\n        return new Order(\n            {\n                real_price: this.price,\n                steem: this.steem + order.steem,\n                sbd: this.sbd + order.sbd,\n                date: this.date,\n            },\n            this.type\n        );\n    }\n\n    equals(order) {\n        return (\n            this.getStringSBD() === order.getStringSBD() &&\n            this.getStringSteem() === order.getStringSteem() &&\n            this.getStringPrice() === order.getStringPrice()\n        );\n    }\n}\n\nclass TradeHistory {\n    constructor(fill) {\n        // Norm date (FF bug)\n        var zdate = fill.date;\n        if (!/Z$/.test(zdate)) zdate = zdate + 'Z';\n\n        this.date = new Date(zdate);\n        this.type =\n            fill.current_pays.indexOf(DEBT_TICKER) !== -1 ? 'bid' : 'ask';\n        this.color = this.type == 'bid' ? 'buy-color' : 'sell-color';\n        if (this.type === 'bid') {\n            this.sbd = parseFloat(\n                fill.current_pays.split(' ' + DEBT_TICKER)[0]\n            );\n            this.steem = parseFloat(\n                fill.open_pays.split(' ' + LIQUID_TICKER)[0]\n            );\n        } else {\n            this.sbd = parseFloat(fill.open_pays.split(' ' + DEBT_TICKER)[0]);\n            this.steem = parseFloat(\n                fill.current_pays.split(' ' + LIQUID_TICKER)[0]\n            );\n        }\n\n        this.price = this.sbd / this.steem;\n        this.price =\n            this.type === 'ask'\n                ? roundUp(this.price, 6)\n                : Math.max(roundDown(this.price, 6), 0.000001);\n        this.stringPrice = this.price.toFixed(6);\n    }\n\n    getSteemAmount() {\n        return this.steem;\n    }\n\n    getStringSteem() {\n        return this.getSteemAmount().toFixed(3);\n    }\n\n    getSBDAmount() {\n        return this.sbd;\n    }\n\n    getStringSBD() {\n        return this.getSBDAmount().toFixed(3);\n    }\n\n    getPrice() {\n        return this.price;\n    }\n\n    getStringPrice() {\n        return this.stringPrice;\n    }\n\n    equals(order) {\n        return (\n            this.getStringSBD() === order.getStringSBD() &&\n            this.getStringSteem() === order.getStringSteem() &&\n            this.getStringPrice() === order.getStringPrice()\n        );\n    }\n}\n\nmodule.exports = {\n    Order,\n    TradeHistory,\n};\n"]}