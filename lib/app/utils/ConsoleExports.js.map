{"version":3,"sources":["../../../src/app/utils/ConsoleExports.js"],"names":["module","exports","PrivateKey","PublicKey","Aes","key_utils","perf","Perf","require","perfStarted","stop","lm","getLastMeasurements","printInclusive","printExclusive","printWasted","start","resolve","object","atty","then","console","log","reject","result","window","catch","error","init","context","obj"],"mappings":";;;;;;AAAA;;;;AAOA;AACA;AACA;;AAEAA,OAAOC,OAAP,GAAiB;AACbC,+BADa;AAEbC,6BAFa;AAGbC,iBAHa;AAIbC,6BAJa;;AAMb;AACA;AACAC,UAAM,gBAAM;AACR,YAAMC,OAAOC,QAAQ,mBAAR,CAAb;AACA,YAAIC,WAAJ,EAAiB;AACbF,iBAAKG,IAAL;AACA,gBAAMC,KAAKJ,KAAKK,mBAAL,EAAX;AACAL,iBAAKM,cAAL,CAAoBF,EAApB;AACAJ,iBAAKO,cAAL,CAAoBH,EAApB;AACAJ,iBAAKQ,WAAL,CAAiBJ,EAAjB;AACAF,0BAAc,KAAd;AACH,SAPD,MAOO;AACHF,iBAAKS,KAAL;AACAP,0BAAc,IAAd;AACH;AACD,eAAOF,IAAP;AACH,KAtBY;;AAwBbU,aAAS,iBAACC,MAAD,EAAwB;AAAA,YAAfC,IAAe,uEAAR,GAAQ;;AAC7B,YAAI,CAACD,OAAOE,IAAZ,EAAkB;AACdC,oBAAQC,GAAR,CAAYJ,MAAZ;AACA,mBAAOA,MAAP;AACH;AACD,eAAO,sBAAY,UAACD,OAAD,EAAUM,MAAV,EAAqB;AACpCL,mBACKE,IADL,CACU,kBAAU;AACZC,wBAAQC,GAAR,CAAYE,MAAZ;AACAP,wBAAQO,MAAR;AACAC,uBAAON,IAAP,IAAeK,MAAf;AACH,aALL,EAMKE,KANL,CAMW,iBAAS;AACZL,wBAAQM,KAAR,CAAcA,KAAd;AACAJ,uBAAOI,KAAP;AACAF,uBAAON,IAAP,IAAeQ,KAAf;AACH,aAVL;AAWH,SAZM,CAAP;AAaH,KA1CY;;AA4CbC,UAAM,uBAAW;AACb,YAAI,CAACC,OAAL,EAAc;AACd,aAAK,IAAMC,GAAX,IAAkB9B,OAAOC,OAAzB,EAAkC;AAC9B,gBAAI6B,QAAQ,MAAZ,EAAoB;AACpBD,oBAAQC,GAAR,IAAe9B,OAAOC,OAAP,CAAe6B,GAAf,CAAf;AACH;AACJ;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5Da,CAAjB;;AA+DA,IAAIrB,cAAc,KAAlB","file":"ConsoleExports.js","sourcesContent":["import {\n    PrivateKey,\n    PublicKey,\n    Aes,\n    key_utils,\n} from '@steemit/steem-js/lib/auth/ecc';\n\n// import secureRandom from 'secure-random'\n// import links from 'app/utils/Links'\n// import assert from 'assert'\n\nmodule.exports = {\n    PrivateKey,\n    PublicKey,\n    Aes,\n    key_utils,\n\n    // Run once to start, then again to stop and print a report\n    // https://facebook.github.io/react/docs/perf.html\n    perf: () => {\n        const Perf = require('react-addons-perf');\n        if (perfStarted) {\n            Perf.stop();\n            const lm = Perf.getLastMeasurements();\n            Perf.printInclusive(lm);\n            Perf.printExclusive(lm);\n            Perf.printWasted(lm);\n            perfStarted = false;\n        } else {\n            Perf.start();\n            perfStarted = true;\n        }\n        return Perf;\n    },\n\n    resolve: (object, atty = '_') => {\n        if (!object.then) {\n            console.log(object);\n            return object;\n        }\n        return new Promise((resolve, reject) => {\n            object\n                .then(result => {\n                    console.log(result);\n                    resolve(result);\n                    window[atty] = result;\n                })\n                .catch(error => {\n                    console.error(error);\n                    reject(error);\n                    window[atty] = error;\n                });\n        });\n    },\n\n    init: context => {\n        if (!context) return;\n        for (const obj in module.exports) {\n            if (obj === 'init') continue;\n            context[obj] = module.exports[obj];\n        }\n    },\n\n    // retest: () => {\n    //     const largeData = secureRandom.randomBuffer(1024 * 10).toString('hex')\n    //     const all = links.any()\n    //     for (let i = 0; i < 10000; i++) {\n    //         const match = (largeData + 'https://example.com').match(all)\n    //         assert(match, 'no match')\n    //         assert(match[0] === 'https://example.com', 'no match')\n    //     }\n    // },\n};\n\nlet perfStarted = false;\n"]}