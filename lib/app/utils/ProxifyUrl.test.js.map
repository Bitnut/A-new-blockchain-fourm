{"version":3,"sources":["../../../src/app/utils/ProxifyUrl.test.js"],"names":["describe","beforeAll","global","$STM_Config","img_proxy_prefix","it","testCase","inputUrl","outputDims","expectedUrl","outputUrl","assert","equal"],"mappings":";;AACA;;;;AACA;;;;;;AAFA;AAIAA,SAAS,YAAT,EAAuB,YAAM;AACzBC,cAAU,YAAM;AACZC,eAAOC,WAAP,GAAqB,EAAEC,kBAAkB,4BAApB,EAArB;AACH,KAFD;AAGAC,OAAG,WAAH,EAAgB,YAAM;AAClBC,iBACI,6BADJ,EAEI,SAFJ,EAGI,+DAHJ;AAKAA,iBACI,6BADJ,EAEI,KAFJ,EAGI,6DAHJ;AAKAA,iBACI,6BADJ,EAEI,IAFJ,EAGI,6DAHJ;AAKAA,iBACI,6BADJ,EAEI,KAFJ,EAGI,6BAHJ;AAKH,KArBD;AAsBAD,OAAG,0BAAH,EAA+B,YAAM;AACjCC,iBACI,0GADJ,EAEI,SAFJ,EAGI,4IAHJ;AAKAA,iBACI,0GADJ,EAEI,KAFJ,EAGI,0GAHJ;AAKH,KAXD;AAYAD,OAAG,4BAAH,EAAiC,YAAM;AACnCC,iBACI,wIADJ,EAEI,SAFJ,EAGI,4IAHJ;AAKAA,iBACI,4IADJ,EAEI,KAFJ,EAGI,0GAHJ;AAKH,KAXD;AAYAD,OAAG,aAAH,EAAkB,YAAM;AACpBC,iBACI,2DADJ,EAEI,SAFJ,EAGI,+DAHJ;AAKAA,iBACI,iHADJ,EAEI,SAFJ,EAGI,iHAHJ;AAKAA,iBACI,2DADJ,EAEI,KAFJ,EAGI,6BAHJ;AAKH,KAhBD;AAiBAD,OAAG,oBAAH,EAAyB,YAAM;AAC3BC,iBACI,yFADJ,EAEI,SAFJ,EAGI,+DAHJ;AAKAA,iBACI,0KADJ,EAEI,KAFJ,EAGI,0GAHJ;AAKH,KAXD;AAYAD,OAAG,0CAAH,EAA+C,YAAM;AACjD;AACAC,iBACI,kEADJ,EAEI,IAFJ,EAGI,+DAHJ;AAKAA,iBACI,oEADJ,EAEI,IAFJ,EAGI,iEAHJ;AAKH,KAZD;AAaAD,OAAG,0CAAH,EAA+C,YAAM;AACjD;AACA;AACAC,iBACI,6FADJ,EAEI,IAFJ,EAGI,+DAHJ;AAKAA,iBACI,kGADJ,EAEI,IAFJ,EAGI,iEAHJ;AAKA;AACAA,iBACI,+KADJ,EAEI,IAFJ,EAGI,8IAHJ;AAKH,KAnBD;AAoBAD,OAAG,mEAAH,EAAwE,YAAM;AAC1E;AACA;AACAC,iBACI,wIADJ,EAEI,IAFJ,EAGI,0GAHJ;AAKA;AACAA,iBACI,2DADJ,EAEI,IAFJ,EAGI,6DAHJ;AAKA;AACAA,iBACI,0KADJ,EAEI,IAFJ,EAGI,0GAHJ;AAKA;AACAA,iBACI,6FADJ,EAEI,IAFJ,EAGI,6DAHJ;AAKH,KA1BD;AA2BH,CA3ID;;AA6IA,IAAMA,WAAW,SAAXA,QAAW,CAACC,QAAD,EAAWC,UAAX,EAAuBC,WAAvB,EAAuC;AACpD,QAAMC,YAAY,0BAAgBH,QAAhB,EAA0BC,UAA1B,CAAlB;AACAG,qBAAOC,KAAP,CACIF,SADJ,EAEID,WAFJ,QAGQF,QAHR,UAGqBC,UAHrB,wBAIQC,WAJR,qBAKoBC,SALpB;AAOH,CATD","file":"ProxifyUrl.test.js","sourcesContent":["/*global describe, global, before:false, it*/\nimport assert from 'assert';\nimport proxifyImageUrl from './ProxifyUrl';\n\ndescribe('ProxifyUrl', () => {\n    beforeAll(() => {\n        global.$STM_Config = { img_proxy_prefix: 'https://steemitimages.com/' };\n    });\n    it('naked URL', () => {\n        testCase(\n            'https://example.com/img.png',\n            '100x200',\n            'https://steemitimages.com/100x200/https://example.com/img.png'\n        );\n        testCase(\n            'https://example.com/img.png',\n            '0x0',\n            'https://steemitimages.com/640x0/https://example.com/img.png'\n        );\n        testCase(\n            'https://example.com/img.png',\n            true,\n            'https://steemitimages.com/640x0/https://example.com/img.png'\n        );\n        testCase(\n            'https://example.com/img.png',\n            false,\n            'https://example.com/img.png'\n        );\n    });\n    it('naked steemit hosted URL', () => {\n        testCase(\n            'https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            '256x512',\n            'https://steemitimages.com/256x512/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n        testCase(\n            'https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            false,\n            'https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n    });\n    it('proxied steemit hosted URL', () => {\n        testCase(\n            'https://steemitimages.com/0x0/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            '256x512',\n            'https://steemitimages.com/256x512/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n        testCase(\n            'https://steemitimages.com/256x512/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            false,\n            'https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n    });\n    it('proxied URL', () => {\n        testCase(\n            'https://steemitimages.com/0x0/https://example.com/img.png',\n            '100x200',\n            'https://steemitimages.com/100x200/https://example.com/img.png'\n        );\n        testCase(\n            'https://steemitimages.com/256x512/https://peopledotcom.files.wordpress.com/2017/09/grumpy-harvey-cat.jpg?w=2000',\n            '100x200',\n            'https://steemitimages.com/100x200/https://peopledotcom.files.wordpress.com/2017/09/grumpy-harvey-cat.jpg?w=2000'\n        );\n        testCase(\n            'https://steemitimages.com/0x0/https://example.com/img.png',\n            false,\n            'https://example.com/img.png'\n        );\n    });\n    it('double-proxied URL', () => {\n        testCase(\n            'https://steemitimages.com/0x0/https://steemitimages.com/0x0/https://example.com/img.png',\n            '100x200',\n            'https://steemitimages.com/100x200/https://example.com/img.png'\n        );\n        testCase(\n            'https://steemitimages.com/0x0/https://steemitimages.com/256x512/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            false,\n            'https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n    });\n    it('preserve dimensions - single-proxied URL', () => {\n        //simple preservation\n        testCase(\n            'https://steemitdevimages.com/100x200/https://example.com/img.png',\n            true,\n            'https://steemitimages.com/100x200/https://example.com/img.png'\n        );\n        testCase(\n            'https://steemitdevimages.com/1001x2001/https://example.com/img.png',\n            true,\n            'https://steemitimages.com/1001x2001/https://example.com/img.png'\n        );\n    });\n    it('preserve dimensions - double-proxied URL', () => {\n        //simple preservation at a 2 nesting level\n        //foreign domain\n        testCase(\n            'https://steemitimages.com/100x200/https://steemitimages.com/0x0/https://example.com/img.png',\n            true,\n            'https://steemitimages.com/100x200/https://example.com/img.png'\n        );\n        testCase(\n            'https://steemitdevimages.com/1001x2001/https://steemitimages.com/0x0/https://example.com/img.png',\n            true,\n            'https://steemitimages.com/1001x2001/https://example.com/img.png'\n        );\n        //steemit domain\n        testCase(\n            'https://steemitdevimages.com/1001x2001/https://steemitimages.com/0x0/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            true,\n            'https://steemitimages.com/1001x2001/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n    });\n    it('preserve dimensions - strip proxies & dimensions when appropriate', () => {\n        //simple preservation at a 2 nesting level\n        //steemit domain\n        testCase(\n            'https://steemitimages.com/0x0/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            true,\n            'https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n        //foreign domain\n        testCase(\n            'https://steemitimages.com/0x0/https://example.com/img.png',\n            true,\n            'https://steemitimages.com/640x0/https://example.com/img.png'\n        );\n        //case where last is natural sizing, assumes natural sizing - straight to direct steemit file url\n        testCase(\n            'https://steemitimages.com/0x0/https://steemitimages.com/100x100/https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg',\n            true,\n            'https://steemitimages.com/DQmaJe2Tt5kmVUaFhse1KTEr4N1g9piMgD3YjPEQhkZi3HR/30day-positivity-challenge.jpg'\n        );\n        //case where last is natural sizing, assumes natural sizing - straight to direct steemit /0x0/ domain host url\n        testCase(\n            'https://steemitimages.com/0x0/https://steemitimages.com/100x100/https://example.com/img.png',\n            true,\n            'https://steemitimages.com/640x0/https://example.com/img.png'\n        );\n    });\n});\n\nconst testCase = (inputUrl, outputDims, expectedUrl) => {\n    const outputUrl = proxifyImageUrl(inputUrl, outputDims);\n    assert.equal(\n        outputUrl,\n        expectedUrl,\n        `(${inputUrl}, ${outputDims}) should return ${\n            expectedUrl\n        }. output was ${outputUrl}`\n    );\n};\n"]}