{"version":3,"sources":["../../src/app/Main.js"],"names":["steem","window","addEventListener","frontendLogger","CMD_LOG_T","CMD_LOG_TOGGLE","CMD_LOG_O","process","env","NODE_ENV","ConsoleExports","init","e","console","error","runApp","initial_state","log","undefined","location","search","match","history","replaceState","pathname","konami","code","enabled","buff","split","cmd","command","api","setOptions","logger","enableKonami","s","call","document","body","onkeypress","shift","push","key","join","hash","indexOf","config","offchain","url","steemd_connection_client","retry","useAppbaseApi","steemd_use_appbase","set","address_prefix","chain_id","$STM_Config","serverBusy","$STM_ServerBusy","csrf","$STM_csrf","app","viewMode","locale","store","get","user","maybeLoggedIn","username","Buffer","toString","current","Intl","require","ensure","IntlPolyfill","Iso","bootstrap"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;IAAYA,K;;AACZ;;AACA;;;;;;;;AAEA;;;;AAIAC,OAAOC,gBAAP,CAAwB,OAAxB,EAAiCC,wBAAjC;;AAEA,IAAMC,YAAY,OAAlB;AACA,IAAMC,iBAAiB,YAAvB;AACA,IAAMC,YAAY,QAAlB;;AAEA,IAAI;AACA,QAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAAI;AAC5C;AACAC,iCAAeC,IAAf,CAAoBV,MAApB;AACH;AACJ,CALD,CAKE,OAAOW,CAAP,EAAU;AACRC,YAAQC,KAAR,CAAcF,CAAd;AACH;;AAED,SAASG,MAAT,CAAgBC,aAAhB,EAA+B;AAAA;;AAC3BH,YAAQI,GAAR,CAAY,eAAZ,EAA6BD,aAA7B;;AAEA;AACA,QACI,QAAOf,MAAP,uDAAOA,MAAP,OAAkBiB,SAAlB,IACAjB,OAAOkB,QAAP,CAAgBC,MAAhB,CAAuBC,KAAvB,CAA6B,kBAA7B,CAFJ,EAGE;AACER,gBAAQI,GAAR,CAAY,iCAAZ;AACAhB,eAAOqB,OAAP,CAAeC,YAAf,CAA4B,MAA5B,EAAoC,MAApC,EAA4CtB,OAAOkB,QAAP,CAAgBK,QAA5D;AACH;;AAED,QAAMC,SAAS;AACXC,cAAM,OADK;AAEXC,iBAAS;AAFE,KAAf;AAIA,QAAMC,OAAOH,OAAOC,IAAP,CAAYG,KAAZ,CAAkB,EAAlB,CAAb;AACA,QAAMC,MAAM,SAANA,GAAM,UAAW;AACnBjB,gBAAQI,GAAR,CAAY,iBAAiBc,OAA7B;AACA,gBAAQA,OAAR;AACI,iBAAKzB,SAAL;AACImB,uBAAOE,OAAP,GAAiB,KAAjB;AACJ,iBAAKtB,cAAL;AACA,iBAAKD,SAAL;AACIqB,uBAAOE,OAAP,GAAiB,CAACF,OAAOE,OAAzB;AACA,oBAAIF,OAAOE,OAAX,EAAoB;AAChB3B,0BAAMgC,GAAN,CAAUC,UAAV,CAAqB,EAAEC,QAAQrB,OAAV,EAArB;AACH,iBAFD,MAEO;AACHb,0BAAMgC,GAAN,CAAUC,UAAV,CAAqB,EAAEC,QAAQ,KAAV,EAArB;AACH;AACD,uBAAO,iBAAiBT,OAAOE,OAA/B;AACJ;AACI,uBAAO,gCAAP;AAbR;AAeA;AACH,KAlBD;;AAoBA,QAAMQ,eAAe,SAAfA,YAAe,GAAM;AACvB,YAAI,CAAClC,OAAOmC,CAAZ,EAAe;AACXvB,oBAAQI,GAAR,CAAY,0BAAZ;AACAhB,mBAAOmC,CAAP,GAAW,mBAAW;AAClB,uBAAON,IAAIO,IAAJ,CAAS,KAAT,EAAeN,OAAf,CAAP;AACH,aAFD;AAGH;AACJ,KAPD;;AASA9B,WAAOqC,QAAP,CAAgBC,IAAhB,CAAqBC,UAArB,GAAkC,aAAK;AACnCZ,aAAKa,KAAL;AACAb,aAAKc,IAAL,CAAU9B,EAAE+B,GAAZ;AACA,YAAIf,KAAKgB,IAAL,CAAU,EAAV,MAAkBnB,OAAOC,IAA7B,EAAmC;AAC/BS;AACAL,gBAAI1B,SAAJ;AACH;AACJ,KAPD;;AASA,QAAIH,OAAOkB,QAAP,CAAgB0B,IAAhB,CAAqBC,OAArB,CAA6B,MAAMrB,OAAOC,IAA1C,MAAoD,CAAxD,EAA2D;AACvDS;AACAL,YAAIxB,SAAJ;AACH;;AAED,QAAMyC,SAAS/B,cAAcgC,QAAd,CAAuBD,MAAtC;AACA/C,UAAMgC,GAAN,CAAUC,UAAV,CAAqB;AACjBgB,aAAKF,OAAOG,wBADK;AAEjBC,eAAO,IAFU;AAGjBC,uBAAe,CAAC,CAACL,OAAOM;AAHP,KAArB;AAKArD,UAAM+C,MAAN,CAAaO,GAAb,CAAiB,gBAAjB,EAAmCP,OAAOQ,cAA1C;AACAvD,UAAM+C,MAAN,CAAaO,GAAb,CAAiB,UAAjB,EAA6BP,OAAOS,QAApC;AACAvD,WAAOwD,WAAP,GAAqBV,MAArB;AACA,6BAAQA,MAAR;AACA,QAAI/B,cAAcgC,QAAd,CAAuBU,UAA3B,EAAuC;AACnCzD,eAAO0D,eAAP,GAAyB,IAAzB;AACH;AACD,QAAI3C,cAAcgC,QAAd,CAAuBY,IAA3B,EAAiC;AAC7B3D,eAAO4D,SAAP,GAAmB7C,cAAcgC,QAAd,CAAuBY,IAA1C;AACA,eAAO5C,cAAcgC,QAAd,CAAuBY,IAA9B;AACH;;AAED5C,kBAAc8C,GAAd,CAAkBC,QAAlB,GAA6B,8BAAkB9D,OAAOkB,QAAP,CAAgBC,MAAlC,CAA7B;;AAEA,QAAM4C,SAASC,gBAAMC,GAAN,CAAU,UAAV,CAAf;AACA,QAAIF,MAAJ,EAAYhD,cAAcmD,IAAd,CAAmBH,MAAnB,GAA4BA,MAA5B;AACZhD,kBAAcmD,IAAd,CAAmBC,aAAnB,GAAmC,CAAC,CAACH,gBAAMC,GAAN,CAAU,WAAV,CAArC;AACA,QAAIlD,cAAcmD,IAAd,CAAmBC,aAAvB,EAAsC;AAClC,YAAMC,WAAW,IAAIC,MAAJ,CAAWL,gBAAMC,GAAN,CAAU,WAAV,CAAX,EAAmC,KAAnC,EACZK,QADY,GAEZ1C,KAFY,CAEN,IAFM,EAEA,CAFA,CAAjB;AAGAb,sBAAcmD,IAAd,CAAmBK,OAAnB,GAA6B;AACzBH;AADyB,SAA7B;AAGH;;AAED,QAAMlD,gBAAclB,OAAOkB,QAAP,CAAgBK,QAA9B,GAAyCvB,OAAOkB,QAAP,CAAgBC,MAAzD,GACFnB,OAAOkB,QAAP,CAAgB0B,IADpB;;AAIA,QAAI;AACA,2CAAa7B,aAAb;AACH,KAFD,CAEE,OAAOF,KAAP,EAAc;AACZD,gBAAQC,KAAR,CAAcA,KAAd;AACA,mDAAqB,cAArB,EAAqCA,KAArC;AACH;AACJ;;AAED,IAAI,CAACb,OAAOwE,IAAZ,EAAkB;AAAM;AACpBC,YAAQC,MAAR,CACI,CAAC,gBAAD,CADJ,EAEI,mBAAW;AACP1E,eAAO2E,YAAP,GAAsB3E,OAAOwE,IAAP,GAAcC,QAAQ,gBAAR,CAApC;AACAA,gBAAQ,iCAAR;AACAA,gBAAQ,8BAAR;AACAA,gBAAQ,8BAAR;AACAA,gBAAQ,8BAAR;AACAA,gBAAQ,8BAAR;AACAA,gBAAQ,8BAAR;AACAA,gBAAQ,8BAAR;AACAG,sBAAIC,SAAJ,CAAc/D,MAAd;AACH,KAZL,EAaI,YAbJ;AAeH,CAhBD,MAgBO;AACH8D,kBAAIC,SAAJ,CAAc/D,MAAd;AACH","file":"Main.js","sourcesContent":["import 'babel-core/register';\nimport 'babel-polyfill';\nimport 'whatwg-fetch';\nimport store from 'store';\nimport { VIEW_MODE_WHISTLE, PARAM_VIEW_MODE } from 'shared/constants';\nimport './assets/stylesheets/app.scss';\nimport plugins from 'app/utils/JsPlugins';\nimport Iso from 'iso';\nimport { clientRender } from 'shared/UniversalRender';\nimport ConsoleExports from './utils/ConsoleExports';\nimport { serverApiRecordEvent } from 'app/utils/ServerApiClient';\nimport * as steem from '@steemit/steem-js';\nimport { determineViewMode } from 'app/utils/Links';\nimport frontendLogger from 'app/utils/FrontendLogger';\n\n/* \n* TODO: for 2/4 todo！\n*/\n\nwindow.addEventListener('error', frontendLogger);\n\nconst CMD_LOG_T = 'log-t';\nconst CMD_LOG_TOGGLE = 'log-toggle';\nconst CMD_LOG_O = 'log-on';\n\ntry {\n    if (process.env.NODE_ENV === 'development') {   // 开发者模式增加错误报告\n        // Adds some object refs to the global window object\n        ConsoleExports.init(window);\n    }\n} catch (e) {\n    console.error(e);\n}\n\nfunction runApp(initial_state) {\n    console.log('Initial state', initial_state);\n\n    // Remove \"auth=true\" query string.\n    if (\n        typeof window !== undefined &&\n        window.location.search.match(/[?&]{1}auth=true/)\n    ) {\n        console.log('Removing temporary query string');\n        window.history.replaceState('feed', 'Feed', window.location.pathname);\n    }\n\n    const konami = {\n        code: 'xyzzy',\n        enabled: false,\n    };\n    const buff = konami.code.split('');\n    const cmd = command => {\n        console.log('got command:' + command);\n        switch (command) {\n            case CMD_LOG_O:\n                konami.enabled = false;\n            case CMD_LOG_TOGGLE:\n            case CMD_LOG_T:\n                konami.enabled = !konami.enabled;\n                if (konami.enabled) {\n                    steem.api.setOptions({ logger: console });\n                } else {\n                    steem.api.setOptions({ logger: false });\n                }\n                return 'api logging ' + konami.enabled;\n            default:\n                return 'That command is not supported.';\n        }\n        //return 'done';\n    };\n\n    const enableKonami = () => {\n        if (!window.s) {\n            console.log('The cupie doll is yours.');\n            window.s = command => {\n                return cmd.call(this, command);\n            };\n        }\n    };\n\n    window.document.body.onkeypress = e => {\n        buff.shift();\n        buff.push(e.key);\n        if (buff.join('') === konami.code) {\n            enableKonami();\n            cmd(CMD_LOG_T);\n        }\n    };\n\n    if (window.location.hash.indexOf('#' + konami.code) === 0) {\n        enableKonami();\n        cmd(CMD_LOG_O);\n    }\n\n    const config = initial_state.offchain.config;\n    steem.api.setOptions({\n        url: config.steemd_connection_client,\n        retry: true,\n        useAppbaseApi: !!config.steemd_use_appbase,\n    });\n    steem.config.set('address_prefix', config.address_prefix);\n    steem.config.set('chain_id', config.chain_id);\n    window.$STM_Config = config;\n    plugins(config);\n    if (initial_state.offchain.serverBusy) {\n        window.$STM_ServerBusy = true;\n    }\n    if (initial_state.offchain.csrf) {\n        window.$STM_csrf = initial_state.offchain.csrf;\n        delete initial_state.offchain.csrf;\n    }\n\n    initial_state.app.viewMode = determineViewMode(window.location.search);\n\n    const locale = store.get('language');\n    if (locale) initial_state.user.locale = locale;\n    initial_state.user.maybeLoggedIn = !!store.get('autopost2');\n    if (initial_state.user.maybeLoggedIn) {\n        const username = new Buffer(store.get('autopost2'), 'hex')\n            .toString()\n            .split('\\t')[0];\n        initial_state.user.current = {\n            username,\n        };\n    }\n\n    const location = `${window.location.pathname}${window.location.search}${\n        window.location.hash\n    }`;\n\n    try {\n        clientRender(initial_state);\n    } catch (error) {\n        console.error(error);\n        serverApiRecordEvent('client_error', error);\n    }\n}\n\nif (!window.Intl) {     // FIXME: 这是啥，待研究\n    require.ensure(\n        ['intl/dist/Intl'],\n        require => {\n            window.IntlPolyfill = window.Intl = require('intl/dist/Intl');\n            require('intl/locale-data/jsonp/en-US.js');\n            require('intl/locale-data/jsonp/es.js');\n            require('intl/locale-data/jsonp/ru.js');\n            require('intl/locale-data/jsonp/fr.js');\n            require('intl/locale-data/jsonp/it.js');\n            require('intl/locale-data/jsonp/ko.js');\n            require('intl/locale-data/jsonp/ja.js');\n            Iso.bootstrap(runApp);\n        },\n        'IntlBundle'\n    );\n} else {\n    Iso.bootstrap(runApp);\n}\n"]}