{"version":3,"sources":["../../../src/app/redux/GlobalReducer.js"],"names":["reducer","emptyContentMap","emptyContent","defaultState","status","SET_COLLAPSED","RECEIVE_STATE","RECEIVE_ACCOUNT","RECEIVE_ACCOUNTS","SYNC_PINNED_POSTS","RECEIVE_COMMENT","RECEIVE_CONTENT","LINK_REPLY","UPDATE_ACCOUNT_WITNESS_VOTE","UPDATE_ACCOUNT_WITNESS_PROXY","DELETE_CONTENT","VOTED","FETCHING_DATA","RECEIVE_DATA","RECEIVE_RECENT_POSTS","REQUEST_META","RECEIVE_META","SET","REMOVE","UPDATE","SET_META_DATA","CLEAR_META","CLEAR_META_ELEMENT","FETCH_JSON","FETCH_JSON_RESULT","SHOW_DIALOG","HIDE_DIALOG","ADD_ACTIVE_WITNESS_VOTE","REMOVE_ACTIVE_WITNESS_VOTE","GET_STATE","transformAccount","account","key","value","toSet","isIndexed","Iterable","toList","toOrderedMap","mergeAccounts","state","updateIn","get","a","mergeDeep","action","payload","type","withMutations","map","post","merge","collapsed","new_state","has","content","c","forEach","cc","stats","setIn","set","accounts","reduce","acc","curr","transformed","pinnedPosts","pinnedPost","author","permlink","p","op","parent_author","parent_permlink","title","body","updatedState","r","toString","parent_key","insert","children","getIn","size","delete","l","findIndex","i","push","witness","approve","votes","add","remove","proxy","deleteIn","filter","username","weight","active_votes","idx","v","voter","percent","order","category","fetching","data","accountname","endOfData","list","key2","posts","includes","entry","last_fetch","Date","unshift","id","link","meta","key_array","Array","isArray","removeIn","notSet","updater","formId","element","result","error","name","params","update","d","s","setCollapsed","receiveState","receiveAccount","receiveAccounts","syncPinnedPosts","receiveComment","receiveContent","linkReply","updateAccountWitnessVote","updateAccountWitnessProxy","deleteContent","voted","fetchingData","receiveData","receiveRecentPosts","requestMeta","receiveMeta","setMetaData","clearMeta","clearMetaElement","fetchJson","fetchJsonResult","showDialog","hideDialog","addActiveWitnessVote","removeActiveWitnessVote","getState"],"mappings":"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","file":"GlobalReducer.js","sourcesContent":["import { Map, Set, List, fromJS, Iterable } from 'immutable';\nimport { emptyContent } from 'app/redux/EmptyState';\nimport { contentStats } from 'app/utils/StateFunctions';\nimport constants from './constants';\n\nexport const emptyContentMap = Map(emptyContent);\n\nexport const defaultState = Map({\n    status: {},\n});\n\n// Action constants\nconst SET_COLLAPSED = 'global/SET_COLLAPSED';\nconst RECEIVE_STATE = 'global/RECEIVE_STATE';\nconst RECEIVE_ACCOUNT = 'global/RECEIVE_ACCOUNT';\nconst RECEIVE_ACCOUNTS = 'global/RECEIVE_ACCOUNTS';\nconst SYNC_PINNED_POSTS = 'global/SYNC_PINNED_POSTS';\nconst RECEIVE_COMMENT = 'global/RECEIVE_COMMENT';\nconst RECEIVE_CONTENT = 'global/RECEIVE_CONTENT';\nconst LINK_REPLY = 'global/LINK_REPLY';\nconst UPDATE_ACCOUNT_WITNESS_VOTE = 'global/UPDATE_ACCOUNT_WITNESS_VOTE';\nconst UPDATE_ACCOUNT_WITNESS_PROXY = 'global/UPDATE_ACCOUNT_WITNESS_PROXY';\nconst DELETE_CONTENT = 'global/DELETE_CONTENT';\nconst VOTED = 'global/VOTED';\nconst FETCHING_DATA = 'global/FETCHING_DATA';\nconst RECEIVE_DATA = 'global/RECEIVE_DATA';\nconst RECEIVE_RECENT_POSTS = 'global/RECEIVE_RECENT_POSTS';\nconst REQUEST_META = 'global/REQUEST_META';\nconst RECEIVE_META = 'global/RECEIVE_META';\nconst SET = 'global/SET';\nconst REMOVE = 'global/REMOVE';\nconst UPDATE = 'global/UPDATE';\nconst SET_META_DATA = 'global/SET_META_DATA';\nconst CLEAR_META = 'global/CLEAR_META';\nconst CLEAR_META_ELEMENT = 'global/CLEAR_META_ELEMENT';\nconst FETCH_JSON = 'global/FETCH_JSON';\nconst FETCH_JSON_RESULT = 'global/FETCH_JSON_RESULT';\nconst SHOW_DIALOG = 'global/SHOW_DIALOG';\nconst HIDE_DIALOG = 'global/HIDE_DIALOG';\nconst ADD_ACTIVE_WITNESS_VOTE = 'global/ADD_ACTIVE_WITNESS_VOTE';\nconst REMOVE_ACTIVE_WITNESS_VOTE = 'global/REMOVE_ACTIVE_WITNESS_VOTE';\n// Saga-related:\nexport const GET_STATE = 'global/GET_STATE';\n\n/**\n * Transfrom nested JS object to appropriate immutable collection.\n *\n * @param {Object} account\n */\n\nconst transformAccount = account =>\n    fromJS(account, (key, value) => {\n        if (key === 'witness_votes') return value.toSet();\n        const isIndexed = Iterable.isIndexed(value);\n        return isIndexed ? value.toList() : value.toOrderedMap();\n    });\n\n/**\n * Merging accounts: A get_state will provide a very full account but a get_accounts will provide a smaller version this makes sure we don't overwrite\n *\n * @param {Immutable.Map} state\n * @param {Immutable.Map} account\n *\n */\n\nconst mergeAccounts = (state, account) => {\n    return state.updateIn(['accounts', account.get('name')], Map(), a =>\n        a.mergeDeep(account)\n    );\n};\n\nexport default function reducer(state = defaultState, action = {}) {\n    const payload = action.payload;\n\n    switch (action.type) {\n        case SET_COLLAPSED: {\n            return state.withMutations(map => {\n                map.updateIn(['content', payload.post], value =>\n                    value.merge(Map({ collapsed: payload.collapsed }))\n                );\n            });\n        }\n\n        case RECEIVE_STATE: {\n            let new_state = fromJS(payload);\n            if (new_state.has('content')) {\n                const content = new_state.get('content').withMutations(c => {\n                    c.forEach((cc, key) => {\n                        cc = emptyContentMap.mergeDeep(cc);\n                        const stats = fromJS(contentStats(cc));\n                        c.setIn([key, 'stats'], stats);\n                    });\n                });\n                new_state = new_state.set('content', content);\n            }\n            return state.mergeDeep(new_state);\n        }\n\n        case RECEIVE_ACCOUNT: {\n            const account = transformAccount(payload.account);\n            return mergeAccounts(state, account);\n        }\n\n        case RECEIVE_ACCOUNTS: {\n            return payload.accounts.reduce((acc, curr) => {\n                const transformed = transformAccount(curr);\n                return mergeAccounts(acc, transformed);\n            }, state);\n        }\n\n        // Interleave pinned posts into the map of posts.\n        case SYNC_PINNED_POSTS: {\n            return payload.pinnedPosts.reduce((acc, pinnedPost) => {\n                const author = pinnedPost.get('author');\n                const permlink = pinnedPost.get('permlink');\n                return state.updateIn(\n                    ['content', `${author}/${permlink}`],\n                    Map(),\n                    p => p.mergeDeep(pinnedPost)\n                );\n            }, state);\n        }\n\n        case RECEIVE_COMMENT: {\n            const {\n                author,\n                permlink,\n                parent_author = '',\n                parent_permlink = '',\n                title = '',\n                body,\n            } = payload.op;\n            const key = author + '/' + permlink;\n            let updatedState = state.updateIn(\n                ['content', key],\n                Map(emptyContent),\n                r =>\n                    r.merge({\n                        author,\n                        permlink,\n                        parent_author,\n                        parent_permlink,\n                        title: title.toString('utf-8'),\n                        body: body.toString('utf-8'),\n                    })\n            );\n            if (parent_author !== '' && parent_permlink !== '') {\n                const parent_key = parent_author + '/' + parent_permlink;\n                updatedState = updatedState.updateIn(\n                    ['content', parent_key, 'replies'],\n                    List(),\n                    r => r.insert(0, key)\n                );\n                const children = updatedState.getIn(\n                    ['content', parent_key, 'replies'],\n                    List()\n                ).size;\n                updatedState = updatedState.updateIn(\n                    ['content', parent_key, 'children'],\n                    0,\n                    () => children\n                );\n            }\n            return updatedState;\n        }\n\n        case RECEIVE_CONTENT: {\n            const content = fromJS(payload.content);\n            const key = content.get('author') + '/' + content.get('permlink');\n            return state.updateIn(['content', key], Map(), c => {\n                c = emptyContentMap.mergeDeep(c);\n                c = c.delete('active_votes');\n                c = c.mergeDeep(content);\n                c = c.set('stats', fromJS(contentStats(c)));\n                return c;\n            });\n        }\n\n        case LINK_REPLY: {\n            const {\n                author,\n                permlink,\n                parent_author = '',\n                parent_permlink = '',\n            } = payload;\n            if (parent_author === '' || parent_permlink === '') return state;\n            const key = author + '/' + permlink;\n            const parent_key = parent_author + '/' + parent_permlink;\n            // Add key if not exist\n            let updatedState = state.updateIn(\n                ['content', parent_key, 'replies'],\n                List(),\n                l => (l.findIndex(i => i === key) === -1 ? l.push(key) : l)\n            );\n            const children = updatedState.getIn(\n                ['content', parent_key, 'replies'],\n                List()\n            ).size;\n            updatedState = updatedState.updateIn(\n                ['content', parent_key, 'children'],\n                0,\n                () => children\n            );\n            return updatedState;\n        }\n\n        case UPDATE_ACCOUNT_WITNESS_VOTE: {\n            const { account, witness, approve } = payload;\n            return state.updateIn(\n                ['accounts', account, 'witness_votes'],\n                Set(),\n                votes =>\n                    approve\n                        ? Set(votes).add(witness)\n                        : Set(votes).remove(witness)\n            );\n        }\n\n        case UPDATE_ACCOUNT_WITNESS_PROXY: {\n            const { account, proxy } = payload;\n            return state.setIn(['accounts', account, 'proxy'], proxy);\n        }\n\n        case DELETE_CONTENT: {\n            const { author, permlink } = payload;\n            const key = author + '/' + permlink;\n            const content = state.getIn(['content', key]);\n            const parent_author = content.get('parent_author') || '';\n            const parent_permlink = content.get('parent_permlink') || '';\n            let updatedState = state.deleteIn(['content', key]);\n            if (parent_author !== '' && parent_permlink !== '') {\n                const parent_key = parent_author + '/' + parent_permlink;\n                updatedState = updatedState.updateIn(\n                    ['content', parent_key, 'replies'],\n                    List(),\n                    r => r.filter(i => i !== key)\n                );\n            }\n            return updatedState;\n        }\n\n        case VOTED: {\n            const { username, author, permlink, weight } = payload;\n            const key = ['content', author + '/' + permlink, 'active_votes'];\n            let active_votes = state.getIn(key, List());\n            const idx = active_votes.findIndex(\n                v => v.get('voter') === username\n            );\n            // steemd flips weight into percent\n            if (idx === -1) {\n                active_votes = active_votes.push(\n                    Map({ voter: username, percent: weight })\n                );\n            } else {\n                active_votes = active_votes.set(\n                    idx,\n                    Map({ voter: username, percent: weight })\n                );\n            }\n            state.setIn(key, active_votes);\n            return state;\n        }\n\n        case FETCHING_DATA: {\n            const { order, category } = payload;\n            const new_state = state.updateIn(\n                ['status', category || '', order],\n                () => {\n                    return { fetching: true };\n                }\n            );\n            return new_state;\n        }\n\n        case RECEIVE_DATA: {\n            const {\n                data,\n                order,\n                category,\n                accountname,\n                fetching,\n                endOfData,\n            } = payload;\n            let new_state;\n            if (\n                order === 'by_author' ||\n                order === 'by_feed' ||\n                order === 'by_comments' ||\n                order === 'by_replies'\n            ) {\n                // category is either \"blog\", \"feed\", \"comments\", or \"recent_replies\" (respectively) -- and all posts are keyed under current profile\n                const key = ['accounts', accountname, category];\n                new_state = state.updateIn(key, List(), list => {\n                    return list.withMutations(posts => {\n                        data.forEach(value => {\n                            const key2 = `${value.author}/${value.permlink}`;\n                            if (!posts.includes(key2)) posts.push(key2);\n                        });\n                    });\n                });\n            } else {\n                new_state = state.updateIn(\n                    ['discussion_idx', category || '', order],\n                    list => {\n                        return list.withMutations(posts => {\n                            data.forEach(value => {\n                                const entry = `${value.author}/${\n                                    value.permlink\n                                }`;\n                                if (!posts.includes(entry)) posts.push(entry);\n                            });\n                        });\n                    }\n                );\n            }\n            new_state = new_state.updateIn(['content'], content => {\n                return content.withMutations(map => {\n                    data.forEach(value => {\n                        const key = `${value.author}/${value.permlink}`;\n                        value = fromJS(value);\n                        value = value.set('stats', fromJS(contentStats(value)));\n                        map.set(key, value);\n                    });\n                });\n            });\n            new_state = new_state.updateIn(\n                ['status', category || '', order],\n                () => {\n                    if (endOfData) {\n                        return { fetching, last_fetch: new Date() };\n                    }\n                    return { fetching };\n                }\n            );\n            return new_state;\n        }\n        case RECEIVE_RECENT_POSTS: {\n            const { data } = payload;\n            let new_state = state.updateIn(\n                ['discussion_idx', '', 'created'],\n                list => {\n                    if (!list) list = List();\n                    return list.withMutations(posts => {\n                        data.forEach(value => {\n                            const entry = `${value.author}/${value.permlink}`;\n                            if (!posts.includes(entry)) posts.unshift(entry);\n                        });\n                    });\n                }\n            );\n            new_state = new_state.updateIn(['content'], content => {\n                return content.withMutations(map => {\n                    data.forEach(value => {\n                        const key = `${value.author}/${value.permlink}`;\n                        if (!map.has(key)) {\n                            value = fromJS(value);\n                            value = value.set(\n                                'stats',\n                                fromJS(contentStats(value))\n                            );\n\n                            map.set(key, value);\n                        }\n                    });\n                });\n            });\n            return new_state;\n        }\n\n        case REQUEST_META: {\n            const { id, link } = payload;\n            return state.setIn(['metaLinkData', id], Map({ link }));\n        }\n\n        case RECEIVE_META: {\n            const { id, meta } = payload;\n            return state.updateIn(['metaLinkData', id], data =>\n                data.merge(meta)\n            );\n        }\n\n        case SET: {\n            const { key, value } = payload;\n            const key_array = Array.isArray(key) ? key : [key];\n            return state.setIn(key_array, fromJS(value));\n        }\n\n        case REMOVE: {\n            const key = Array.isArray(payload.key)\n                ? payload.key\n                : [payload.key];\n            return state.removeIn(key);\n        }\n\n        case UPDATE: {\n            const { key, notSet = Map(), updater } = payload;\n            return state.updateIn(key, notSet, updater);\n        }\n\n        case SET_META_DATA: {\n            const { id, meta } = payload;\n            return state.setIn(['metaLinkData', id], fromJS(meta));\n        }\n\n        case CLEAR_META: {\n            return state.deleteIn(['metaLinkData', payload.id]);\n        }\n\n        case CLEAR_META_ELEMENT: {\n            const { formId, element } = payload;\n            return state.updateIn(['metaLinkData', formId], data =>\n                data.remove(element)\n            );\n        }\n\n        case FETCH_JSON: {\n            return state;\n        }\n\n        case FETCH_JSON_RESULT: {\n            const { id, result, error } = payload;\n            return state.set(id, fromJS({ result, error }));\n        }\n\n        case SHOW_DIALOG: {\n            const { name, params = {} } = payload;\n            return state.update('active_dialogs', Map(), d =>\n                d.set(name, fromJS({ params }))\n            );\n        }\n\n        case HIDE_DIALOG: {\n            return state.update('active_dialogs', d => d.delete(payload.name));\n        }\n\n        case ADD_ACTIVE_WITNESS_VOTE: {\n            return state.update(\n                `transaction_witness_vote_active_${payload.account}`,\n                Set(),\n                s => s.add(payload.witness)\n            );\n        }\n\n        case REMOVE_ACTIVE_WITNESS_VOTE: {\n            return state.update(\n                `transaction_witness_vote_active_${payload.account}`,\n                s => s.delete(payload.witness)\n            );\n        }\n\n        default:\n            return state;\n    }\n}\n\n// Action creators\n\nexport const setCollapsed = payload => ({\n    type: SET_COLLAPSED,\n    payload,\n});\n\nexport const receiveState = payload => ({\n    type: RECEIVE_STATE,\n    payload,\n});\n\nexport const receiveAccount = payload => ({\n    type: RECEIVE_ACCOUNT,\n    payload,\n});\n\nexport const receiveAccounts = payload => ({\n    type: RECEIVE_ACCOUNTS,\n    payload,\n});\n\nexport const syncPinnedPosts = payload => ({\n    type: SYNC_PINNED_POSTS,\n    payload,\n});\n\nexport const receiveComment = payload => ({\n    type: RECEIVE_COMMENT,\n    payload,\n});\n\nexport const receiveContent = payload => ({\n    type: RECEIVE_CONTENT,\n    payload,\n});\n\nexport const linkReply = payload => ({\n    type: LINK_REPLY,\n    payload,\n});\n\nexport const updateAccountWitnessVote = payload => ({\n    type: UPDATE_ACCOUNT_WITNESS_VOTE,\n    payload,\n});\n\nexport const updateAccountWitnessProxy = payload => ({\n    type: UPDATE_ACCOUNT_WITNESS_PROXY,\n    payload,\n});\n\nexport const deleteContent = payload => ({\n    type: DELETE_CONTENT,\n    payload,\n});\n\nexport const voted = payload => ({\n    type: VOTED,\n    payload,\n});\n\nexport const fetchingData = payload => ({\n    type: FETCHING_DATA,\n    payload,\n});\n\nexport const receiveData = payload => ({\n    type: RECEIVE_DATA,\n    payload,\n});\n\nexport const receiveRecentPosts = payload => ({\n    type: RECEIVE_RECENT_POSTS,\n    payload,\n});\n\nexport const requestMeta = payload => ({\n    type: REQUEST_META,\n    payload,\n});\n\nexport const receiveMeta = payload => ({\n    type: RECEIVE_META,\n    payload,\n});\n\n// TODO: Find a better name for this\nexport const set = payload => ({\n    type: SET,\n    payload,\n});\n\nexport const remove = payload => ({\n    type: REMOVE,\n    payload,\n});\n\nexport const update = payload => ({\n    type: UPDATE,\n    payload,\n});\n\nexport const setMetaData = payload => ({\n    type: SET_META_DATA,\n    payload,\n});\n\nexport const clearMeta = payload => ({\n    type: CLEAR_META,\n    payload,\n});\n\nexport const clearMetaElement = payload => ({\n    type: CLEAR_META_ELEMENT,\n    payload,\n});\n\nexport const fetchJson = payload => ({\n    type: FETCH_JSON,\n    payload,\n});\n\nexport const fetchJsonResult = payload => ({\n    type: FETCH_JSON_RESULT,\n    payload,\n});\n\nexport const showDialog = payload => ({\n    type: SHOW_DIALOG,\n    payload,\n});\n\nexport const hideDialog = payload => ({\n    type: HIDE_DIALOG,\n    payload,\n});\n\nexport const addActiveWitnessVote = payload => ({\n    type: ADD_ACTIVE_WITNESS_VOTE,\n    payload,\n});\n\nexport const removeActiveWitnessVote = payload => ({\n    type: REMOVE_ACTIVE_WITNESS_VOTE,\n    payload,\n});\n\nexport const getState = payload => ({\n    type: GET_STATE,\n    payload,\n});\n"]}