{"version":3,"sources":["../../../../src/app/redux/tests/global.test.js"],"names":["globalActions","describe","it","reduced","undefined","expect","toJS","toEqual","status","state","Immutable","fromJS","require","receiveState"],"mappings":";;AACA;;;;AACA;;IAAqBA,a;;;;;;AAFrB;AAIAC,SAAS,gBAAT,EAA2B,YAAM;AAC7BC,OAAG,2BAAH,EAAgC,YAAM;AAClC,YAAMC,UAAU,2BAAQC,SAAR,EAAmB,EAAnB,CAAhB;;AAEAC,eAAOF,QAAQG,IAAR,EAAP,EAAuBC,OAAvB,CAA+B,EAAEC,QAAQ,EAAV,EAA/B;AACH,KAJD;;AAMAN,OAAG,+BAAH,EAAoC,YAAM;AACtC,YAAMO,QAAQC,oBAAUC,MAAV,CAAiBC,QAAQ,eAAR,CAAjB,CAAd;AACA,YAAMT,UAAU,2BAAQC,SAAR,EAAmBJ,cAAca,YAAd,CAA2BJ,KAA3B,CAAnB,CAAhB;AACA;AACAJ,eAAOF,QAAQG,IAAR,EAAP,EAAuBC,OAAvB,CAA+BE,MAAMH,IAAN,EAA/B;AACH,KALD;AAMH,CAbD","file":"global.test.js","sourcesContent":["/*global describe, it, before, beforeEach, after, afterEach */\nimport Immutable from 'immutable';\nimport reducer, * as globalActions from '../GlobalReducer';\n\ndescribe('global reducer', () => {\n    it('should return empty state', () => {\n        const reduced = reducer(undefined, {});\n\n        expect(reduced.toJS()).toEqual({ status: {} });\n    });\n\n    it('should apply new global state', () => {\n        const state = Immutable.fromJS(require('./global.json'));\n        const reduced = reducer(undefined, globalActions.receiveState(state));\n        //const action = {type: 'global/RECEIVE_STATE', payload: state};\n        expect(reduced.toJS()).toEqual(state.toJS());\n    });\n});\n"]}