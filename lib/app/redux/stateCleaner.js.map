{"version":3,"sources":["../../../src/app/redux/stateCleaner.js"],"names":["stateCleaner","accountsToRemove","GDPRUserList","gdprFilterAccounts","stateAccounts","filter","includes","name","reduce","acc","cur","gdprFilterContent","contentToRemove","stateContent","key","author","contentToKeep","removedByAuthor","replies","url","state","accounts","content"],"mappings":";;;;;;;;;;;;;;;;;;kBAgDwBA,Y;;AAhDxB;;;;;;AAEA,IAAMC,mBAAmBC,sBAAzB;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,WACvB,oBAAYC,aAAZ,EACKC,MADL,CACY;AAAA,eAAQ,CAACJ,iBAAiBK,QAAjB,CAA0BC,IAA1B,CAAT;AAAA,KADZ,EAEKC,MAFL,CAGQ,UAACC,GAAD,EAAMC,GAAN;AAAA,0CACOD,GADP,oCAEKC,GAFL,EAEWN,cAAcM,GAAd,CAFX;AAAA,KAHR,EAOQ,EAPR,CADuB;AAAA,CAA3B;;AAWA,IAAMC,oBAAoB,SAApBA,iBAAoB,eAAgB;AACtC,QAAMC,kBAAkB,oBAAYC,YAAZ,EAA0BR,MAA1B,CAAiC;AAAA,eACrDJ,iBAAiBK,QAAjB,CAA0BO,aAAaC,GAAb,EAAkBC,MAA5C,CADqD;AAAA,KAAjC,CAAxB;;AAIA,QAAMC,gBAAgB,oBAAYH,YAAZ,EAA0BR,MAA1B,CAClB;AAAA,eAAO,CAACJ,iBAAiBK,QAAjB,CAA0BO,aAAaC,GAAb,EAAkBC,MAA5C,CAAR;AAAA,KADkB,CAAtB;;AAIA;AACA,QAAME,kBAAkBD,cAAcR,MAAd,CACpB,UAACC,GAAD,EAAMC,GAAN;AAAA,0CACOD,GADP,oCAEKC,GAFL,EAEWG,aAAaH,GAAb,CAFX;AAAA,KADoB,EAKpB,EALoB,CAAxB;;AAQA;AACA,WAAO,oBAAYO,eAAZ,EAA6BT,MAA7B,CACH,UAACC,GAAD,EAAMC,GAAN;AAAA,0CACOD,GADP,oCAEKC,GAFL,6BAGWO,gBAAgBP,GAAhB,CAHX;AAIQQ,qBAASD,gBAAgBP,GAAhB,EAAqBQ,OAArB,CAA6Bb,MAA7B,CACL;AAAA,uBAAO,CAACO,gBAAgBN,QAAhB,CAAyBa,GAAzB,CAAR;AAAA,aADK;AAJjB;AAAA,KADG,EAUH,EAVG,CAAP;AAYH,CA/BD;;AAiCe,SAASnB,YAAT,CAAsBoB,KAAtB,EAA6B;AACxC,sCACOA,KADP;AAEIC,kBAAUlB,mBAAmBiB,MAAMC,QAAzB,CAFd;AAGIC,iBAASX,kBAAkBS,MAAME,OAAxB;AAHb;AAKH","file":"stateCleaner.js","sourcesContent":["import GDPRUserList from '../utils/GDPRUserList';\n\nconst accountsToRemove = GDPRUserList;\n\nconst gdprFilterAccounts = stateAccounts =>\n    Object.keys(stateAccounts)\n        .filter(name => !accountsToRemove.includes(name))\n        .reduce(\n            (acc, cur) => ({\n                ...acc,\n                [cur]: stateAccounts[cur],\n            }),\n            {}\n        );\n\nconst gdprFilterContent = stateContent => {\n    const contentToRemove = Object.keys(stateContent).filter(key =>\n        accountsToRemove.includes(stateContent[key].author)\n    );\n\n    const contentToKeep = Object.keys(stateContent).filter(\n        key => !accountsToRemove.includes(stateContent[key].author)\n    );\n\n    // First, remove content authored by GDPR users.\n    const removedByAuthor = contentToKeep.reduce(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: stateContent[cur],\n        }),\n        {}\n    );\n\n    // Finally, remove GDPR-authored replies referenced in other content.\n    return Object.keys(removedByAuthor).reduce(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: {\n                ...removedByAuthor[cur],\n                replies: removedByAuthor[cur].replies.filter(\n                    url => !contentToRemove.includes(url)\n                ),\n            },\n        }),\n        {}\n    );\n};\n\nexport default function stateCleaner(state) {\n    return {\n        ...state,\n        accounts: gdprFilterAccounts(state.accounts),\n        content: gdprFilterContent(state.content),\n    };\n}\n"]}