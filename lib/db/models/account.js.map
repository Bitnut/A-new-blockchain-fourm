{"version":3,"sources":["../../../src/db/models/account.js"],"names":["module","exports","sequelize","DataTypes","Account","define","UserId","type","INTEGER","references","model","key","field","name","STRING","unique","owner_key","active_key","posting_key","memo_key","referrer","refcode","remote_ip","ignored","BOOLEAN","created","tableName","createdAt","updatedAt","timestamps","underscored","classMethods","associate","models","belongsTo","User","onDelete","foreignKey","allowNull"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC5C,QAAIC,UAAUF,UAAUG,MAAV,CACV,SADU,EAEV;AACIC,gBAAQ;AACJC,kBAAMJ,UAAUK,OADZ;AAEJC,wBAAY;AACRC,uBAAO,OADC;AAERC,qBAAK;AAFG,aAFR;AAMJC,mBAAO;AANH,SADZ;AASIC,cAAM,EAAEN,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,IAAlC,EATV;AAUIC,mBAAW,EAAET,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,IAAlC,EAVf;AAWIE,oBAAY,EAAEV,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,IAAlC,EAXhB;AAYIG,qBAAa,EAAEX,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,IAAlC,EAZjB;AAaII,kBAAU,EAAEZ,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,IAAlC,EAbd;AAcIK,kBAAUjB,UAAUW,MAdxB;AAeIO,iBAASlB,UAAUW,MAfvB;AAgBIQ,mBAAWnB,UAAUW,MAhBzB;AAiBIS,iBAAS,EAAEhB,MAAMJ,UAAUqB,OAAlB,EAjBb;AAkBIC,iBAAS,EAAElB,MAAMJ,UAAUqB,OAAlB;AAlBb,KAFU,EAsBV;AACIE,mBAAW,UADf;AAEIC,mBAAW,YAFf;AAGIC,mBAAW,YAHf;AAIIC,oBAAY,IAJhB;AAKIC,qBAAa,IALjB;AAMIC,sBAAc;AACVC,uBAAW,mBAASC,MAAT,EAAiB;AACxB7B,wBAAQ8B,SAAR,CAAkBD,OAAOE,IAAzB,EAA+B;AAC3BC,8BAAU,SADiB;AAE3BC,gCAAY;AACRC,mCAAW;AADH;AAFe,iBAA/B;AAMH;AARS;AANlB,KAtBU,CAAd;AAwCA,WAAOlC,OAAP;AACH,CA1CD","file":"account.js","sourcesContent":["module.exports = function(sequelize, DataTypes) {\n    var Account = sequelize.define(\n        'Account',\n        {\n            UserId: {\n                type: DataTypes.INTEGER,\n                references: {\n                    model: 'users',\n                    key: 'id',\n                },\n                field: 'user_id',\n            },\n            name: { type: DataTypes.STRING, unique: true },\n            owner_key: { type: DataTypes.STRING, unique: true },\n            active_key: { type: DataTypes.STRING, unique: true },\n            posting_key: { type: DataTypes.STRING, unique: true },\n            memo_key: { type: DataTypes.STRING, unique: true },\n            referrer: DataTypes.STRING,\n            refcode: DataTypes.STRING,\n            remote_ip: DataTypes.STRING,\n            ignored: { type: DataTypes.BOOLEAN },\n            created: { type: DataTypes.BOOLEAN },\n        },\n        {\n            tableName: 'accounts',\n            createdAt: 'created_at',\n            updatedAt: 'updated_at',\n            timestamps: true,\n            underscored: true,\n            classMethods: {\n                associate: function(models) {\n                    Account.belongsTo(models.User, {\n                        onDelete: 'CASCADE',\n                        foreignKey: {\n                            allowNull: false,\n                        },\n                    });\n                },\n            },\n        }\n    );\n    return Account;\n};\n"]}