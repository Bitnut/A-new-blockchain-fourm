{"version":3,"sources":["../../../src/db/models/index.js"],"names":["fs","require","path","Sequelize","basename","module","filename","env","process","NODE_ENV","config","db","sequelize","get","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","modelName","associate","sync","esc","value","max_length","res","substring","replace","char","length","escAttrs","attrs","key","exports"],"mappings":";;;;;;;;AAAA;AACA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;AACA,IAAIG,WAAWF,KAAKE,QAAL,CAAcC,OAAOC,QAArB,CAAf;AACA,IAAIC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;AACA,IAAIC,SAAST,QAAQ,QAAR,CAAb;AACA,IAAIU,KAAK,EAAT;;AAEA,IAAIC,YAAY,IAAIT,SAAJ,CAAcO,OAAOG,GAAP,CAAW,cAAX,CAAd,CAAhB;;AAEAb,GACKc,WADL,CACiBC,SADjB,EAEKC,MAFL,CAEY,UAASC,IAAT,EAAe;AACnB,WACIA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IACAD,SAASb,QADT,IAEAa,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAHvB;AAKH,CARL,EASKC,OATL,CASa,UAASH,IAAT,EAAe;AACpB,QAAII,QAAQT,UAAU,QAAV,EAAoBV,KAAKoB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAApB,CAAZ;AACAN,OAAGU,MAAME,IAAT,IAAiBF,KAAjB;AACH,CAZL;;AAcA,oBAAYV,EAAZ,EAAgBS,OAAhB,CAAwB,UAASI,SAAT,EAAoB;AACxC,QAAIb,GAAGa,SAAH,EAAcC,SAAlB,EAA6B;AACzBd,WAAGa,SAAH,EAAcC,SAAd,CAAwBd,EAAxB;AACH;AACJ,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGR,SAAH,GAAeA,SAAf;;AAEA,IAAII,QAAQ,aAAZ,EAA2B;AACvB;AACAK,cAAUc,IAAV;AACH;;AAED,SAASC,GAAT,CAAaC,KAAb,EAAsC;AAAA,QAAlBC,UAAkB,uEAAL,GAAK;;AAClC,QAAI,CAACD,KAAL,EAAY,OAAO,EAAP;AACZ,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAP;AAC/B,QAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC,OAAOA,KAAP;AAChC,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAO,UAAP;AAC/B,QAAIE,MAAMF,MACLG,SADK,CACK,CADL,EACQF,aAAaA,aAAa,GADlC,EAELG,OAFK,CAEG,6BAFH,EAEkC,UAASC,IAAT,EAAe;AACnD,gBAAQA,IAAR;AACI,iBAAK,IAAL;AACI,uBAAO,KAAP;AACJ,iBAAK,MAAL;AACI,uBAAO,KAAP;AACJ,iBAAK,MAAL;AACI,uBAAO,KAAP;AACJ,iBAAK,MAAL;AACI,uBAAO,KAAP;AACJ,iBAAK,IAAL;AACI,uBAAO,KAAP;AACJ,iBAAK,IAAL;AACI,uBAAO,KAAP;AACJ;AACA;AACA;AACA;AACA;AACA;AAlBJ;AAoBA,eAAO,GAAP;AACH,KAxBK,CAAV;AAyBA,WAAOH,IAAII,MAAJ,GAAaL,UAAb,GAA0BC,GAA1B,GAAgC,GAAvC;AACH;;AAEDnB,GAAGgB,GAAH,GAASA,GAAT;;AAEAhB,GAAGwB,QAAH,GAAc,UAASC,KAAT,EAAgB;AAC1B,QAAMN,MAAM,EAAZ;AACA,wBAAYM,KAAZ,EAAmBhB,OAAnB,CAA2B;AAAA,eAAQU,IAAIO,GAAJ,IAAWV,IAAIS,MAAMC,GAAN,CAAJ,CAAnB;AAAA,KAA3B;AACA,WAAOP,GAAP;AACH,CAJD;;AAMAzB,OAAOiC,OAAP,GAAiB3B,EAAjB","file":"index.js","sourcesContent":["//数据库部分\nvar fs = require('fs');\nvar path = require('path');\nvar Sequelize = require('sequelize');\nvar basename = path.basename(module.filename);\nvar env = process.env.NODE_ENV || 'development';\nvar config = require('config');\nvar db = {};\n\nvar sequelize = new Sequelize(config.get('database_url'));\n\nfs\n    .readdirSync(__dirname)\n    .filter(function(file) {\n        return (\n            file.indexOf('.') !== 0 &&\n            file !== basename &&\n            file.slice(-3) === '.js'\n        );\n    })\n    .forEach(function(file) {\n        var model = sequelize['import'](path.join(__dirname, file));\n        db[model.name] = model;\n    });\n\nObject.keys(db).forEach(function(modelName) {\n    if (db[modelName].associate) {\n        db[modelName].associate(db);\n    }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nif (env === 'development') {\n    // in dev, sync all table schema automatically for convenience\n    sequelize.sync();\n}\n\nfunction esc(value, max_length = 256) {\n    if (!value) return '';\n    if (typeof value === 'number') return value;\n    if (typeof value === 'boolean') return value;\n    if (typeof value !== 'string') return '(object)';\n    let res = value\n        .substring(0, max_length - max_length * 0.2)\n        .replace(/[\\0\\x08\\x09\\x1a\\n\\r\"'\\\\\\%]/g, function(char) {\n            switch (char) {\n                case '\\0':\n                    return '\\\\0';\n                case '\\x08':\n                    return '\\\\b';\n                case '\\x09':\n                    return '\\\\t';\n                case '\\x1a':\n                    return '\\\\z';\n                case '\\n':\n                    return '\\\\n';\n                case '\\r':\n                    return '\\\\r';\n                // case '\\'':\n                // case \"'\":\n                // case '\"':\n                // case '\\\\':\n                // case '%':\n                //     return '\\\\' + char; // prepends a backslash to backslash, percent, and double/single quotes\n            }\n            return '-';\n        });\n    return res.length < max_length ? res : '-';\n}\n\ndb.esc = esc;\n\ndb.escAttrs = function(attrs) {\n    const res = {};\n    Object.keys(attrs).forEach(key => (res[key] = esc(attrs[key])));\n    return res;\n};\n\nmodule.exports = db;\n"]}