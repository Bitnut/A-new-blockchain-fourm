{"version":3,"sources":["../../../src/db/models/identity.js"],"names":["module","exports","sequelize","DataTypes","Identity","define","UserId","type","INTEGER","references","model","key","field","provider","STRING","provider_user_id","name","email","phone","confirmation_code","unique","verified","BOOLEAN","score","tableName","createdAt","updatedAt","timestamps","underscored","classMethods","associate","models","belongsTo","User","onDelete","foreignKey","allowNull"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC5C,QAAIC,WAAWF,UAAUG,MAAV,CACX,UADW,EAEX;AACIC,gBAAQ;AACJC,kBAAMJ,UAAUK,OADZ;AAEJC,wBAAY;AACRC,uBAAO,OADC;AAERC,qBAAK;AAFG,aAFR;AAMJC,mBAAO;AANH,SADZ;AASIC,kBAAUV,UAAUW,MATxB;AAUIC,0BAAkB,EAAER,MAAMJ,UAAUW,MAAlB,EAVtB;AAWIE,cAAMb,UAAUW,MAXpB;AAYIG,eAAO,EAAEV,MAAMJ,UAAUW,MAAlB,EAZX;AAaII,eAAO,EAAEX,MAAMJ,UAAUW,MAAV,CAAiB,EAAjB,CAAR,EAbX;AAcIK,2BAAmB,EAAEZ,MAAMJ,UAAUW,MAAlB,EAA0BM,QAAQ,IAAlC,EAdvB;AAeIC,kBAAUlB,UAAUmB,OAfxB;AAgBIC,eAAOpB,UAAUK;AAhBrB,KAFW,EAoBX;AACIgB,mBAAW,YADf;AAEIC,mBAAW,YAFf;AAGIC,mBAAW,YAHf;AAIIC,oBAAY,IAJhB;AAKIC,qBAAa,IALjB;AAMIC,sBAAc;AACVC,uBAAW,mBAASC,MAAT,EAAiB;AACxB3B,yBAAS4B,SAAT,CAAmBD,OAAOE,IAA1B,EAAgC;AAC5BC,8BAAU,SADkB;AAE5BC,gCAAY;AACRC,mCAAW;AADH;AAFgB,iBAAhC;AAMH;AARS;AANlB,KApBW,CAAf;AAsCA,WAAOhC,QAAP;AACH,CAxCD","file":"identity.js","sourcesContent":["module.exports = function(sequelize, DataTypes) {\n    var Identity = sequelize.define(\n        'Identity',\n        {\n            UserId: {\n                type: DataTypes.INTEGER,\n                references: {\n                    model: 'users',\n                    key: 'id',\n                },\n                field: 'user_id',\n            },\n            provider: DataTypes.STRING,\n            provider_user_id: { type: DataTypes.STRING },\n            name: DataTypes.STRING,\n            email: { type: DataTypes.STRING },\n            phone: { type: DataTypes.STRING(32) },\n            confirmation_code: { type: DataTypes.STRING, unique: true },\n            verified: DataTypes.BOOLEAN,\n            score: DataTypes.INTEGER,\n        },\n        {\n            tableName: 'identities',\n            createdAt: 'created_at',\n            updatedAt: 'updated_at',\n            timestamps: true,\n            underscored: true,\n            classMethods: {\n                associate: function(models) {\n                    Identity.belongsTo(models.User, {\n                        onDelete: 'CASCADE',\n                        foreignKey: {\n                            allowNull: false,\n                        },\n                    });\n                },\n            },\n        }\n    );\n    return Identity;\n};\n"]}