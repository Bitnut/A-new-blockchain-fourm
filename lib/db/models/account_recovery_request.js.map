{"version":3,"sources":["../../../src/db/models/account_recovery_request.js"],"names":["module","exports","sequelize","DataTypes","AccountRecoveryRequest","define","UserId","type","INTEGER","references","model","key","field","uid","STRING","unique","contact_email","account_name","email_confirmation_code","provider","validation_code","request_submitted_at","DATE","owner_key","old_owner_key","new_owner_key","memo_key","remote_ip","status","tableName","createdAt","updatedAt","timestamps","underscored","classMethods","associate","models","belongsTo","User","onDelete","foreignKey","allowNull"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC5C,QAAIC,yBAAyBF,UAAUG,MAAV,CACzB,wBADyB,EAEzB;AACIC,gBAAQ;AACJC,kBAAMJ,UAAUK,OADZ;AAEJC,wBAAY;AACRC,uBAAO,OADC;AAERC,qBAAK;AAFG,aAFR;AAMJC,mBAAO;AANH,SADZ;AASIC,aAAK,EAAEN,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EATT;AAUIC,uBAAe,EAAET,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EAVnB;AAWIE,sBAAc,EAAEV,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EAXlB;AAYIG,iCAAyB;AACrBX,kBAAMJ,UAAUW,MAAV,CAAiB,EAAjB,CADe;AAErBC,oBAAQ;AAFa,SAZ7B;AAgBII,kBAAU,EAAEZ,MAAMJ,UAAUW,MAAV,CAAiB,EAAjB,CAAR,EAA8BC,QAAQ,KAAtC,EAhBd;AAiBIK,yBAAiB,EAAEb,MAAMJ,UAAUW,MAAV,CAAiB,EAAjB,CAAR,EAA8BC,QAAQ,KAAtC,EAjBrB;AAkBIM,8BAAsB,EAAEd,MAAMJ,UAAUmB,IAAlB,EAAwBP,QAAQ,KAAhC,EAlB1B;AAmBIQ,mBAAW,EAAEhB,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EAnBf;AAoBIS,uBAAe,EAAEjB,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EApBnB;AAqBIU,uBAAe,EAAElB,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EArBnB;AAsBIW,kBAAU,EAAEnB,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EAtBd;AAuBIY,mBAAW,EAAEpB,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC,EAvBf;AAwBIa,gBAAQ,EAAErB,MAAMJ,UAAUW,MAAlB,EAA0BC,QAAQ,KAAlC;AAxBZ,KAFyB,EA4BzB;AACIc,mBAAW,OADf;AAEIC,mBAAW,YAFf;AAGIC,mBAAW,YAHf;AAIIC,oBAAY,IAJhB;AAKIC,qBAAa,IALjB;AAMIC,sBAAc;AACVC,uBAAW,mBAASC,MAAT,EAAiB;AACxBhC,uCAAuBiC,SAAvB,CAAiCD,OAAOE,IAAxC,EAA8C;AAC1CC,8BAAU,UADgC;AAE1CC,gCAAY;AACRC,mCAAW;AADH;AAF8B,iBAA9C;AAMH;AARS;AANlB,KA5ByB,CAA7B;AA8CA,WAAOrC,sBAAP;AACH,CAhDD","file":"account_recovery_request.js","sourcesContent":["module.exports = function(sequelize, DataTypes) {\n    var AccountRecoveryRequest = sequelize.define(\n        'AccountRecoveryRequest',\n        {\n            UserId: {\n                type: DataTypes.INTEGER,\n                references: {\n                    model: 'users',\n                    key: 'id',\n                },\n                field: 'user_id',\n            },\n            uid: { type: DataTypes.STRING, unique: false },\n            contact_email: { type: DataTypes.STRING, unique: false },\n            account_name: { type: DataTypes.STRING, unique: false },\n            email_confirmation_code: {\n                type: DataTypes.STRING(64),\n                unique: false,\n            },\n            provider: { type: DataTypes.STRING(64), unique: false },\n            validation_code: { type: DataTypes.STRING(64), unique: false },\n            request_submitted_at: { type: DataTypes.DATE, unique: false },\n            owner_key: { type: DataTypes.STRING, unique: false },\n            old_owner_key: { type: DataTypes.STRING, unique: false },\n            new_owner_key: { type: DataTypes.STRING, unique: false },\n            memo_key: { type: DataTypes.STRING, unique: false },\n            remote_ip: { type: DataTypes.STRING, unique: false },\n            status: { type: DataTypes.STRING, unique: false },\n        },\n        {\n            tableName: 'arecs',\n            createdAt: 'created_at',\n            updatedAt: 'updated_at',\n            timestamps: true,\n            underscored: true,\n            classMethods: {\n                associate: function(models) {\n                    AccountRecoveryRequest.belongsTo(models.User, {\n                        onDelete: 'SET NULL',\n                        foreignKey: {\n                            allowNull: true,\n                        },\n                    });\n                },\n            },\n        }\n    );\n    return AccountRecoveryRequest;\n};\n"]}