{"version":3,"sources":["../../src/server/sendEmail.js"],"names":["sendEmail","sg","config","get","template","to","params","from","process","env","NODE_ENV","console","log","tmpl_id","Error","request","emptyRequest","method","path","body","template_id","personalizations","email","substitutions","API","then","response","statusCode","catch","error"],"mappings":";;;;;kBAKwBA,S;;AALxB;;;;AACA;;;;;;AAEA,IAAMC,KAAK,wBAASC,iBAAOC,GAAP,CAAW,cAAX,CAAT,CAAX;;AAEe,SAASH,SAAT,CAAmBI,QAAnB,EAA6BC,EAA7B,EAAiCC,MAAjC,EAAsD;AAAA,QAAbC,IAAa,uEAAN,IAAM;;AACjE,QAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCC,gBAAQC,GAAR,gBACiBP,EADjB,iBAC+BE,IAD/B,oBAEQH,QAFR;AAKA;AACH;AACD,QAAMS,UAAUX,iBAAOC,GAAP,CAAW,oBAAX,EAAiCC,QAAjC,CAAhB;AACA,QAAI,CAACS,OAAL,EAAc,MAAM,IAAIC,KAAJ,2BAAiCV,QAAjC,CAAN;;AAEd,QAAMW,UAAUd,GAAGe,YAAH,CAAgB;AAC5BC,gBAAQ,MADoB;AAE5BC,cAAM,eAFsB;AAG5BC,cAAM;AACFC,yBAAaP,OADX;AAEFQ,8BAAkB,CACd;AACIhB,oBAAI,CAAC,EAAEiB,OAAOjB,EAAT,EAAD,CADR;AAEIkB,+BAAejB;AAFnB,aADc,CAFhB;AAQFC,kBAAM,EAAEe,OAAOf,QAAQL,iBAAOC,GAAP,CAAW,eAAX,CAAjB;AARJ;AAHsB,KAAhB,CAAhB;;AAeAF,OACKuB,GADL,CACST,OADT,EAEKU,IAFL,CAEU,oBAAY;AACdd,gBAAQC,GAAR,aACaR,QADb,sBACoCC,EADpC,SAEIqB,SAASC,UAFb;AAIH,KAPL,EAQKC,KARL,CAQW,iBAAS;AACZjB,gBAAQkB,KAAR,uBACuBzB,QADvB,sBAC8CC,EAD9C,SAEIwB,KAFJ;AAIH,KAbL;AAcH","file":"sendEmail.js","sourcesContent":["import sendgrid from 'sendgrid';\nimport config from 'config';\n\nconst sg = sendgrid(config.get('sendgrid.key'));\n\nexport default function sendEmail(template, to, params, from = null) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.log(\n            `mail: to <${to}>, from <${from}>, template ${\n                template\n            } (not sent due to not production env)`\n        );\n        return;\n    }\n    const tmpl_id = config.get('sendgrid.templates')[template];\n    if (!tmpl_id) throw new Error(`can't find template ${template}`);\n\n    const request = sg.emptyRequest({\n        method: 'POST',\n        path: '/v3/mail/send',\n        body: {\n            template_id: tmpl_id,\n            personalizations: [\n                {\n                    to: [{ email: to }],\n                    substitutions: params,\n                },\n            ],\n            from: { email: from || config.get('sendgrid.from') },\n        },\n    });\n\n    sg\n        .API(request)\n        .then(response => {\n            console.log(\n                `sent '${template}' email to '${to}'`,\n                response.statusCode\n            );\n        })\n        .catch(error => {\n            console.error(\n                `failed to send '${template}' email to '${to}'`,\n                error\n            );\n        });\n}\n"]}