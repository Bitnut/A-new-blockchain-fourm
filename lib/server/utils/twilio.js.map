{"version":3,"sources":["../../../src/server/utils/twilio.js"],"names":["verify","accountSid","config","get","authToken","client","checkEligibility","phone","prefix","startsWith","twilio","LookupsClient","resolve","phoneNumbers","type","addOns","error","result","code","console","log","results","whitepages_pro_phone_rep","reputation","level","reputation_level"],"mappings":"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","file":"twilio.js","sourcesContent":["import twilio from 'twilio';\nimport config from 'config';\n\nconst accountSid = config.get('twilio.account_sid');\nconst authToken = config.get('twilio.auth_token');\nlet client;\n\nfunction checkEligibility(phone) {\n    // US, Canada +1\n    // France +33\n    // Spain +34\n    // Italy +39\n    // UK +44\n    // Sweden +46\n    // Germany +49\n    // Mexico +52\n    // Australia +61\n    // Phillipines +63\n    // Singapore +65\n    // Turkey +90\n    // Hong Kong +852\n    // Israel +972\n\n    for (const prefix of [\n        '1',\n        '33',\n        '34',\n        '39',\n        '44',\n        '46',\n        '49',\n        '52',\n        '61',\n        '63',\n        '65',\n        '90',\n        '852',\n        '972',\n    ]) {\n        if (phone.startsWith(prefix)) return true;\n    }\n    return false;\n}\n\nexport default function verify(phone) {\n    if (!client) client = new twilio.LookupsClient(accountSid, authToken);\n    return new Promise(resolve => {\n        if (!checkEligibility(phone)) {\n            resolve('na');\n            return;\n        }\n        client.phoneNumbers(phone).get(\n            {\n                type: 'carrier',\n                addOns: 'whitepages_pro_phone_rep',\n            },\n            (error, result) => {\n                if (error) {\n                    if (error.code === 20404) {\n                        console.log('Twilio phone not found ', phone);\n                        resolve('block');\n                    } else {\n                        console.error(\n                            'Twilio error',\n                            JSON.stringify(error, null, 2)\n                        );\n                        resolve('error');\n                    }\n                } else {\n                    if (\n                        result.addOns &&\n                        result.addOns.results &&\n                        result.addOns.results.whitepages_pro_phone_rep &&\n                        result.addOns.results.whitepages_pro_phone_rep.result &&\n                        result.addOns.results.whitepages_pro_phone_rep.result\n                            .results &&\n                        result.addOns.results.whitepages_pro_phone_rep.result\n                            .results[0] &&\n                        result.addOns.results.whitepages_pro_phone_rep.result\n                            .results[0].reputation &&\n                        result.addOns.results.whitepages_pro_phone_rep.result\n                            .results[0].reputation.level\n                    ) {\n                        const reputation_level =\n                            result.addOns.results.whitepages_pro_phone_rep\n                                .result.results[0].reputation.level;\n                        console.log(\n                            'Twilio reputation level ',\n                            phone,\n                            reputation_level\n                        );\n                        resolve(reputation_level < 3 ? 'pass' : 'block');\n                    } else {\n                        console.error(\n                            'Twilio result does not contain reputation level:',\n                            JSON.stringify(result, null, 2)\n                        );\n                        resolve('error');\n                    }\n                }\n            }\n        );\n    });\n}\n"]}