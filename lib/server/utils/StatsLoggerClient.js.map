{"version":3,"sources":["../../../src/server/utils/StatsLoggerClient.js"],"names":["StatsLoggerClient","STATSD_IP","SDC","host","prefix","console","log","timing","arguments","tuples","timestamp","Date","map","tuple"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;;;IAIqBA,iB;AACjB,+BAAYC,SAAZ,EAAuB;AAAA;;AACnB,YAAIA,SAAJ,EAAe;AACX,iBAAKC,GAAL,GAAW,IAAIA,sBAAJ,CAAQ;AACfC,sBAAMF,SADS;AAEfG,wBAAQ;AAFO,aAAR,CAAX;AAIH,SALD,MAKO;AACHC,oBAAQC,GAAR,CACI,6DADJ;AAGA;AACA,iBAAKJ,GAAL,GAAW;AACPK,sBADO,oBACE;AACLF,4BAAQC,GAAR,CAAY,0BAAZ,EAAwCE,SAAxC;AACH;AAHM,aAAX;AAKH;AACJ;;AAED;;;;;;;;kCAIUC,M,EAAQ;AAAA;;AACd,gBAAMC,YAAY,CAAC,IAAIC,IAAJ,EAAnB;AACAF,mBAAOG,GAAP,CAAW,iBAAS;AAChB,sBAAKV,GAAL,CAASK,MAAT,CAAgBM,MAAM,CAAN,CAAhB,EAA0BA,MAAM,CAAN,CAA1B;AACH,aAFD;AAGH;;;;;kBA7BgBb,iB","file":"StatsLoggerClient.js","sourcesContent":["import SDC from 'statsd-client';\n\n/**\n * In production, log stats to statsd.\n * In dev, console.log 'em.\n */\nexport default class StatsLoggerClient {\n    constructor(STATSD_IP) {\n        if (STATSD_IP) {\n            this.SDC = new SDC({\n                host: STATSD_IP,\n                prefix: 'condenser',\n            });\n        } else {\n            console.log(\n                'StatsLoggerClient: no server available, logging to console.'\n            );\n            // Implement debug loggers here, as any new calls are added in methods below.\n            this.SDC = {\n                timing() {\n                    console.log('StatsLoggerClient call: ', arguments);\n                },\n            };\n        }\n    }\n\n    /**\n     * Given an array of timer tuples that look like [namespace, value]\n     * log them all to statsd.\n     */\n    logTimers(tuples) {\n        const timestamp = +new Date();\n        tuples.map(tuple => {\n            this.SDC.timing(tuple[0], tuple[1]);\n        });\n    }\n}\n"]}