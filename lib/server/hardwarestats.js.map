{"version":3,"sources":["../../src/server/hardwarestats.js"],"names":["module","exports","hardwareStats","stats","handleError","err","startPromise","resolve","reject","getCpuUsage","cpuStat","usagePercent","percent","seconds","cpuPercent","getMemoryUsage","memoryStatsInGiB","memStat","allStats","getDiskUsage","diskStats","diskStat","raw","then","console","log"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiBC,aAAjB;;AAEA,IAAIC,QAAQ,EAAZ;;AAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACtB;AACA,UAAMA,GAAN;AACH;;AAED,SAASC,YAAT,GAAwB;AACpB,WAAO,sBAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzCD;AACH,KAFM,CAAP;AAGH;;AAED,SAASE,WAAT,GAAuB;AACnB,WAAO,sBAAY,UAASF,OAAT,EAAkBC,MAAlB,EAA0B;AACzCE,0BAAQC,YAAR,CAAqB,UAASN,GAAT,EAAcO,OAAd,EAAuBC,OAAvB,EAAgC;AACjD,gBAAIR,GAAJ,EAAS,OAAOA,GAAP;AACTF,kBAAMW,UAAN,GAAmBF,OAAnB;AACAL;AACH,SAJD;AAKH,KANM,CAAP;AAOH;;AAED,SAASQ,cAAT,GAA0B;AACtB,WAAO,sBAAY,UAASR,OAAT,EAAkBC,MAAlB,EAA0B;AACzCL,cAAMa,gBAAN,GAAyBC,kBAAQC,QAAR,CAAiB,KAAjB,CAAzB;AACAX;AACH,KAHM,CAAP;AAIH;;AAED,SAASY,YAAT,GAAwB;AACpB,WAAO,sBAAY,UAASZ,OAAT,EAAkBC,MAAlB,EAA0B;AACzCL,cAAMiB,SAAN,GAAkBC,mBAASC,GAAT,EAAlB;AACAf;AACH,KAHM,CAAP;AAIH;;AAED,SAASL,aAAT,GAAyB;AACrB,WAAOI,eACFiB,IADE,CACGd,WADH,EACgBL,WADhB,EAEFmB,IAFE,CAEGR,cAFH,EAEmBX,WAFnB,EAGFmB,IAHE,CAGGJ,YAHH,EAGiBf,WAHjB,EAIFmB,IAJE,CAIG,YAAW;AACbC,gBAAQC,GAAR,CAAY,yBAAetB,KAAf,CAAZ;AACH,KANE,EAMAC,WANA,EAOFmB,IAPE,CAOG,IAPH,EAOS,UAASlB,GAAT,EAAc;AACtBmB,gBAAQC,GAAR,CAAY,mCAAmCpB,GAA/C;AACH,KATE,CAAP;AAUH","file":"hardwarestats.js","sourcesContent":["import cpuStat from 'cpu-stat';\nimport memStat from 'mem-stat';\nimport diskStat from 'disk-stat';\n\nmodule.exports = hardwareStats;\n\nlet stats = {};\n\nfunction handleError(err) {\n    // perpetually throws the same error down the chain for promises\n    throw err;\n}\n\nfunction startPromise() {\n    return new Promise(function(resolve, reject) {\n        resolve();\n    });\n}\n\nfunction getCpuUsage() {\n    return new Promise(function(resolve, reject) {\n        cpuStat.usagePercent(function(err, percent, seconds) {\n            if (err) return err;\n            stats.cpuPercent = percent;\n            resolve();\n        });\n    });\n}\n\nfunction getMemoryUsage() {\n    return new Promise(function(resolve, reject) {\n        stats.memoryStatsInGiB = memStat.allStats('GiB');\n        resolve();\n    });\n}\n\nfunction getDiskUsage() {\n    return new Promise(function(resolve, reject) {\n        stats.diskStats = diskStat.raw();\n        resolve();\n    });\n}\n\nfunction hardwareStats() {\n    return startPromise()\n        .then(getCpuUsage, handleError)\n        .then(getMemoryUsage, handleError)\n        .then(getDiskUsage, handleError)\n        .then(function() {\n            console.log(JSON.stringify(stats));\n        }, handleError)\n        .then(null, function(err) {\n            console.log('error getting hardware stats: ' + err);\n        });\n}\n"]}