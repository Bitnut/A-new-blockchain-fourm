{"version":3,"sources":["../../src/server/server.js"],"names":["cluster","isMaster","console","log","app","Koa","name","env","process","NODE_ENV","cacheOpts","maxAge","gzip","buffer","use","path","join","__dirname","webpack_dev_port","PORT","parseInt","proxyhost","proxy","require","host","map","filePath","resolvedAssets","supportedLocales","numProcesses","NUM_PROCESSES","os","cpus","length","statsLoggerClient","StatsLoggerClient","STATSD_IP","keys","config","get","crypto_key","key","next","request","url","startsWith","auth","query","replace","session","save","convertEntriesToArrays","obj","reduce","result","split","method","status","body","docker_tag","DOCKER_TAG","source_commit","SOURCE_COMMIT","a","redirect","routeRegex","UserProfile1","test","PostNoCategory","Post","p","originalUrl","toLowerCase","userCheck","slice","userIllegalContent","includes","CategoryFilters","redir","r","hsts","set","type","last_visit","Date","getTime","from_link","headers","referer","uid","secureRandom","randomBuffer","toString","new_visit","adsEnabled","google_ad_enabled","helmetConfig","directives","reportOnly","setAllHeaders","reportUri","frameSrc","helmet","contentSecurityPolicy","forEach","policy","response","header","el","oldScriptSrc","appRender","pinnedPostsPromise","bot","state","isBot","argv","port","i","fork","on","worker","id","listen","send","PERFORMANCE_TRACING","setInterval","hardwareStats","module","exports"],"mappings":";;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAIA,kBAAQC,QAAZ,EAAsBC,QAAQC,GAAR,CAAY,2CAAZ;;AAEtB;;AApCA;;AAsCA,IAAMC,MAAM,IAAIC,aAAJ,EAAZ;AACAD,IAAIE,IAAJ,GAAW,aAAX;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA;AACA,IAAMC,YAAY,EAAEC,QAAQ,QAAV,EAAoBC,MAAM,IAA1B,EAAgCC,QAAQ,IAAxC,EAAlB;;AAEA;AACAT,IAAIU,GAAJ,CACI,0BAAQC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,2CAArB,CAAR,CADJ;AAGAb,IAAIU,GAAJ,CACI,wBACI,WADJ,EAEI,8BACIC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,+BAArB,CADJ,EAEIP,SAFJ,CAFJ,CADJ;AASAN,IAAIU,GAAJ,CACI,wBACI,SADJ,EAEI,8BAAYC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAZ,EAA0DP,SAA1D,CAFJ,CADJ;AAMAN,IAAIU,GAAJ,CACI,wBACI,cADJ,EAEI,8BACIC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CADJ,EAEIP,SAFJ,CAFJ,CADJ;AASA;AACA,IAAIH,QAAQ,aAAZ,EAA2B;AACvB,QAAMW,mBAAmBV,QAAQD,GAAR,CAAYY,IAAZ,GACnBC,SAASZ,QAAQD,GAAR,CAAYY,IAArB,IAA6B,CADV,GAEnB,IAFN;AAGA,QAAME,YAAY,oBAAoBH,gBAAtC;AACAhB,YAAQC,GAAR,CAAY,uCAAuCkB,SAAnD;AACA,QAAMC,QAAQC,QAAQ,WAAR,EAAqB;AAC/BC,cAAMH,SADyB;AAE/BI,aAAK;AAAA,mBAAY,YAAYC,QAAxB;AAAA;AAF0B,KAArB,CAAd;AAIAtB,QAAIU,GAAJ,CAAQ,wBAAM,SAAN,EAAiBQ,KAAjB,CAAR;AACH,CAXD,MAWO;AACHlB,QAAIU,GAAJ,CACI,wBACI,SADJ,EAEI,8BAAYC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAZ,EAAgDP,SAAhD,CAFJ,CADJ;AAMH;;AAED,IAAIiB,iBAAiB,KAArB;AACA,IAAIC,mBAAmB,KAAvB;;AAEA,IAAIpB,QAAQD,GAAR,CAAYE,QAAZ,KAAyB,YAA7B,EAA2C;AACvCkB,qBAAiBJ,QAAQR,eAAKC,IAAL,CACrBC,SADqB,EAErB,OAFqB,EAGrB,8BAHqB,CAAR,CAAjB;AAKAW,uBAAmB,gCAAnB;AACH;;AAEDxB,IAAIU,GAAJ,CAAQ,yBAAR;;AAEA;AACA;AACA,IAAMe,eAAerB,QAAQD,GAAR,CAAYuB,aAAZ,IAA6BC,aAAGC,IAAH,GAAUC,MAA5D;;AAEA,IAAMC,oBAAoB,IAAIC,2BAAJ,CAAsB3B,QAAQD,GAAR,CAAY6B,SAAlC,CAA1B;;AAEAhC,IAAIU,GAAJ,CAAQ,8BAAYoB,iBAAZ,CAAR;;AAEA9B,IAAIiC,IAAJ,GAAW,CAACC,iBAAOC,GAAP,CAAW,aAAX,CAAD,CAAX;;AAEA,IAAMC,aAAaF,iBAAOC,GAAP,CAAW,uBAAX,CAAnB;AACA,6BAAQnC,GAAR,EAAa;AACTO,YAAQ,OAAO,IAAP,GAAc,EAAd,GAAmB,EADlB;AAET6B,0BAFS;AAGTC,SAAKH,iBAAOC,GAAP,CAAW,oBAAX;AAHI,CAAb;AAKA,uBAAKnC,GAAL;;AAEA;AACA;AACAA,IAAIU,GAAJ,0CAAQ,iBAAU4B,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACA,KAAKC,OAAL,CAAaC,GAAb,CAAiBC,UAAjB,CAA4B,MAA5B,CADA;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAEMH,IAFN;;AAAA;AAAA;;AAAA;AAMEI,wBANF,GAMS,KAAKH,OAAL,CAAaI,KAAb,CAAmBD,IAN5B;;AAOJ,wBAAIA,IAAJ,EAAU;AACN,6BAAKH,OAAL,CAAaC,GAAb,GAAmB,KAAKD,OAAL,CAAaC,GAAb,CAAiBI,OAAjB,CAAyB,kBAAzB,EAA6C,EAA7C,CAAnB;AACA,6BAAKC,OAAL,CAAa,MAAb,IAAuB,IAAvB;AACA,6BAAKA,OAAL,CAAaC,IAAb;AACA,6BAAKP,OAAL,CAAaI,KAAb,CAAmBD,IAAnB,GAA0B,IAA1B;AACH;;AAZG;AAAA,2BAcEJ,IAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAR;;AAiBA,yBAAUtC,GAAV;;AAEA,SAAS+C,sBAAT,CAAgCC,GAAhC,EAAqC;AACjC,WAAO,oBAAYA,GAAZ,EAAiBC,MAAjB,CAAwB,UAACC,MAAD,EAASb,GAAT,EAAiB;AAC5Ca,eAAOb,GAAP,IAAcW,IAAIX,GAAJ,EAASc,KAAT,CAAe,KAAf,CAAd;AACA,eAAOD,MAAP;AACH,KAHM,EAGJ,EAHI,CAAP;AAIH;;AAED;AACAlD,IAAIU,GAAJ,0CAAQ,kBAAU4B,IAAV;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA,KAAKc,MAAL,KAAgB,KAAhB,IAAyB,KAAKZ,GAAL,KAAa,+BADtC;AAAA;AAAA;AAAA;;AAEA,yBAAKa,MAAL,GAAc,GAAd;AACA,yBAAKC,IAAL,GAAY;AACRD,gCAAQ,IADA;AAERE,oCAAYnD,QAAQD,GAAR,CAAYqD,UAAZ,GAAyBpD,QAAQD,GAAR,CAAYqD,UAArC,GAAkD,KAFtD;AAGRC,uCAAerD,QAAQD,GAAR,CAAYuD,aAAZ,GACTtD,QAAQD,GAAR,CAAYuD,aADH,GAET;AALE,qBAAZ;AAHA;;AAAA;AAAA,0BAcA,KAAKN,MAAL,KAAgB,KAAhB,IAAyB,KAAKZ,GAAL,KAAa,GAAtC,IAA6C,KAAKK,OAAL,CAAac,CAd1D;AAAA;AAAA;AAAA;;AAeA,yBAAKN,MAAL,GAAc,GAAd;AACA,yBAAKO,QAAL,QAAmB,KAAKf,OAAL,CAAac,CAAhC;AAhBA;;AAAA;AAAA,0BAqBA,KAAKP,MAAL,KAAgB,KAAhB,KACCS,yBAAWC,YAAX,CAAwBC,IAAxB,CAA6B,KAAKvB,GAAlC,KACGqB,yBAAWG,cAAX,CAA0BD,IAA1B,CAA+B,KAAKvB,GAApC,CADH,IAEGqB,yBAAWI,IAAX,CAAgBF,IAAhB,CAAqB,KAAKvB,GAA1B,CAHJ,CArBA;AAAA;AAAA;AAAA;;AA0BM0B,qBA1BN,GA0BU,KAAKC,WAAL,CAAiBC,WAAjB,EA1BV;AA2BIC,6BA3BJ,GA2BgB,EA3BhB;;AA4BA,wBAAIR,yBAAWI,IAAX,CAAgBF,IAAhB,CAAqB,KAAKvB,GAA1B,CAAJ,EAAoC;AAChC6B,oCAAYH,EAAEf,KAAF,CAAQ,GAAR,EAAa,CAAb,EAAgBmB,KAAhB,CAAsB,CAAtB,CAAZ;AACH,qBAFD,MAEO;AACHD,oCAAYH,EAAEf,KAAF,CAAQ,GAAR,EAAa,CAAb,EAAgBmB,KAAhB,CAAsB,CAAtB,CAAZ;AACH;;AAhCD,yBAiCIC,6BAAmBC,QAAnB,CAA4BH,SAA5B,CAjCJ;AAAA;AAAA;AAAA;;AAkCIvE,4BAAQC,GAAR,CAAY,oCAAZ,EAAkDsE,SAAlD;AACA,yBAAKhB,MAAL,GAAc,GAAd;AAnCJ;;AAAA;AAAA,0BAsCIa,MAAM,KAAKC,WAtCf;AAAA;AAAA;AAAA;;AAuCI,yBAAKd,MAAL,GAAc,GAAd;AACA,yBAAKO,QAAL,CAAcM,CAAd;AAxCJ;;AAAA;AAAA,0BA6CA,KAAKd,MAAL,KAAgB,KAAhB,IAAyBS,yBAAWY,eAAX,CAA2BV,IAA3B,CAAgC,KAAKvB,GAArC,CA7CzB;AAAA;AAAA;AAAA;;AA8CM0B,sBA9CN,GA8CU,KAAKC,WAAL,CAAiBC,WAAjB,EA9CV;;AAAA,0BA+CIF,OAAM,KAAKC,WA/Cf;AAAA;AAAA;AAAA;;AAgDI,yBAAKd,MAAL,GAAc,GAAd;AACA,yBAAKO,QAAL,CAAcM,EAAd;AAjDJ;;AAAA;AAAA,0BA4DA,KAAKd,MAAL,KAAgB,KAAhB,IAAyB,uBAAuBW,IAAvB,CAA4B,KAAKvB,GAAjC,CA5DzB;AAAA;AAAA;AAAA;;AA6DIkC,yBA7DJ,GA6DY,KAAKlC,GAAL,CAASI,OAAT,CAAiB,qBAAjB,EAAwC,aAAK;AACrD,4BAAMsB,IAAIS,EAAExB,KAAF,CAAQ,GAAR,CAAV;AACA,4BAAIe,EAAErC,MAAF,KAAa,CAAjB,EAAoB,MAAKgB,OAAL,CAAaqB,EAAE,CAAF,CAAb,IAAqBA,EAAE,CAAF,CAArB;AACpB,+BAAO,EAAP;AACH,qBAJW,CA7DZ;;AAkEAQ,4BAAQA,MAAM9B,OAAN,CAAc,MAAd,EAAsB,EAAtB,CAAR;AACA8B,4BAAQA,MAAM9B,OAAN,CAAc,OAAd,EAAuB,EAAvB,CAAR;AACA9C,4BAAQC,GAAR,sBAA+B,KAAKyC,GAApC,YAA8CkC,KAA9C;AACA,yBAAKrB,MAAL,GAAc,GAAd;AACA,yBAAKO,QAAL,CAAcc,KAAd;AAtEA;AAAA;;AAAA;AAAA;AAAA,2BAwEMpC,IAxEN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAR;;AA4EA;AACA,IAAInC,QAAQ,YAAZ,EAA0B;AACtBH,QAAIU,GAAJ,CAAQS,QAAQ,qBAAR,GAAR;AACAnB,QAAIU,GAAJ,CAAQS,QAAQ,UAAR,GAAR;AACAnB,QAAIU,GAAJ,CAAQS,QAAQ,gBAAR,GAAR;AACH;;AAED;AACA,IAAIhB,QAAQ,YAAZ,EAA0B;AACtBH,QAAIU,GAAJ,CAAQ,4BAAR;AACH,CAFD,MAEO;AACHV,QAAIU,GAAJ,CAAQ,0BAAR;AACH;;AAEDV,IAAIU,GAAJ,CACI,yBAAO;AACHkE,UAAM;AADH,CAAP,CADJ;;AAMA5E,IAAIU,GAAJ,CACI,wBACI,SADJ,EAEI,8BAAYC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAZ,EAA0DP,SAA1D,CAFJ,CADJ;;AAOAN,IAAIU,GAAJ,CACI,wBAAM,aAAN,0CAAqB;AAAA;AAAA;AAAA;AAAA;AACjB,yBAAKmE,GAAL,CAAS,eAAT,EAA0B,0BAA1B;AACA,yBAAKC,IAAL,GAAY,YAAZ;AACA,yBAAKxB,IAAL,GAAY,yBAAZ;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB,EADJ;;AAQA;AACA;AACAtD,IAAIU,GAAJ,0CAAQ,kBAAU4B,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACEyC,8BADF,GACe,KAAKlC,OAAL,CAAakC,UAD5B;;AAEJ,yBAAKlC,OAAL,CAAakC,UAAb,GAA2B,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAxB,GAAgC,CAA1D;AACMC,6BAHF,GAGc,KAAK3C,OAAL,CAAa4C,OAAb,CAAqBC,OAHnC;;AAIJ,wBAAI,CAAC,KAAKvC,OAAL,CAAawC,GAAlB,EAAuB;AACnB,6BAAKxC,OAAL,CAAawC,GAAb,GAAmBC,uBAAaC,YAAb,CAA0B,EAA1B,EAA8BC,QAA9B,CAAuC,KAAvC,CAAnB;AACA,6BAAK3C,OAAL,CAAa4C,SAAb,GAAyB,IAAzB;AACA,4BAAIP,SAAJ,EAAe,KAAKrC,OAAL,CAAa8B,CAAb,GAAiBO,SAAjB;AAClB,qBAJD,MAIO;AACH,6BAAKrC,OAAL,CAAa4C,SAAb,GAAyB,KAAK5C,OAAL,CAAakC,UAAb,GAA0BA,UAA1B,GAAuC,IAAhE;AACA,4BAAI,CAAC,KAAKlC,OAAL,CAAa8B,CAAd,IAAmBO,SAAvB,EAAkC;AAC9B,iCAAKrC,OAAL,CAAa8B,CAAb,GAAiBO,SAAjB;AACH;AACJ;AAbG;AAAA,2BAcE5C,IAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAR;;AAiBA,yBAAatC,GAAb;AACA,mCAA6BA,GAA7B;AACA,oCAA8BA,GAA9B;AACA,yBAAYA,GAAZ;AACA,yBAAYA,GAAZ;;AAEA,gCAAsBA,GAAtB;AACA,uBAAcA,GAAd;;AAEAA,IAAIU,GAAJ,0CAAQ,kBAAU4B,IAAV;AAAA;AAAA;AAAA;AAAA;AACJ,yBAAKoD,UAAL,GACI,EAAE,KAAK7C,OAAL,CAAaH,IAAb,IAAqB,KAAKG,OAAL,CAAac,CAApC,KAA0CzB,iBAAOyD,iBADrD;AADI;AAAA,2BAGErD,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAR;;AAMA;AACA;AACA,IAAInC,QAAQ,YAAZ,EAA0B;AACtB,QAAMyF,eAAe;AACjBC,oBAAY9C,uBAAuBb,iBAAOC,GAAP,CAAW,mBAAX,CAAvB,CADK;AAEjB2D,oBAAY5D,iBAAOC,GAAP,CAAW,mBAAX,CAFK;AAGjB4D,uBAAe7D,iBAAOC,GAAP,CAAW,sBAAX;AAHE,KAArB;AAKAyD,iBAAaC,UAAb,CAAwBG,SAAxB,GAAoCJ,aAAaC,UAAb,CAAwBG,SAAxB,CAAkC,CAAlC,CAApC;AACA,QAAIJ,aAAaC,UAAb,CAAwBG,SAAxB,KAAsC,GAA1C,EAA+C;AAC3C,eAAOJ,aAAaC,UAAb,CAAwBG,SAA/B;AACH;;AAED,QAAI,CAACJ,aAAaC,UAAb,CAAwBI,QAA7B,EAAuC;AACnCL,qBAAaC,UAAb,CAAwBI,QAAxB,GAAmC,aAE/B,6BAF+B,EAG/B,QAH+B,CAAnC;AAKH;;AAEDjG,QAAIU,GAAJ,CAAQwF,oBAAOC,qBAAP,CAA6BP,YAA7B,CAAR;AACA5F,QAAIU,GAAJ,0CAAQ,kBAAU4B,IAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACA,KAAKoD,UADL;AAAA;AAAA;AAAA;;AAEA;AACA,yBACI,yBADJ,EAEI,2BAFJ,EAGI,cAHJ,EAIEU,OAJF,CAIU,kBAAU;AAChB,gCAAIC,SAAS,OAAKC,QAAL,CAAcC,MAAd,CAAqBA,MAArB,EACRpD,KADQ,CACF,MADE,EAER9B,GAFQ,CAEJ,cAAM;AACP,oCAAImF,GAAG/D,UAAH,CAAc,YAAd,CAAJ,EAAiC;AAC7B,wCAAMgE,eAAeD,GAAG5D,OAAH,CAAW,aAAX,EAA0B,EAA1B,CAArB;AACA,0GACI6D,YADJ;AAGH,iCALD,MAKO;AACH,2CAAOD,EAAP;AACH;AACJ,6BAXQ,EAYR5F,IAZQ,CAYH,IAZG,CAAb;AAaA,mCAAK0F,QAAL,CAAczB,GAAd,CAAkB0B,MAAlB,EAA0BF,MAA1B;AACH,yBAnBD;AAHA;AAAA,+BAuBM/D,IAvBN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BA0BMA,IA1BN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;AA6BH;;AAED,IAAInC,QAAQ,MAAZ,EAAoB;AAChB,QAAMuG,YAAYvF,QAAQ,cAAR,CAAlB;;AAEA;AACA;AACA;AACAnB,QAAI2G,kBAAJ,GAAyB,+BAAzB;AACA3G,QAAIU,GAAJ,0CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACEgG,UAAU,IAAV,EAAgBlF,gBAAhB,EAAkCD,cAAlC,CADF;;AAAA;AAEJ;AACMqF,2BAHF,GAGQ,KAAKC,KAAL,CAAWC,KAHnB;;AAIJ,4BAAIF,GAAJ,EAAS;AACL9G,oCAAQC,GAAR,YACa,KAAKqD,MADlB,SAC4B,KAAKe,WADjC,SAEQ,KAAKd,MAFb,gBAGcuD,GAHd;AAKH;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAaA,QAAMG,OAAO,wBAAS3G,QAAQ2G,IAAR,CAAazC,KAAb,CAAmB,CAAnB,CAAT,CAAb;;AAEA,QAAM0C,OAAO5G,QAAQD,GAAR,CAAYY,IAAZ,GAAmBC,SAASZ,QAAQD,GAAR,CAAYY,IAArB,CAAnB,GAAgD,IAA7D;;AAEA,QAAIZ,QAAQ,YAAZ,EAA0B;AACtB,YAAIP,kBAAQC,QAAZ,EAAsB;AAClB,iBAAK,IAAIoH,IAAI,CAAb,EAAgBA,IAAIxF,YAApB,EAAkCwF,GAAlC,EAAuC;AACnCrH,kCAAQsH,IAAR;AACH;AACD;AACAtH,8BAAQuH,EAAR,CAAW,MAAX,EAAmB,UAASC,MAAT,EAAiB;AAChCtH,wBAAQC,GAAR,CACI,2CADJ,EAEIqH,OAAOC,EAFX;AAIAzH,kCAAQsH,IAAR;AACH,aAND;AAOH,SAZD,MAYO;AACHlH,gBAAIsH,MAAJ,CAAWN,IAAX;AACA,gBAAI5G,QAAQmH,IAAZ,EAAkBnH,QAAQmH,IAAR,CAAa,QAAb;AAClBzH,oBAAQC,GAAR,sCAA+CiH,IAA/C;AACH;AACJ,KAlBD,MAkBO;AACH;AACAhH,YAAIsH,MAAJ,CAAWN,IAAX;AACA,YAAI5G,QAAQmH,IAAZ,EAAkBnH,QAAQmH,IAAR,CAAa,QAAb;AAClBzH,gBAAQC,GAAR,kCAA2CiH,IAA3C;AACH;AACJ;;AAED;AACA;AACA,IAAI5G,QAAQD,GAAR,CAAYqH,mBAAhB,EACIC,YAAYC,uBAAZ,EAA2B,OAAOtH,QAAQD,GAAR,CAAYqH,mBAA9C;;AAEJG,OAAOC,OAAP,GAAiB5H,GAAjB","file":"server.js","sourcesContent":["// TODO:服务器端，找到路由\n\nimport path from 'path';\nimport Koa from 'koa';\nimport mount from 'koa-mount';\nimport helmet from 'koa-helmet';\nimport koa_logger from 'koa-logger';\nimport requestTime from './requesttimings';\nimport StatsLoggerClient from './utils/StatsLoggerClient';\nimport hardwareStats from './hardwarestats';\nimport cluster from 'cluster';\nimport os from 'os';\nimport prod_logger from './prod_logger';\nimport favicon from 'koa-favicon';\nimport staticCache from 'koa-static-cache';\nimport useRedirects from './redirects';\nimport useGeneralApi from './api/general';\nimport useAccountRecoveryApi from './api/account_recovery';\nimport useEnterAndConfirmEmailPages from './sign_up_pages/enter_confirm_email';\nimport useEnterAndConfirmMobilePages from './sign_up_pages/enter_confirm_mobile';\nimport useUserJson from './json/user_json';\nimport usePostJson from './json/post_json';\nimport isBot from 'koa-isbot';\nimport session from '@steem/crypto-session';\nimport csrf from 'koa-csrf';\nimport minimist from 'minimist';\nimport config from 'config';\nimport { routeRegex } from 'app/ResolveRoute';\nimport secureRandom from 'secure-random';\nimport userIllegalContent from 'app/utils/userIllegalContent';\nimport koaLocale from 'koa-locale';\nimport { getSupportedLocales } from './utils/misc';\nimport { pinnedPosts } from './utils/PinnedPosts';\n\nif (cluster.isMaster) console.log('application server starting, please wait.');\n\n// import uploadImage from 'server/upload-image' //medium-editor\n\nconst app = new Koa();\napp.name = 'Steemit app';\nconst env = process.env.NODE_ENV || 'development';\n// cache of a thousand days\nconst cacheOpts = { maxAge: 86400000, gzip: true, buffer: true };\n\n// Serve static assets without fanfare\napp.use(\n    favicon(path.join(__dirname, '../app/assets/images/favicons/favicon.ico'))\n);\napp.use(\n    mount(\n        '/favicons',\n        staticCache(\n            path.join(__dirname, '../app/assets/images/favicons'),\n            cacheOpts\n        )\n    )\n);\napp.use(\n    mount(\n        '/images',\n        staticCache(path.join(__dirname, '../app/assets/images'), cacheOpts)\n    )\n);\napp.use(\n    mount(\n        '/javascripts',\n        staticCache(\n            path.join(__dirname, '../app/assets/javascripts'),\n            cacheOpts\n        )\n    )\n);\n// Proxy asset folder to webpack development server in development mode\nif (env === 'development') {\n    const webpack_dev_port = process.env.PORT\n        ? parseInt(process.env.PORT) + 1\n        : 8081;\n    const proxyhost = 'http://0.0.0.0:' + webpack_dev_port;\n    console.log('proxying to webpack dev server at ' + proxyhost);\n    const proxy = require('koa-proxy')({\n        host: proxyhost,\n        map: filePath => 'assets/' + filePath,\n    });\n    app.use(mount('/assets', proxy));\n} else {\n    app.use(\n        mount(\n            '/assets',\n            staticCache(path.join(__dirname, '../../dist'), cacheOpts)\n        )\n    );\n}\n\nlet resolvedAssets = false;\nlet supportedLocales = false;\n\nif (process.env.NODE_ENV === 'production') {\n    resolvedAssets = require(path.join(\n        __dirname,\n        '../..',\n        '/tmp/webpack-stats-prod.json'\n    ));\n    supportedLocales = getSupportedLocales();\n}\n\napp.use(isBot());\n\n// set number of processes equal to number of cores\n// (unless passed in as an env var)\nconst numProcesses = process.env.NUM_PROCESSES || os.cpus().length;\n\nconst statsLoggerClient = new StatsLoggerClient(process.env.STATSD_IP);\n\napp.use(requestTime(statsLoggerClient));\n\napp.keys = [config.get('session_key')];\n\nconst crypto_key = config.get('server_session_secret');\nsession(app, {\n    maxAge: 1000 * 3600 * 24 * 60,\n    crypto_key,\n    key: config.get('session_cookie_key'),\n});\ncsrf(app);\n\n// If a user is logged in, we need to make sure that they receive the correct\n// headers.\napp.use(function*(next) {\n    if (this.request.url.startsWith('/api')) {\n        yield next;\n        return;\n    }\n\n    const auth = this.request.query.auth;\n    if (auth) {\n        this.request.url = this.request.url.replace(/[?&]{1}auth=true/, '');\n        this.session['auth'] = true;\n        this.session.save();\n        this.request.query.auth = null;\n    }\n\n    yield next;\n});\n\nkoaLocale(app);\n\nfunction convertEntriesToArrays(obj) {\n    return Object.keys(obj).reduce((result, key) => {\n        result[key] = obj[key].split(/\\s+/);\n        return result;\n    }, {});\n}\n\n// some redirects and health status\napp.use(function*(next) {\n    if (this.method === 'GET' && this.url === '/.well-known/healthcheck.json') {\n        this.status = 200;\n        this.body = {\n            status: 'ok',\n            docker_tag: process.env.DOCKER_TAG ? process.env.DOCKER_TAG : false,\n            source_commit: process.env.SOURCE_COMMIT\n                ? process.env.SOURCE_COMMIT\n                : false,\n        };\n        return;\n    }\n\n    // redirect to home page/feed if known account\n    if (this.method === 'GET' && this.url === '/' && this.session.a) {\n        this.status = 302;\n        this.redirect(`/@${this.session.a}/feed`);\n        return;\n    }\n    // normalize user name url from cased params\n    if (\n        this.method === 'GET' &&\n        (routeRegex.UserProfile1.test(this.url) ||\n            routeRegex.PostNoCategory.test(this.url) ||\n            routeRegex.Post.test(this.url))\n    ) {\n        const p = this.originalUrl.toLowerCase();\n        let userCheck = '';\n        if (routeRegex.Post.test(this.url)) {\n            userCheck = p.split('/')[2].slice(1);\n        } else {\n            userCheck = p.split('/')[1].slice(1);\n        }\n        if (userIllegalContent.includes(userCheck)) {\n            console.log('Illegal content user found blocked', userCheck);\n            this.status = 451;\n            return;\n        }\n        if (p !== this.originalUrl) {\n            this.status = 301;\n            this.redirect(p);\n            return;\n        }\n    }\n    // normalize top category filtering from cased params\n    if (this.method === 'GET' && routeRegex.CategoryFilters.test(this.url)) {\n        const p = this.originalUrl.toLowerCase();\n        if (p !== this.originalUrl) {\n            this.status = 301;\n            this.redirect(p);\n            return;\n        }\n    }\n    // // do not enter unless session uid & verified phone\n    // if (this.url === '/create_account' && !this.session.uid) {\n    //     this.status = 302;\n    //     this.redirect('/enter_email');\n    //     return;\n    // }\n    // remember ch, cn, r url params in the session and remove them from url\n    if (this.method === 'GET' && /\\?[^\\w]*(ch=|cn=|r=)/.test(this.url)) {\n        let redir = this.url.replace(/((ch|cn|r)=[^&]+)/gi, r => {\n            const p = r.split('=');\n            if (p.length === 2) this.session[p[0]] = p[1];\n            return '';\n        });\n        redir = redir.replace(/&&&?/, '');\n        redir = redir.replace(/\\?&?$/, '');\n        console.log(`server redirect ${this.url} -> ${redir}`);\n        this.status = 302;\n        this.redirect(redir);\n    } else {\n        yield next;\n    }\n});\n\n// load production middleware\nif (env === 'production') {\n    app.use(require('koa-conditional-get')());\n    app.use(require('koa-etag')());\n    app.use(require('koa-compressor')());\n}\n\n// Logging\nif (env === 'production') {\n    app.use(prod_logger());\n} else {\n    app.use(koa_logger());\n}\n\napp.use(\n    helmet({\n        hsts: false,\n    })\n);\n\napp.use(\n    mount(\n        '/static',\n        staticCache(path.join(__dirname, '../app/assets/static'), cacheOpts)\n    )\n);\n\napp.use(\n    mount('/robots.txt', function*() {\n        this.set('Cache-Control', 'public, max-age=86400000');\n        this.type = 'text/plain';\n        this.body = 'User-agent: *\\nAllow: /';\n    })\n);\n\n// set user's uid - used to identify users in logs and some other places\n// FIXME SECURITY PRIVACY cycle this uid after a period of time\napp.use(function*(next) {\n    const last_visit = this.session.last_visit;\n    this.session.last_visit = (new Date().getTime() / 1000) | 0;\n    const from_link = this.request.headers.referer;\n    if (!this.session.uid) {\n        this.session.uid = secureRandom.randomBuffer(13).toString('hex');\n        this.session.new_visit = true;\n        if (from_link) this.session.r = from_link;\n    } else {\n        this.session.new_visit = this.session.last_visit - last_visit > 1800;\n        if (!this.session.r && from_link) {\n            this.session.r = from_link;\n        }\n    }\n    yield next;\n});\n\nuseRedirects(app);\nuseEnterAndConfirmEmailPages(app);\nuseEnterAndConfirmMobilePages(app);\nuseUserJson(app);\nusePostJson(app);\n\nuseAccountRecoveryApi(app);\nuseGeneralApi(app);\n\napp.use(function*(next) {\n    this.adsEnabled =\n        !(this.session.auth || this.session.a) && config.google_ad_enabled;\n    yield next;\n});\n\n// helmet wants some things as bools and some as lists, makes config difficult.\n// our config uses strings, this splits them to lists on whitespace.\nif (env === 'production') {\n    const helmetConfig = {\n        directives: convertEntriesToArrays(config.get('helmet.directives')),\n        reportOnly: config.get('helmet.reportOnly'),\n        setAllHeaders: config.get('helmet.setAllHeaders'),\n    };\n    helmetConfig.directives.reportUri = helmetConfig.directives.reportUri[0];\n    if (helmetConfig.directives.reportUri === '-') {\n        delete helmetConfig.directives.reportUri;\n    }\n\n    if (!helmetConfig.directives.frameSrc) {\n        helmetConfig.directives.frameSrc = [\n            `'self'`,\n            'googleads.g.doubleclick.net',\n            'https:',\n        ];\n    }\n\n    app.use(helmet.contentSecurityPolicy(helmetConfig));\n    app.use(function*(next) {\n        if (this.adsEnabled) {\n            // If user is signed out, enable ads.\n            [\n                'content-security-policy',\n                'x-content-security-policy',\n                'x-webkit-csp',\n            ].forEach(header => {\n                let policy = this.response.header[header]\n                    .split(/;\\s+/)\n                    .map(el => {\n                        if (el.startsWith('script-src')) {\n                            const oldScriptSrc = el.replace(/^script-src/, '');\n                            return `script-src 'unsafe-inline' 'unsafe-eval' data: https: ${\n                                oldScriptSrc\n                            }`;\n                        } else {\n                            return el;\n                        }\n                    })\n                    .join('; ');\n                this.response.set(header, policy);\n            });\n            yield next;\n        } else {\n            // If user is logged in, do not modify CSP headers further.\n            yield next;\n        }\n    });\n}\n\nif (env !== 'test') {\n    const appRender = require('./app_render');\n\n    // Load the pinned posts and store them on the ctx for later use. Since\n    // we're inside a generator, we can't `await` here, so we pass a promise\n    // so `src/server/app_render.jsx` can `await` on it.\n    app.pinnedPostsPromise = pinnedPosts();\n    app.use(function*() {\n        yield appRender(this, supportedLocales, resolvedAssets);\n        // if (app_router.dbStatus.ok) recordWebEvent(this, 'page_load');\n        const bot = this.state.isBot;\n        if (bot) {\n            console.log(\n                `  --> ${this.method} ${this.originalUrl} ${\n                    this.status\n                } (BOT '${bot}')`\n            );\n        }\n    });\n\n    const argv = minimist(process.argv.slice(2));\n\n    const port = process.env.PORT ? parseInt(process.env.PORT) : 8080;\n\n    if (env === 'production') {\n        if (cluster.isMaster) {\n            for (var i = 0; i < numProcesses; i++) {\n                cluster.fork();\n            }\n            // if a worker dies replace it so application keeps running\n            cluster.on('exit', function(worker) {\n                console.log(\n                    'error: worker %d died, starting a new one',\n                    worker.id\n                );\n                cluster.fork();\n            });\n        } else {\n            app.listen(port);\n            if (process.send) process.send('online');\n            console.log(`Worker process started for port ${port}`);\n        }\n    } else {\n        // spawn a single thread if not running in production mode\n        app.listen(port);\n        if (process.send) process.send('online');\n        console.log(`Application started on port ${port}`);\n    }\n}\n\n// set PERFORMANCE_TRACING to the number of seconds desired for\n// logging hardware stats to the console\nif (process.env.PERFORMANCE_TRACING)\n    setInterval(hardwareStats, 1000 * process.env.PERFORMANCE_TRACING);\n\nmodule.exports = app;\n"]}