{"version":3,"sources":["../../src/server/index.js"],"names":["steem","path","require","ROOT","join","__dirname","process","env","NODE_PATH","resolve","Module","_initPaths","WebpackIsomorphicTools","WebpackIsomorphicToolsConfig","global","webpackIsomorphicTools","server","api","setOptions","url","config","steemd_connection_client","retry","retries","factor","minTimeout","maxTimeout","randomize","useAppbaseApi","steemd_use_appbase","error","console","exit"],"mappings":";;;;;;AAEA;;;;AAEA;;IAAYA,K;;;;;;AAA+B;;AAJ3C;;AAMA,IAAMC,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,OAAOF,KAAKG,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAb;;AAEA;AACA;;AAEA;AACA,sBAAcC,QAAQC,GAAtB,EAA2B,EAAEC,WAAWP,KAAKQ,OAAL,CAAaJ,SAAb,EAAwB,IAAxB,CAAb,EAA3B;;AAEAH,QAAQ,QAAR,EAAkBQ,MAAlB,CAAyBC,UAAzB;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AAmBA,IAAMC,yBAAyBV,QAAQ,0BAAR,CAA/B;AACA,IAAMW,+BAA+BX,QAAQ,uCAAR,CAArC;;AAEAY,OAAOC,sBAAP,GAAgC,IAAIH,sBAAJ,CAC5BC,4BAD4B,CAAhC;;AAIAC,OAAOC,sBAAP,CAA8BC,MAA9B,CAAqCb,IAArC,EAA2C,YAAM;AAC7C;AACAH,UAAMiB,GAAN,CAAUC,UAAV,CAAqB;AACjBC,aAAKC,iBAAOC,wBADK;AAEjBC,eAAO;AACHC,qBAAS,EADN;AAEHC,oBAAQ,CAFL;AAGHC,wBAAY,EAHT,EAGa;AAChBC,wBAAY,KAAK,IAJd;AAKHC,uBAAW;AALR,SAFU;AASjBC,uBAAe,CAAC,CAACR,iBAAOS;AATP,KAArB;AAWA;AACA;AACA;;;AAGA;AACA;AACA;AACA,QAAI;AACA3B,gBAAQ,UAAR,EADA,CACwB;AAC3B,KAFD,CAEE,OAAO4B,KAAP,EAAc;AACZC,gBAAQD,KAAR,CAAcA,KAAd;AACAxB,gBAAQ0B,IAAR,CAAa,CAAb;AACH;AACJ,CA3BD","file":"index.js","sourcesContent":["// 服务器进程创建！\n\nimport config from 'config';\n\nimport * as steem from '@steemit/steem-js';// 开发前端取消链接steemit\n\nconst path = require('path');\nconst ROOT = path.join(__dirname, '../..');\n\n// Tell `require` calls to look into `/app` also\n// it will avoid `../../../../../` require strings\n\n// use Object.assign to bypass transform-inline-environment-variables-babel-plugin (process.env.NODE_PATH= will not work)\nObject.assign(process.env, { NODE_PATH: path.resolve(__dirname, '..') });\n\nrequire('module').Module._initPaths();\n\n// Load Intl polyfill\n// require('utils/intl-polyfill')(require('./config/init').locales);\n\n// FIXME:下面这段代码设置了全局的许多函数变量，主要是steem端需要的变量\n/*\nglobal.$STM_Config = {\n    fb_app: config.get('facebook_app_id'),\n    steemd_connection_client: config.get('steemd_connection_client'),\n    steemd_connection_server: config.get('steemd_connection_server'),\n    steemd_use_appbase: config.get('steemd_use_appbase'),\n    chain_id: config.get('chain_id'),\n    address_prefix: config.get('address_prefix'),\n    img_proxy_prefix: config.get('img_proxy_prefix'),\n    ipfs_prefix: config.get('ipfs_prefix'),\n    disable_signups: config.get('disable_signups'),\n    read_only_mode: config.get('read_only_mode'),\n    registrar_fee: config.get('registrar.fee'),\n    upload_image: config.get('upload_image'),\n    site_domain: config.get('site_domain'),\n    facebook_app_id: config.get('facebook_app_id'),\n    google_analytics_id: config.get('google_analytics_id'),\n};\n*/\nconst WebpackIsomorphicTools = require('webpack-isomorphic-tools');\nconst WebpackIsomorphicToolsConfig = require('../../webpack/webpack-isotools-config');\n\nglobal.webpackIsomorphicTools = new WebpackIsomorphicTools(\n    WebpackIsomorphicToolsConfig\n);\n\nglobal.webpackIsomorphicTools.server(ROOT, () => {\n    // 这里都是steem的设置和启动，开发前端已经注释掉\n    steem.api.setOptions({\n        url: config.steemd_connection_client,\n        retry: {\n            retries: 10,\n            factor: 5,\n            minTimeout: 50, // start at 50ms\n            maxTimeout: 60 * 1000,\n            randomize: true,\n        },\n        useAppbaseApi: !!config.steemd_use_appbase,\n    }); \n    // FIXME:下面同样是两段华景变量配置的代码\n    //steem.config.set('address_prefix', config.get('address_prefix'));\n    //steem.config.set('chain_id', config.get('chain_id'));\n    \n\n    // 下面是两段调试的代码，意义未明\n    // const CliWalletClient = require('shared/api_client/CliWalletClient').default;\n    // if (process.env.NODE_ENV === 'production') connect_promises.push(CliWalletClient.instance().connect_promise());\n    try {\n        require('./server');    // 调用server.js 启动服务器\n    } catch (error) {\n        console.error(error);\n        process.exit(1);\n    }\n});\n"]}