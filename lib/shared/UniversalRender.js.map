{"version":3,"sources":["../../src/shared/UniversalRender.jsx"],"names":["location","initialState","ErrorPage","userPreferences","offchain","requestTimer","error","redirect","renderProps","runRouter","RootRoute","console","toString","title","statusCode","body","server_store","onchain","url","getUrlFromLocation","startTimer","apiGetState","stopTimer","match","routeRegex","UserProfile1","UserProfile3","accounts","length","Post","key","content","PostsIndex","UserProfile2","PostNoCategory","params","substr","split","process","env","OFFLINE_SSR_TEST","get_content_perf","api","getContentAsync","author","permlink","pinned_posts","forEach","pinnedPost","rootReducer","app","global","dispatch","type","payload","pathname","appActions","setUserPreferences","msg","message","stack_trace","stack","status","meta","re","titleBase","Iso","render","getState","serverRender","get_state_perf","clientRender","testDataDir","OFFLINE_SSR_TEST_DATA_DIR","uri","__dirname","require","calcOffsetRoot","offset","el","startEl","offsetTop","offsetParent","SCROLL_TOP_TRIES","SCROLL_TOP_DELAY_MS","SCROLL_TOP_EXTRA_PIXEL_OFFSET","SCROLL_FUDGE_PIXELS","SCROLL_DIRECTION_UP","SCROLL_DIRECTION_DOWN","DISABLE_ROUTER_HISTORY_NAV_DIRECTION_EL_ID","scrollTopTimeout","scrollTop","topOffset","prevDocumentInfo","triesRemaining","documentInfo","scrollHeight","document","Math","ceil","scrollingElement","scrollTarget","direction","doScroll","window","scrollTo","setTimeout","OffsetScrollBehavior","element","target","clearTimeout","header","getElementsByTagName","offsetHeight","newTarget","getElementById","push","ScrollBehavior","bindMiddleware","BROWSER","NODE_ENV","composeWithDevTools","applyMiddleware","middleware","routes","args","resolve","onRouterError","sagaMiddleware","store","run","rootSaga","history","browserHistory","scroll","createScrollBehavior","config","shouldUpdateScroll","prevLocation","hash","disableNavDirectionCheck","action","log","indexOf","replace"],"mappings":"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","file":"UniversalRender.js","sourcesContent":["/* eslint react/display-name: 0 */\n/* eslint space-before-function-paren:0 */\n// https://github.com/eslint/eslint/issues/4442\nimport Iso from 'iso';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { renderToString } from 'react-dom/server';\nimport {\n    Router,\n    RouterContext,\n    match,\n    applyRouterMiddleware,\n    browserHistory,\n} from 'react-router';\nimport { Provider } from 'react-redux';\nimport { api } from '@steemit/steem-js';\n\nimport RootRoute from 'app/RootRoute';\nimport * as appActions from 'app/redux/AppReducer';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { useScroll } from 'react-router-scroll';\nimport createSagaMiddleware from 'redux-saga';\nimport { all } from 'redux-saga/effects';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport rootReducer from 'app/redux/RootReducer';\nimport rootSaga from 'shared/RootSaga';\nimport { component as NotFound } from 'app/components/pages/NotFound';\nimport extractMeta from 'app/utils/ExtractMeta';\nimport Translator from 'app/Translator';\nimport { routeRegex } from 'app/ResolveRoute';\nimport { contentStats } from 'app/utils/StateFunctions';\nimport ScrollBehavior from 'scroll-behavior';\nimport { getStateAsync } from 'app/utils/steemApi';\n\nlet get_state_perf,\n    get_content_perf = false;\nif (process.env.OFFLINE_SSR_TEST) {\n    const testDataDir = process.env.OFFLINE_SSR_TEST_DATA_DIR || 'api_mockdata';\n    let uri = `${__dirname}/../../`;\n    get_state_perf = require(uri + testDataDir + '/get_state');\n    get_content_perf = require(uri + testDataDir + '/get_content');\n}\n\nconst calcOffsetRoot = startEl => {\n    let offset = 0;\n    let el = startEl;\n    while (el) {\n        offset += el.offsetTop;\n        el = el.offsetParent;\n    }\n    return offset;\n};\n\n//BEGIN: SCROLL CODE\n/**\n * The maximum number of times to attempt scrolling to the target element/y position\n * (total seconds of attempted scrolling is given by (SCROLL_TOP_TRIES * SCROLL_TOP_DELAY_MS)/1000 )\n * @type {number}\n */\nconst SCROLL_TOP_TRIES = 50;\n/**\n * The number of milliseconds to delay between scroll attempts\n * (total seconds of attempted scrolling is given by (SCROLL_TOP_TRIES * SCROLL_TOP_DELAY_MS)/1000 )\n * @type {number}\n */\nconst SCROLL_TOP_DELAY_MS = 100;\n/**\n * The size of the vertical gap between the bottom of the fixed header and the top of the scrolled-to element.\n * @type {number}\n */\nconst SCROLL_TOP_EXTRA_PIXEL_OFFSET = 3;\n/**\n * number of pixels the document can move in the 'wrong' direction (opposite of intended scroll) this covers accidental scroll movements by users.\n * @type {number}\n */\nconst SCROLL_FUDGE_PIXELS = 10;\n/**\n * if document is being scrolled up this is set for prevDocumentInfo && documentInfo\n * @type {string}\n */\nconst SCROLL_DIRECTION_UP = 'up';\n/**\n * if document is being scrolled down this is set for prevDocumentInfo && documentInfo\n * @type {string}\n */\nconst SCROLL_DIRECTION_DOWN = 'down';\n\n/**\n * If an element with this id is present, the page does not want us to detect navigation history direction (clicking links/forward button or back button)\n * @type {string}\n */\nconst DISABLE_ROUTER_HISTORY_NAV_DIRECTION_EL_ID =\n    'disable_router_nav_history_direction_check';\n\nlet scrollTopTimeout = null;\n\n/**\n * raison d'être: support hash link navigation into slow-to-render page sections.\n *\n * @param {htmlElement} el - the element to which we wish to scroll\n * @param {number} topOffset - number of pixels to add to the scroll. (would be a negative number if fixed header)\n * @param {Object} prevDocumentInfo -\n *          .scrollHeight {number} - document.body.scrollHeight\n *          .scrollTop {number} - ~document.scrollingElement.scrollTop\n *          .scrollTarget {number} - the previously calculated scroll target\n * @param {number} triesRemaining - number of attempts remaining\n */\nconst scrollTop = (el, topOffset, prevDocumentInfo, triesRemaining) => {\n    const documentInfo = {\n        scrollHeight: document.body.scrollHeight,\n        scrollTop: Math.ceil(document.scrollingElement.scrollTop),\n        scrollTarget: calcOffsetRoot(el) + topOffset,\n        direction: prevDocumentInfo.direction,\n    };\n    let doScroll = false;\n    //for both SCROLL_DIRECTION_DOWN, SCROLL_DIRECTION_UP\n    //We scroll if the document has 1. not been deliberately scrolled, AND 2. we have not passed our target scroll,\n    //NOR has the document changed in a meaningful way since we last looked at it\n    if (prevDocumentInfo.direction === SCROLL_DIRECTION_DOWN) {\n        doScroll =\n            prevDocumentInfo.scrollTop <=\n                documentInfo.scrollTop + SCROLL_FUDGE_PIXELS &&\n            (documentInfo.scrollTop < documentInfo.scrollTarget ||\n                prevDocumentInfo.scrollTarget < documentInfo.scrollTarget ||\n                prevDocumentInfo.scrollHeight < documentInfo.scrollHeight);\n    } else if (prevDocumentInfo.direction === SCROLL_DIRECTION_UP) {\n        doScroll =\n            prevDocumentInfo.scrollTop >=\n                documentInfo.scrollTop - SCROLL_FUDGE_PIXELS &&\n            (documentInfo.scrollTop > documentInfo.scrollTarget ||\n                prevDocumentInfo.scrollTarget > documentInfo.scrollTarget ||\n                prevDocumentInfo.scrollHeight > documentInfo.scrollHeight);\n    }\n\n    if (doScroll) {\n        window.scrollTo(0, documentInfo.scrollTarget);\n        if (triesRemaining > 0) {\n            scrollTopTimeout = setTimeout(\n                () =>\n                    scrollTop(el, topOffset, documentInfo, triesRemaining - 1),\n                SCROLL_TOP_DELAY_MS\n            );\n        }\n    }\n};\n\n/**\n * Custom scrolling behavior needed because we have chunky page loads and a fixed header.\n */\nclass OffsetScrollBehavior extends ScrollBehavior {\n    /**\n     * Raison d'être: on hash link navigation, assemble the needed info and pass it to scrollTop()\n     * In cases where we're scrolling to a pixel offset, adjust the offset for the current header, and punt to default behavior.\n     */\n    scrollToTarget(element, target) {\n        clearTimeout(scrollTopTimeout); //it's likely this will be called multiple times in succession, so clear and existing scrolling.\n        const header = document.getElementsByTagName('header')[0]; //this dimension ideally would be pulled from a scss file.\n        let topOffset = SCROLL_TOP_EXTRA_PIXEL_OFFSET * -1;\n        if (header) {\n            topOffset += header.offsetHeight * -1;\n        }\n        const newTarget = []; //x coordinate\n        let el = false;\n        if (typeof target === 'string') {\n            el = document.getElementById(target.substr(1));\n            if (!el) {\n                el = document.getElementById(target);\n            }\n        } else {\n            newTarget.push(target[0]);\n            if (target[1] + topOffset > 0) {\n                newTarget.push(target[1] + topOffset);\n            } else {\n                newTarget.push(0);\n            }\n        }\n\n        if (el) {\n            const documentInfo = {\n                scrollHeight: document.body.scrollHeight,\n                scrollTop: Math.ceil(document.scrollingElement.scrollTop),\n                scrollTarget: calcOffsetRoot(el) + topOffset,\n            };\n            documentInfo.direction =\n                documentInfo.scrollTop < documentInfo.scrollTarget\n                    ? SCROLL_DIRECTION_DOWN\n                    : SCROLL_DIRECTION_UP;\n            scrollTop(el, topOffset, documentInfo, SCROLL_TOP_TRIES); //this function does the actual work of scrolling.\n        } else {\n            super.scrollToTarget(element, newTarget);\n        }\n    }\n}\n//END: SCROLL CODE\n\nconst bindMiddleware = middleware => {\n    if (process.env.BROWSER && process.env.NODE_ENV === 'development') {\n        const { composeWithDevTools } = require('redux-devtools-extension');\n        return composeWithDevTools(applyMiddleware(...middleware));\n    }\n    return applyMiddleware(...middleware);\n};\n\nconst runRouter = (location, routes) => {\n    return new Promise(resolve =>\n        match({ routes, location }, (...args) => resolve(args))\n    );\n};\n\nconst onRouterError = error => {\n    console.error('onRouterError', error);\n};\n\n/**\n *\n * @param {*} location\n * @param {*} initialState\n * @param {*} ErrorPage\n * @param {*} userPreferences\n * @param {*} offchain\n * @param {RequestTimer} requestTimer\n * @returns promise\n */\nexport async function serverRender(\n    location,\n    initialState,\n    ErrorPage,\n    userPreferences,\n    offchain,\n    requestTimer\n) {\n    let error, redirect, renderProps;\n\n    try {\n        [error, redirect, renderProps] = await runRouter(location, RootRoute);\n    } catch (e) {\n        console.error('Routing error:', e.toString(), location);\n        return {\n            title: 'Routing error - Steemit',\n            statusCode: 500,\n            body: renderToString(\n                ErrorPage ? <ErrorPage /> : <span>Routing error</span>\n            ),\n        };\n    }\n\n    if (error || !renderProps) {\n        // debug('error')('Router error', error);\n        return {\n            title: 'Page Not Found - Steemit',\n            statusCode: 404,\n            body: renderToString(<NotFound />),\n        };\n    }\n\n    let server_store, onchain;\n    try {\n        const url = getUrlFromLocation(location);\n\n        requestTimer.startTimer('apiGetState_ms');\n        onchain = await apiGetState(url);\n        requestTimer.stopTimer('apiGetState_ms');\n\n        // If a user profile URL is requested but no profile information is\n        // included in the API response, return User Not Found.\n        if (\n            (url.match(routeRegex.UserProfile1) ||\n                url.match(routeRegex.UserProfile3)) &&\n            Object.getOwnPropertyNames(onchain.accounts).length === 0\n        ) {\n            // protect for invalid account\n            return {\n                title: 'User Not Found - Steemit',\n                statusCode: 404,\n                body: renderToString(<NotFound />),\n            };\n        }\n\n        // If we are not loading a post, truncate state data to bring response size down.\n        if (!url.match(routeRegex.Post)) {\n            for (var key in onchain.content) {\n                //onchain.content[key]['body'] = onchain.content[key]['body'].substring(0, 1024) // TODO: can be removed. will be handled by steemd\n                // Count some stats then remove voting data. But keep current user's votes. (#1040)\n                onchain.content[key]['stats'] = contentStats(\n                    onchain.content[key]\n                );\n                onchain.content[key]['active_votes'] = null;\n            }\n        }\n\n        // Are we loading an un-category-aliased post?\n        if (\n            !url.match(routeRegex.PostsIndex) &&\n            !url.match(routeRegex.UserProfile1) &&\n            !url.match(routeRegex.UserProfile2) &&\n            url.match(routeRegex.PostNoCategory)\n        ) {\n            const params = url.substr(2, url.length - 1).split('/');\n            let content;\n            if (process.env.OFFLINE_SSR_TEST) {\n                content = get_content_perf;\n            } else {\n                content = await api.getContentAsync(params[0], params[1]);\n            }\n            if (content.author && content.permlink) {\n                // valid short post url\n                onchain.content[url.substr(2, url.length - 1)] = content;\n            } else {\n                // protect on invalid user pages (i.e /user/transferss)\n                return {\n                    title: 'Page Not Found - Steemit',\n                    statusCode: 404,\n                    body: renderToString(<NotFound />),\n                };\n            }\n        }\n\n        // Insert the pinned posts into the list of posts, so there is no\n        // jumping of content.\n        offchain.pinned_posts.pinned_posts.forEach(pinnedPost => {\n            onchain.content[\n                `${pinnedPost.author}/${pinnedPost.permlink}`\n            ] = pinnedPost;\n        });\n\n        server_store = createStore(rootReducer, {\n            app: initialState.app,\n            global: onchain,\n            offchain,\n        });\n        server_store.dispatch({\n            type: '@@router/LOCATION_CHANGE',\n            payload: { pathname: location },\n        });\n        server_store.dispatch(appActions.setUserPreferences(userPreferences));\n    } catch (e) {\n        // Ensure 404 page when username not found\n        if (location.match(routeRegex.UserProfile1)) {\n            console.error('User/not found: ', location);\n            return {\n                title: 'Page Not Found - Steemit',\n                statusCode: 404,\n                body: renderToString(<NotFound />),\n            };\n            // Ensure error page on state exception\n        } else {\n            const msg = (e.toString && e.toString()) || e.message || e;\n            const stack_trace = e.stack || '[no stack]';\n            console.error('State/store error: ', msg, stack_trace);\n            return {\n                title: 'Server error - Steemit',\n                statusCode: 500,\n                body: renderToString(<ErrorPage />),\n            };\n        }\n    }\n\n    let app, status, meta;\n    try {\n        requestTimer.startTimer('ssr_ms');\n        app = renderToString(\n            <Provider store={server_store}>\n                <Translator>\n                    <RouterContext {...renderProps} />\n                </Translator>\n            </Provider>\n        );\n        requestTimer.stopTimer('ssr_ms');\n        meta = extractMeta(onchain, renderProps.params);\n        status = 200;\n    } catch (re) {\n        console.error('Rendering error: ', re, re.stack);\n        app = renderToString(<ErrorPage />);\n        status = 500;\n    }\n\n    return {\n        title: 'Steemit',\n        titleBase: 'Steemit - ',\n        meta,\n        statusCode: status,\n        body: Iso.render(app, server_store.getState()),\n    };\n}\n\n/**\n * dependencies:\n * browserHistory\n * useScroll\n * OffsetScrollBehavior\n * location\n *\n * @param {*} initialState\n */\nexport function clientRender(initialState) {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        rootReducer,\n        initialState,\n        bindMiddleware([sagaMiddleware])\n    );\n    sagaMiddleware.run(rootSaga);\n    const history = syncHistoryWithStore(browserHistory, store);\n\n    /**\n     * When to scroll - on hash link navigation determine if the page should scroll to that element (forward nav, or ignore nav direction)\n     */\n    const scroll = useScroll({\n        createScrollBehavior: config => new OffsetScrollBehavior(config), //information assembler for has scrolling.\n        shouldUpdateScroll: (prevLocation, { location }) => {\n            // eslint-disable-line no-shadow\n            //if there is a hash, we may want to scroll to it\n            if (location.hash) {\n                //if disableNavDirectionCheck exists, we want to always navigate to the hash (the page is telling us that's desired behavior based on the element's existence\n                const disableNavDirectionCheck = document.getElementById(\n                    DISABLE_ROUTER_HISTORY_NAV_DIRECTION_EL_ID\n                );\n                //we want to navigate to the corresponding id=<hash> element on 'PUSH' navigation (prev null + POP is a new window url nav ~= 'PUSH')\n                if (\n                    disableNavDirectionCheck ||\n                    (prevLocation === null && location.action === 'POP') ||\n                    location.action === 'PUSH'\n                ) {\n                    return location.hash;\n                }\n            }\n            return true;\n        },\n    });\n\n    if (process.env.NODE_ENV === 'production') {\n        console.log(\n            '%c%s',\n            'color: red; background: yellow; font-size: 24px;',\n            'WARNING!'\n        );\n        console.log(\n            '%c%s',\n            'color: black; font-size: 16px;',\n            'This is a developer console, you must read and understand anything you paste or type here or you could compromise your account and your private keys.'\n        );\n    }\n\n    return render(\n        <Provider store={store}>\n            <Translator>\n                <Router\n                    routes={RootRoute}\n                    history={history}\n                    onError={onRouterError}\n                    render={applyRouterMiddleware(scroll)}\n                />\n            </Translator>\n        </Provider>,\n        document.getElementById('content')\n    );\n}\n\n/**\n * Do some pre-state-fetch url rewriting.\n *\n * @param {string} location\n * @returns {string}\n */\nfunction getUrlFromLocation(location) {\n    let url = location === '/' ? 'trending' : location;\n    // Replace /curation-rewards and /author-rewards with /transfers for UserProfile\n    // to resolve data correctly\n    if (url.indexOf('/curation-rewards') !== -1)\n        url = url.replace(/\\/curation-rewards$/, '/transfers');\n    if (url.indexOf('/author-rewards') !== -1)\n        url = url.replace(/\\/author-rewards$/, '/transfers');\n\n    return url;\n}\n\nasync function apiGetState(url) {\n    let offchain;\n\n    if (process.env.OFFLINE_SSR_TEST) {\n        offchain = get_state_perf;\n    }\n\n    offchain = await getStateAsync(url);\n\n    return offchain;\n}\n"]}