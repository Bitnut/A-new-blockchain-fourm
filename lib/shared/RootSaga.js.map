{"version":3,"sources":["../../src/shared/RootSaga.js"],"names":["rootSaga","userWatches","fetchDataWatches","sharedWatches","authWatches","transactionWatches","marketWatches"],"mappings":";;;;;;;;;;;;;;kBAQyBA,Q;;AARzB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;sDAEyBA,Q;;AAAV,SAAUA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACL,6DACCC,qBADD,oCAECC,+BAFD,oCAGCC,yBAHD,oCAICC,qBAJD,oCAKCC,mCALD,oCAMCC,yBAND,GADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"RootSaga.js","sourcesContent":["import { all } from 'redux-saga/effects';\nimport { fetchDataWatches } from 'app/redux/FetchDataSaga';\nimport { marketWatches } from 'app/redux/MarketSaga';\nimport { sharedWatches } from 'app/redux/SagaShared';\nimport { userWatches } from 'app/redux/UserSaga';\nimport { authWatches } from 'app/redux/AuthSaga';\nimport { transactionWatches } from 'app/redux/TransactionSaga';\n\nexport default function* rootSaga() {\n    yield all([\n        ...userWatches, // keep first to remove keys early when a page change happens\n        ...fetchDataWatches,\n        ...sharedWatches,\n        ...authWatches,\n        ...transactionWatches,\n        ...marketWatches,\n    ]);\n}\n"]}