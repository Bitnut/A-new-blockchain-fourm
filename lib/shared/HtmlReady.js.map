{"version":3,"sources":["../../src/shared/HtmlReady.js"],"names":["html","mutate","hideImages","state","hashtags","usertags","htmltags","images","links","doc","DOMParser","parseFromString","traverse","getElementsByTagName","image","pre","createElement","setAttribute","appendChild","createTextNode","getAttribute","parentNode","replaceChild","proxifyImages","XMLSerializer","serializeToString","error","console","log","message","Phishing","getPhishingWarningMessage","getExternalLinkWarningMessage","noop","xmldom","errorHandler","warning","node","depth","childNodes","Array","forEach","tag","child","tagName","toLowerCase","add","img","iframe","link","nodeName","linkifyNode","url","test","indexOf","textContent","match","looksPhishy","phishyDiv","ownerDocument","yt","youTubeId","id","url2","ipfsPrefix","linksRe","local","data","embedYouTubeNode","embedVimeoNode","embedTwitchNode","content","linkify","newChild","replace","space","tag2","trim","substring","tagLower","preceeding1","preceeding2","user","userLower","valid","preceedings","ln","thumbnail","m1","youTube","m2","length","vimeo","vimeoId","canonical","m","twitch","twitchId","$STM_Config","ipfs_prefix","slash","charAt"],"mappings":"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","file":"HtmlReady.js","sourcesContent":["import xmldom from 'xmldom';\nimport tt from 'counterpart';\nimport linksRe, { any as linksAny } from 'app/utils/Links';\nimport { validate_account_name } from 'app/utils/ChainValidation';\nimport proxifyImageUrl from 'app/utils/ProxifyUrl';\nimport * as Phishing from 'app/utils/Phishing';\n\nexport const getPhishingWarningMessage = () => tt('g.phishy_message');\nexport const getExternalLinkWarningMessage = () =>\n    tt('g.external_link_message');\n\nconst noop = () => {};\nconst DOMParser = new xmldom.DOMParser({\n    errorHandler: { warning: noop, error: noop },\n});\nconst XMLSerializer = new xmldom.XMLSerializer();\n\n/**\n * Functions performed by HTMLReady\n *\n * State reporting\n *  - hashtags: collect all #tags in content\n *  - usertags: collect all @mentions in content\n *  - htmltags: collect all html <tags> used (for validation)\n *  - images: collect all image URLs in content\n *  - links: collect all href URLs in content\n *\n * Mutations\n *  - link()\n *    - ensure all <a> href's begin with a protocol. prepend https:// otherwise.\n *  - iframe()\n *    - wrap all <iframe>s in <div class=\"videoWrapper\"> for responsive sizing\n *  - img()\n *    - convert any <img> src IPFS prefixes to standard URL\n *    - change relative protocol to https://\n *  - linkifyNode()\n *    - scans text content to be turned into rich content\n *    - embedYouTubeNode()\n *      - identify plain youtube URLs and prep them for \"rich embed\"\n *    - linkify()\n *      - scan text for:\n *        - #tags, convert to <a> links\n *        - @mentions, convert to <a> links\n *        - naked URLs\n *          - if img URL, normalize URL and convert to <img> tag\n *          - otherwise, normalize URL and convert to <a> link\n *  - proxifyImages()\n *    - prepend proxy URL to any non-local <img> src's\n *\n * We could implement 2 levels of HTML mutation for maximum reuse:\n *  1. Normalization of HTML - non-proprietary, pre-rendering cleanup/normalization\n *    - (state reporting done at this level)\n *    - normalize URL protocols\n *    - convert naked URLs to images/links\n *    - convert embeddable URLs to <iframe>s\n *    - basic sanitization?\n *  2. Steemit.com Rendering - add in proprietary Steemit.com functions/links\n *    - convert <iframe>s to custom objects\n *    - linkify #tags and @mentions\n *    - proxify images\n *\n * TODO:\n *  - change ipfsPrefix(url) to normalizeUrl(url)\n *    - rewrite IPFS prefixes to valid URLs\n *    - schema normalization\n *    - gracefully handle protocols like ftp, mailto\n */\n\n/** Split the HTML on top-level elements. This allows react to compare separately, preventing excessive re-rendering.\n * Used in MarkdownViewer.jsx\n */\n// export function sectionHtml (html) {\n//   const doc = DOMParser.parseFromString(html, 'text/html')\n//   const sections = Array(...doc.childNodes).map(child => XMLSerializer.serializeToString(child))\n//   return sections\n// }\n\n/** Embed videos, link mentions and hashtags, etc...\n    If hideImages and mutate is set to true all images will be replaced\n    by <pre> elements containing just the image url.\n*/\nexport default function(html, { mutate = true, hideImages = false } = {}) {\n    const state = { mutate };\n    state.hashtags = new Set();\n    state.usertags = new Set();\n    state.htmltags = new Set();\n    state.images = new Set();\n    state.links = new Set();\n    try {\n        const doc = DOMParser.parseFromString(html, 'text/html');\n        traverse(doc, state);\n        if (mutate) {\n            if (hideImages) {\n                for (const image of Array.from(\n                    doc.getElementsByTagName('img')\n                )) {\n                    const pre = doc.createElement('pre');\n                    pre.setAttribute('class', 'image-url-only');\n                    pre.appendChild(\n                        doc.createTextNode(image.getAttribute('src'))\n                    );\n                    image.parentNode.replaceChild(pre, image);\n                }\n            } else {\n                proxifyImages(doc);\n            }\n        }\n        // console.log('state', state)\n        if (!mutate) return state;\n        return {\n            html: doc ? XMLSerializer.serializeToString(doc) : '',\n            ...state,\n        };\n    } catch (error) {\n        // xmldom error is bad\n        console.log(\n            'rendering error',\n            JSON.stringify({ error: error.message, html })\n        );\n        return { html: '' };\n    }\n}\n\nfunction traverse(node, state, depth = 0) {\n    if (!node || !node.childNodes) return;\n    Array(...node.childNodes).forEach(child => {\n        // console.log(depth, 'child.tag,data', child.tagName, child.data)\n        const tag = child.tagName ? child.tagName.toLowerCase() : null;\n        if (tag) state.htmltags.add(tag);\n\n        if (tag === 'img') img(state, child);\n        else if (tag === 'iframe') iframe(state, child);\n        else if (tag === 'a') link(state, child);\n        else if (child.nodeName === '#text') linkifyNode(child, state);\n\n        traverse(child, state, depth + 1);\n    });\n}\n\nfunction link(state, child) {\n    const url = child.getAttribute('href');\n    if (url) {\n        state.links.add(url);\n        if (state.mutate) {\n            // If this link is not relative, http, https, or steem -- add https.\n            if (!/^((#)|(\\/(?!\\/))|(((steem|https?):)?\\/\\/))/.test(url)) {\n                child.setAttribute('href', 'https://' + url);\n            }\n\n            // Unlink potential phishing attempts\n            if (\n                (url.indexOf('#') !== 0 && // Allow in-page links\n                    (child.textContent.match(/(www\\.)?steemit\\.com/i) &&\n                        !url.match(\n                            /https?:\\/\\/(.*@)?(www\\.)?steemit\\.com/i\n                        ))) ||\n                Phishing.looksPhishy(url)\n            ) {\n                const phishyDiv = child.ownerDocument.createElement('div');\n                phishyDiv.textContent = `${child.textContent} / ${url}`;\n                phishyDiv.setAttribute('title', getPhishingWarningMessage());\n                phishyDiv.setAttribute('class', 'phishy');\n                child.parentNode.replaceChild(phishyDiv, child);\n            }\n        }\n    }\n}\n\n// wrap iframes in div.videoWrapper to control size/aspect ratio\nfunction iframe(state, child) {\n    const url = child.getAttribute('src');\n    if (url) {\n        const { images, links } = state;\n        const yt = youTubeId(url);\n        if (yt && images && links) {\n            links.add(yt.url);\n            images.add('https://img.youtube.com/vi/' + yt.id + '/0.jpg');\n        }\n    }\n\n    const { mutate } = state;\n    if (!mutate) return;\n\n    const tag = child.parentNode.tagName\n        ? child.parentNode.tagName.toLowerCase()\n        : child.parentNode.tagName;\n    if (\n        tag == 'div' &&\n        child.parentNode.getAttribute('class') == 'videoWrapper'\n    )\n        return;\n    const html = XMLSerializer.serializeToString(child);\n    child.parentNode.replaceChild(\n        DOMParser.parseFromString(`<div class=\"videoWrapper\">${html}</div>`),\n        child\n    );\n}\n\nfunction img(state, child) {\n    const url = child.getAttribute('src');\n    if (url) {\n        state.images.add(url);\n        if (state.mutate) {\n            let url2 = ipfsPrefix(url);\n            if (/^\\/\\//.test(url2)) {\n                // Change relative protocol imgs to https\n                url2 = 'https:' + url2;\n            }\n            if (url2 !== url) {\n                child.setAttribute('src', url2);\n            }\n        }\n    }\n}\n\n// For all img elements with non-local URLs, prepend the proxy URL (e.g. `https://img0.steemit.com/0x0/`)\nfunction proxifyImages(doc) {\n    if (!doc) return;\n    [...doc.getElementsByTagName('img')].forEach(node => {\n        const url = node.getAttribute('src');\n        if (!linksRe.local.test(url))\n            node.setAttribute('src', proxifyImageUrl(url, true));\n    });\n}\n\nfunction linkifyNode(child, state) {\n    try {\n        const tag = child.parentNode.tagName\n            ? child.parentNode.tagName.toLowerCase()\n            : child.parentNode.tagName;\n        if (tag === 'code') return;\n        if (tag === 'a') return;\n\n        const { mutate } = state;\n        if (!child.data) return;\n        child = embedYouTubeNode(child, state.links, state.images);\n        child = embedVimeoNode(child, state.links, state.images);\n        child = embedTwitchNode(child, state.links, state.images);\n\n        const data = XMLSerializer.serializeToString(child);\n        const content = linkify(\n            data,\n            state.mutate,\n            state.hashtags,\n            state.usertags,\n            state.images,\n            state.links\n        );\n        if (mutate && content !== data) {\n            const newChild = DOMParser.parseFromString(\n                `<span>${content}</span>`\n            );\n            child.parentNode.replaceChild(newChild, child);\n            return newChild;\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction linkify(content, mutate, hashtags, usertags, images, links) {\n    // hashtag\n    content = content.replace(/(^|\\s)(#[-a-z\\d]+)/gi, tag => {\n        if (/#[\\d]+$/.test(tag)) return tag; // Don't allow numbers to be tags\n        const space = /^\\s/.test(tag) ? tag[0] : '';\n        const tag2 = tag.trim().substring(1);\n        const tagLower = tag2.toLowerCase();\n        if (hashtags) hashtags.add(tagLower);\n        if (!mutate) return tag;\n        return space + `<a href=\"/trending/${tagLower}\">${tag}</a>`;\n    });\n\n    // usertag (mention)\n    // Cribbed from https://github.com/twitter/twitter-text/blob/v1.14.7/js/twitter-text.js#L90\n    content = content.replace(\n        /(^|[^a-zA-Z0-9_!#$%&*@＠\\/]|(^|[^a-zA-Z0-9_+~.-\\/#]))[@＠]([a-z][-\\.a-z\\d]+[a-z\\d])/gi,\n        (match, preceeding1, preceeding2, user) => {\n            const userLower = user.toLowerCase();\n            const valid = validate_account_name(userLower) == null;\n\n            if (valid && usertags) usertags.add(userLower);\n\n            const preceedings = (preceeding1 || '') + (preceeding2 || ''); // include the preceeding matches if they exist\n\n            if (!mutate) return `${preceedings}${user}`;\n\n            return valid\n                ? `${preceedings}<a href=\"/@${userLower}\">@${user}</a>`\n                : `${preceedings}@${user}`;\n        }\n    );\n\n    content = content.replace(linksAny('gi'), ln => {\n        if (linksRe.image.test(ln)) {\n            if (images) images.add(ln);\n            return `<img src=\"${ipfsPrefix(ln)}\" />`;\n        }\n\n        // do not linkify .exe or .zip urls\n        if (/\\.(zip|exe)$/i.test(ln)) return ln;\n\n        // do not linkify phishy links\n        if (Phishing.looksPhishy(ln))\n            return `<div title='${getPhishingWarningMessage()}' class='phishy'>${\n                ln\n            }</div>`;\n\n        if (links) links.add(ln);\n        return `<a href=\"${ipfsPrefix(ln)}\">${ln}</a>`;\n    });\n    return content;\n}\n\nfunction embedYouTubeNode(child, links, images) {\n    try {\n        const data = child.data;\n        const yt = youTubeId(data);\n        if (!yt) return child;\n\n        child.data = data.replace(yt.url, `~~~ embed:${yt.id} youtube ~~~`);\n\n        if (links) links.add(yt.url);\n        if (images) images.add(yt.thumbnail);\n    } catch (error) {\n        console.log(error);\n    }\n    return child;\n}\n\n/** @return {id, url} or <b>null</b> */\nfunction youTubeId(data) {\n    if (!data) return null;\n\n    const m1 = data.match(linksRe.youTube);\n    const url = m1 ? m1[0] : null;\n    if (!url) return null;\n\n    const m2 = url.match(linksRe.youTubeId);\n    const id = m2 && m2.length >= 2 ? m2[1] : null;\n    if (!id) return null;\n\n    return {\n        id,\n        url,\n        thumbnail: 'https://img.youtube.com/vi/' + id + '/0.jpg',\n    };\n}\n\nfunction embedVimeoNode(child, links /*images*/) {\n    try {\n        const data = child.data;\n        const vimeo = vimeoId(data);\n        if (!vimeo) return child;\n\n        child.data = data.replace(vimeo.url, `~~~ embed:${vimeo.id} vimeo ~~~`);\n\n        if (links) links.add(vimeo.canonical);\n        // if(images) images.add(vimeo.thumbnail) // not available\n    } catch (error) {\n        console.log(error);\n    }\n    return child;\n}\n\nfunction vimeoId(data) {\n    if (!data) return null;\n    const m = data.match(linksRe.vimeo);\n    if (!m || m.length < 2) return null;\n\n    return {\n        id: m[1],\n        url: m[0],\n        canonical: `https://player.vimeo.com/video/${m[1]}`,\n        // thumbnail: requires a callback - http://stackoverflow.com/questions/1361149/get-img-thumbnails-from-vimeo\n    };\n}\n\nfunction embedTwitchNode(child, links /*images*/) {\n    try {\n        const data = child.data;\n        const twitch = twitchId(data);\n        if (!twitch) return child;\n\n        child.data = data.replace(\n            twitch.url,\n            `~~~ embed:${twitch.id} twitch ~~~`\n        );\n\n        if (links) links.add(twitch.canonical);\n    } catch (error) {\n        console.error(error);\n    }\n    return child;\n}\n\nfunction twitchId(data) {\n    if (!data) return null;\n    const m = data.match(linksRe.twitch);\n    if (!m || m.length < 3) return null;\n\n    return {\n        id: m[1] === `videos` ? `?video=${m[2]}` : `?channel=${m[2]}`,\n        url: m[0],\n        canonical:\n            m[1] === `videos`\n                ? `https://player.twitch.tv/?video=${m[2]}`\n                : `https://player.twitch.tv/?channel=${m[2]}`,\n    };\n}\n\nfunction ipfsPrefix(url) {\n    if ($STM_Config.ipfs_prefix) {\n        // Convert //ipfs/xxx  or /ipfs/xxx  into  https://steemit.com/ipfs/xxxxx\n        if (/^\\/?\\/ipfs\\//.test(url)) {\n            const slash = url.charAt(1) === '/' ? 1 : 0;\n            url = url.substring(slash + '/ipfs/'.length); // start with only 1 /\n            return $STM_Config.ipfs_prefix + '/' + url;\n        }\n    }\n    return url;\n}\n"]}